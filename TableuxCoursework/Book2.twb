<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0330.1916                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
        <calculation class='tableau' formula='4' />
        <range max='45' min='1' />
      </column>
      <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
        <calculation class='tableau' formula='100' />
      </column>
    </datasource>
    <datasource caption='EstablishmentDetail+ (dat)' inline='true' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' version='9.2'>
      <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\dat.xlsx' interpretationMode='1' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
              <expression op='[Scores].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
                <expression op='[Geocode].[EstablishmentDetail_Id]' />
              </expression>
            </clause>
            <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
              <columns gridOrigin='A1:U1374:no:A1:U1374:1' header='yes' lost='0' outcome='1' processed='8177'>
                <column datatype='integer' name='FHRSID' ordinal='0' />
                <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
                <column datatype='string' name='BusinessName' ordinal='2' />
                <column datatype='string' name='BusinessType' ordinal='3' />
                <column datatype='integer' name='BusinessTypeID' ordinal='4' />
                <column datatype='string' name='AddressLine1' ordinal='5' />
                <column datatype='string' name='AddressLine2' ordinal='6' />
                <column datatype='string' name='AddressLine3' ordinal='7' />
                <column datatype='string' name='AddressLine4' ordinal='8' />
                <column datatype='string' name='PostCode' ordinal='9' />
                <column datatype='integer' name='RatingValue' ordinal='10' />
                <column datatype='string' name='RatingKey' ordinal='11' />
                <column datatype='string' name='RatingDate' ordinal='12' />
                <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
                <column datatype='string' name='LocalAuthorityName' ordinal='14' />
                <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
                <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
                <column datatype='string' name='SchemeType' ordinal='18' />
                <column datatype='string' name='NewRatingPending' ordinal='19' />
                <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
              </columns>
            </relation>
            <relation name='Geocode' table='[Geocode$]' type='table'>
              <columns gridOrigin='A1:C1374:no:A1:C1374:1' header='yes' lost='0' outcome='1' processed='4041'>
                <column datatype='real' name='Longitude' ordinal='0' />
                <column datatype='real' name='Latitude' ordinal='1' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation name='Scores' table='[Scores$]' type='table'>
            <columns gridOrigin='A1:D1374:no:A1:D1374:1' header='yes' lost='0' outcome='1' processed='5297'>
              <column datatype='integer' name='Hygiene' ordinal='0' />
              <column datatype='integer' name='Structural' ordinal='1' />
              <column datatype='integer' name='ConfidenceInManagement' ordinal='2' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[ConfidenceInManagement]' value='[Scores].[ConfidenceInManagement]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (Geocode)]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id (Scores)]' value='[Scores].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Hygiene]' value='[Scores].[Hygiene]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
          <map key='[Structural]' value='[Scores].[Structural]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8177</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Geocode)]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4041</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hygiene</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hygiene]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Hygiene</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Structural</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Structural]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Structural</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfidenceInManagement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfidenceInManagement]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>ConfidenceInManagement</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Scores)]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Scores]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1374:no:A1:D1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5297</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
      </column>
      <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
      </column>
      <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
      </column>
      <column caption='Confidence In Management' datatype='integer' name='[ConfidenceInManagement]' role='dimension' type='ordinal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Geocode)' datatype='integer' name='[EstablishmentDetail_Id (Geocode)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Scores)' datatype='integer' name='[EstablishmentDetail_Id (Scores)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='integer' name='[FHRSID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code numeric' datatype='string' datatype-customized='true' name='[Post Code (copy)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='tableau' formula='[PostCode]' />
      </column>
      <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating (string)' datatype='string' datatype-customized='true' name='[Rating (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([RatingValue])' />
        <aliases>
          <alias key='%null%' value='Exempt' />
        </aliases>
      </column>
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
        </aliases>
      </column>
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Business Type)' hidden='true' name='[Action (Business Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type,Rating Value)' hidden='true' name='[Action (Business Type,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating Value)' hidden='true' name='[Action (Latitude,Longitude,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating)' hidden='true' name='[Action (Latitude,Longitude,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating Value)' hidden='true' name='[Action (Post Code,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating)' hidden='true' name='[Action (Post Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.679083' measure-ordering='alphabetic' measure-percentage='0.275072' parameter-percentage='0.0458453' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BusinessType:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Takeaway/sandwich shop&quot;</bucket>
            </map>
            <map to='#2a2a2a'>
              <bucket>&quot;School/college/university&quot;</bucket>
            </map>
            <map to='#373737'>
              <bucket>&quot;Retailers - supermarkets/hypermarkets&quot;</bucket>
            </map>
            <map to='#464646'>
              <bucket>&quot;Retailers - other&quot;</bucket>
            </map>
            <map to='#555555'>
              <bucket>&quot;Restaurant/Cafe/Canteen&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;Pub/bar/nightclub&quot;</bucket>
            </map>
            <map to='#777777'>
              <bucket>&quot;Other catering premises&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;Mobile caterer&quot;</bucket>
            </map>
            <map to='#9b9b9b'>
              <bucket>&quot;Manufacturers/packers&quot;</bucket>
            </map>
            <map to='#aeaeae'>
              <bucket>&quot;Hotel/bed &amp; breakfast/guest house&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;Hospitals/Childcare/Caring Premises&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:RatingValue:ok]' type='palette'>
            <map to='#a50f15'>
              <bucket>0</bucket>
            </map>
            <map to='#bdbdbd'>
              <bucket>%null%</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>1</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>2</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>3</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>4</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>5</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated) 1' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='FilterSum 1 1' name='[Action11]'>
      <source type='sheet' worksheet='Q2 Table' />
      <link caption='FilterSum 1 1' delimiter=',' escape='\' expression='tsl:Q2%20Table?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2 Table' />
      </command>
    </action>
    <action caption='FilterSum 3 1' name='[Action12]'>
      <source type='sheet' worksheet='PiesB' />
      <link caption='FilterSum 3 1' delimiter=',' escape='\' expression='tsl:PiesB?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='PiesB' />
      </command>
    </action>
    <action caption='FilterSum 3' name='[Action13]'>
      <source type='sheet' worksheet='PiesA' />
      <link caption='FilterSum 3' delimiter=',' escape='\' expression='tsl:PiesA?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='PiesA' />
      </command>
    </action>
    <action caption='FilterSum 3 1 1' name='[Action14]'>
      <source type='sheet' worksheet='PiesC' />
      <link caption='FilterSum 3 1 1' delimiter=',' escape='\' expression='tsl:PiesC?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='PiesC' />
      </command>
    </action>
    <action caption='FilterSum 3 1 1 1' name='[Action15]'>
      <source type='sheet' worksheet='PiesD' />
      <link caption='FilterSum 3 1 1 1' delimiter=',' escape='\' expression='tsl:PiesD?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='PiesD' />
      </command>
    </action>
    <action caption='FilterSum 3 1 1 1 1' name='[Action16]'>
      <source type='sheet' worksheet='PiesE' />
      <link caption='FilterSum 3 1 1 1 1' delimiter=',' escape='\' expression='tsl:PiesE?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='PiesE' />
      </command>
    </action>
    <action caption='Filter Business 1' name='[Action17]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Q3' />
      <link caption='Filter Business 1' delimiter=',' escape='\' expression='tsl:Dashboard%203?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q3' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='FilterSum' name='[Action1]'>
      <source type='sheet' worksheet='Q2' />
      <link caption='FilterSum' delimiter=',' escape='\' expression='tsl:Q2?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2' />
      </command>
    </action>
    <action caption='Highlight Business' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='all' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter Quality' name='[Action3]'>
      <source datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' type='datasource'>
        <exclude-sheet name='Q2' />
      </source>
      <link caption='Filter Quality' delimiter=',' escape='\' expression='tsl:Q3?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BRatingValue%5D~s0=&lt;[RatingValue]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Filter Business' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q3' />
      <link caption='Filter Business' delimiter=',' escape='\' expression='tsl:Dashboard%201?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q3' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='FilterSum 1' name='[Action7]'>
      <source type='sheet' worksheet='Q2Bar' />
      <link caption='FilterSum 1' delimiter=',' escape='\' expression='tsl:Q2Bar?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2Bar' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <datasources>
      <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
    </datasources>
    <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
        </aliases>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='PiesA'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range max='45' min='1' />
            </column>
            <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
            </column>
            <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode - Split 1]' derivation='None' name='[none:PostCode - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]'>
            <groupfilter function='member' level='[none:PostCode - Split 1:nk]' member='&quot;SO15&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]'>
            <groupfilter expression='SUM([Number of Records]) &gt;= [Parameters].[Parameter 1] &#13;&#10;AND&#13;&#10;MIN([Calculation_181551367974154243]) &lt;= [Parameters].[Parameter 2]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:PostCode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='PiesB'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range max='45' min='1' />
            </column>
            <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
            </column>
            <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode - Split 1]' derivation='None' name='[none:PostCode - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]'>
            <groupfilter function='member' level='[none:PostCode - Split 1:nk]' member='&quot;SO16&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]'>
            <groupfilter expression='SUM([Number of Records]) &gt;= [Parameters].[Parameter 1] &#13;&#10;AND&#13;&#10;MIN([Calculation_181551367974154243]) &lt;= [Parameters].[Parameter 2]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:PostCode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
            <format attr='height' value='48' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='PiesC'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range max='45' min='1' />
            </column>
            <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
            </column>
            <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode - Split 1]' derivation='None' name='[none:PostCode - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]'>
            <groupfilter function='member' level='[none:PostCode - Split 1:nk]' member='&quot;SO17&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]'>
            <groupfilter expression='SUM([Number of Records]) &gt;= [Parameters].[Parameter 1] &#13;&#10;AND&#13;&#10;MIN([Calculation_181551367974154243]) &lt;= [Parameters].[Parameter 2]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:PostCode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
            <format attr='height' value='44' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='PiesD'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range max='45' min='1' />
            </column>
            <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
            </column>
            <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode - Split 1]' derivation='None' name='[none:PostCode - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]'>
            <groupfilter function='member' level='[none:PostCode - Split 1:nk]' member='&quot;SO18&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]'>
            <groupfilter expression='SUM([Number of Records]) &gt;= [Parameters].[Parameter 1] &#13;&#10;AND&#13;&#10;MIN([Calculation_181551367974154243]) &lt;= [Parameters].[Parameter 2]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:PostCode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
            <format attr='height' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='PiesE'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range max='45' min='1' />
            </column>
            <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
            </column>
            <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode - Split 1]' derivation='None' name='[none:PostCode - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]'>
            <groupfilter function='member' level='[none:PostCode - Split 1:nk]' member='&quot;SO19&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]'>
            <groupfilter expression='SUM([Number of Records]) &gt;= [Parameters].[Parameter 1] &#13;&#10;AND&#13;&#10;MIN([Calculation_181551367974154243]) &lt;= [Parameters].[Parameter 2]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:PostCode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
            <format attr='height' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range max='45' min='1' />
            </column>
            <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
            </column>
            <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]'>
            <groupfilter expression='SUM([Number of Records]) &gt;&#13;&#10;[Parameters].[Parameter 1] &#13;&#10;AND&#13;&#10;MIN([Calculation_181551367974154243]) &lt;= [Parameters].[Parameter 2]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:PostCode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='84' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2 Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
              </aliases>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[cum:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Columns' type='CumTotal' />
            </column-instance>
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]'>
            <groupfilter function='member' level='[none:RatingValue:ok]' member='2' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='133' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='108' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[cum:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.42779004573822021' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='10692' />
                <format attr='maxwidth' value='10692' />
                <format attr='minheight' value='1280' />
                <format attr='maxheight' value='1280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
              <calculation class='tableau' formula='4' />
              <range max='45' min='1' />
            </column>
            <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
            </column>
            <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:13]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]'>
            <groupfilter expression='SUM([Number of Records]) &gt; [Parameters].[Parameter 1] &#13;&#10;AND&#13;&#10;MIN([Calculation_181551367974154243]) &lt;= [Parameters].[Parameter 2]&#13;&#10;// MAX([Percentage of postcode]) &lt;= [Max % 5*]' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:PostCode:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' included-values='in-range'>
            <min>0.0625</min>
          </filter>
          <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' included-values='all' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='133' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='108' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='10692' />
                <format attr='maxwidth' value='10692' />
                <format attr='minheight' value='1280' />
                <format attr='maxheight' value='1280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
              </aliases>
            </column>
            <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' direction='ASC' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='104' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' value='348' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='36' />
            <format attr='width-header' value='28' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='center' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='center' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='12' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='-90' />
            <format attr='text-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='right' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <text column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok] / [excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk])</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
    </worksheet>
    <worksheet name='Temporary Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
              </aliases>
            </column>
            <column-instance column='[BusinessName]' derivation='Attribute' name='[attr:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='Attribute' name='[attr:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]' field-type='quantitative' max='-143636.91908350843' min='-167871.48005139796' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]' field-type='quantitative' max='6616756.2637349032' min='6595804.4719817881' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:BusinessName:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:PostCode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='83705' id='1' name='Q3' w='33793' x='66207' y='0' />
              <zone h='16295' id='7' name='Q2' show-title='true' w='100000' x='0' y='83705' />
              <zone h='83705' id='8' name='Temporary Map' w='66207' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='16550' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' w='8616' x='586' y='67473' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
          <calculation class='tableau' formula='1' />
        </column>
        <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:13]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Columns' type='PctTotal' />
        </column-instance>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='93028' x='0' y='0'>
              <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='93028' x='0' y='0'>
                <zone h='74984' id='1' name='Q3' w='31437' x='61591' y='0' />
                <zone h='74984' id='8' name='Temporary Map' w='61591' x='0' y='0' />
                <zone h='25016' id='9' name='Q2Bar' w='93028' x='0' y='74984' />
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='10' is-fixed='true' param='vert' type='layout-flow' w='6972' x='93028' y='0'>
              <zone h='7003' id='12' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' show-null-ctrls='true' type='filter' w='6972' x='93028' y='0' />
              <zone h='4838' id='13' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='6972' x='93028' y='7003' />
              <zone h='5157' id='14' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='6972' x='93028' y='11841' />
              <zone h='3693' id='15' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='6972' x='93028' y='16998' />
            </zone>
          </zone>
        </zone>
        <zone h='16550' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' w='8627' x='828' y='55124' />
      </zones>
    </dashboard>
    <dashboard name='TestDash'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='9' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='10' type='layout-basic' w='98000' x='0' y='0'>
              <zone h='14875' id='8' name='PiesA' w='98000' x='0' y='0' />
              <zone h='12500' id='17' name='PiesB' w='98000' x='0' y='14875' />
              <zone h='14250' id='18' name='PiesC' w='98000' x='0' y='27375' />
              <zone h='13500' id='19' name='PiesD' w='98000' x='0' y='41625' />
              <zone h='44875' id='20' name='PiesE' w='98000' x='0' y='55125' />
            </zone>
            <zone fixed-size='20' h='100000' id='11' is-fixed='true' param='vert' type='layout-flow' w='2000' x='98000' y='0'>
              <zone h='18375' id='13' name='PiesA' pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' w='2000' x='98000' y='0' />
              <zone h='15125' id='14' name='PiesA' pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' w='2000' x='98000' y='18375' />
              <zone h='10125' id='15' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='2000' x='98000' y='33500' />
              <zone h='7250' id='16' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='2000' x='98000' y='43625' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='42'>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2 Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temporary Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Q2'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Q2Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='TestDash'>
      <viewpoints>
        <viewpoint name='PiesA'>
          <zoom type='fit-width' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='PiesB'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='PiesC' />
        <viewpoint name='PiesD'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='PiesE'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='PiesA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='PiesB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='PiesC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='PiesD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='PiesE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABnWAAAZ1gEY0crt
      AAAgAElEQVR4nOy9d3Rc6Xmn+VTOuQoooJALOTOAzdSM3a1RS2qFtYLHPpbkI51dhwlaz9qe
      492z40l7xmd2vF6vvfLuztjy2LIsWVJPt9RSk83UJEESAEkAJEBkFIgqpMo5V+0fQJfIZrOb
      bBYAgqznHJ7Dqrp1v/de3K+++/3u+/4+QT6fz1OixHOKcLsDKFFiOyl1gBLPNaUOUOK5ptQB
      SjzXlDpAieeaUgco8VxT6gAlnmtKHaDEc02pA5R4ril1gBLPNeJH2SgajW52HCU+hD/44U3m
      fMntDuOZ5JE6gEqlAiDsXeK7f/d9Flc8CIUiWrr38aUvfArJxjjiWXJw9vQp4ooKXj5xhEqz
      DoBTp07xyiuvfOwgs3EP1yf97Ott+vANk25OXV3klaO7C2/Nzsxib7RvfDzL+dkEn9jf8cBX
      33zjTT7z2mc+doybyZwvyehKYrvDeCYRPE4y3He//Uf45fV85sR+MukEf/0Xf8LJX/kdXuyp
      L2zjHLtKUNdOhdDDjYm7hONplMIE2ayA1sZqRmZWkEplVJvkeNZWECh1SLWV3Lh8nr2ddmQ6
      AyH/GnmJnmQqiyIfx2TUgUTExPwadnsTMbeD5SUXdQ12JpfDSAU5KjRCUtk0oYQAg7WBW9fO
      s7+3jblAmo5KLcuBGDpZnoEpD3qVlF/58hcILk3xVv8Edrud6eF+zCYDltoWZmcdkMuilGSQ
      a4wgVXPy8L7NOP+PxGv/x5lSB9gkHmsOYLFYmJsa58rVK1y7dpUVfwKLUfeB2wa8fsQyCYFA
      gHg0SjSRwbfiRKJQEotFCIXDiMiRlJpZGz2NxWpjKS4gHQ0jFkEwCqJsmIxQSiSVo8ZqRacU
      s7KySCSSIJuMEklkaOvei04pIZyCo0f2o9bZCM9dpqyskkl/Fr1MwLInyLETx1GJ8zS2d2Ex
      qAGQqg1YdEqWV1bQmqwcO7CL2ckJ6jv7qNRKiSLn8LHjJELeJz/TJZ5KHmsEIJ/l9vAN5u66
      EIhldHTvoqHaet8moTUnCbkFaWKN4TsOlBo9Jp0So0pMJK9gYfoO2rIqJKkAgXgKs6WGRHCN
      Bns1jrU48rSflUAco9lC3juPsHoP6nwEk07BwPVb2Oqb8btmSGfzmMsr0ZgriflX0MlF3J67
      S3V1E6ngCjX2OmadQVTiLBVlOq4NjtDU3ERCIEeQCGNvtJOOh7kycB2zrR5RNoG9yoIzmGXN
      MYlQZcQ3P4HUaKK5fReVZm2xz/0jUxoBNo/H6wBbSpr+/pscOLgPwTZFMDs5SW1Ly6NNlDaR
      UgfYPB6pA5RUoO0l+d++hSwwvd1hbB7lXfCP/rdtafqxVKCPIuQc409+OMD/8s++znf+9N9x
      8qt/QNXGncO9StDszAyzs7O88olPfOQ+b92+RVdn1yO1/8wSmEa1dmO7o9g8FEpQivh3/+rf
      A3m+/i/+FZUa0ZY0XfTRXS3M4gl4SQuUeO6Oc/2ui2w2iyDm5uyZt1Ea6witOYA8b/zD9xBK
      pOw99ipWnYQ3fvhjpCotVTYLHo+HTF7BzPQkAe8yyRRoLeWMXrlKW2sD/hRIZWpCrknaXzhO
      e2NtsQ+lxFYikPMHf/iH/Pkf/RuEW3jPW/QnwV097fzoe6/T2tnKqmuJ3gNHkYtySFR6jh07
      hnfl7saWKVZWgyhlYry+EJBEqiqjt82O2xdCIhYQjGVoqK9mxbWMSq0iGPBTY28lEwujUKqI
      RUJoLZWli/+ZIM9//fYf0/fpr2JVb82vPxR5BJBpLTQ2VWDWKKm0aJDqKxm7eYVqeyuSdJCL
      F69y8MUj+FYWAairqmHZF8VebQEE1NrUzK2FqK8w4fREaG0yk4n46OpsY2Jyho6uHuLBENUV
      u7g6eJ3WtnYkpIp5CCW2iXzCz1o4T+TCW9RWfYMyrWRL2n2KVaAS7xH98+PP9hyg9jB8/afb
      0vR2K3wlnkaO/j4c/5fbHcWWUNQOkM/E+clPfo5GbyCFlFqzFo0ixd1EGfs7qh5rX7dv3aKz
      6371xzk7g8XeiOyJI80wO+vEbq974j2V2NkUtQOszt7G2rafvpYK3nr9vzGyPIO9vopxxyIL
      kzepNcmIpEBrqeH2wDu8/NpXsBll/OiN02gMJqx6Gd61FcSmeu7cGmHNOU9WIKSitpaL796g
      Sq9FPjtGRqInlxUgirnJpmKY2o6zv6OKv/p//5yy8nKMRhOTS2EqdGKEQgGGilpuXDiPXCmn
      qrYcibaamMfJlUuXqGxoRJkLrcdlMjN1a5zKhkZOvLi/mKemxFNKUVUgtcGM370C+TyJbBaL
      yUq5RU971x4MaimLBTXHR1VtE9VWM9mYH31VK821NgIb+UGxrIj6aitLKyuoVEr8Xh/21i4s
      BhUgYO/Bo0hyCfISJS/s6iy0b6qo5sjeDlyrHrr27MfvXkGlUhH0e7FWN1Bjs3HwxGGiXh/k
      xdTVVbDoXOLue3H5Q4X3ShOj54OijgDqsnoafbe48O677D96EnHcgzsUp8qiJSG3Y+ppZ3h8
      ho6uPcQDawBI9NWYxVfxxXSUGY0E4moqLQZCohhtzceYcSzTu6sLnz+JLKslSRalCOx2O4E1
      FwMjY5R3vQyAf22JG3NmTh49RFyopObEcW5NOujo3UVgzY1MLECEDLu9FoEgi3dlifbWZhor
      detx9fTinLxNe2vztqVflNhadrQKdGf0Bt5wihcO7EcihMnJSVpaWrY7rKKz5SrQczQJ3tEd
      4HmhJINuHo91C5TNZsjl7u8vIpEIoXB9KpF0z/KXP7tOR62ZWF7BJ44deGAfH6TufBSB5TnC
      EisrM6PIZOAOJgl5PZz41OfQydefGl4++zaWhi6a6yoBiHvmuLWYwLUwi0ErR2Wupa+7+cF4
      bt+ms7PzgfdLbDH5xNOfC/SD//zH/OjMEBLxL7729X/6B7z0Qvt924UjUcy2Cn72xj8gEEoo
      r6xkYm4Zu72e8aHLkM/h9vlI5qQIMhE6bDqcERibXaK7sYpoxItAZWXq+lU0Wg01VSYS6gxK
      wHF3jdc++xoAUd8Spy5NEAjHSQWWUKlV/Pj2LaRSGTa9HBJedh35JHVGMZDn4tlTLC0t0dbW
      yq27fqSCHJnQCqSjTLsCSKUy1ERIIcRSXkF//yhajZwv/+qX2Zrnks8x25QL9Fgd4Mu//k9w
      uP6QT/zqb7OryfaB29Q3d9Ag8+MWylhZWaWx0U44xUbl1RqVtQ1kklGkEjGrK370KjGpdAqQ
      0tGzj5x/BrEIPP4g1qoGGsoERNBSZlQQDegRC5ZJZPK47gwRygoRiGUEA8vU2mrJx4NIFFpi
      4SAJrZzqMgvOlRWq1QYGbt4iHEuTjgeJpvK0de/FM3sTlNWkQ57C94LBVeobGwn4vVQ1tFAm
      CBGHUgfYdHZALpBALOc3//nvEMt8sHoqUhqwV2VorGonOjzK8WPHcCz76G1tZHRkhMr6eiSp
      AKmskGwyTFtrE9JclJVgmJq6KpBqSQqNrATitFQaEeYEGFQCyhV6Jsfv0L7nAMqWCq5dvoBc
      a6ajvozA8B3aO9qwGnXU11QQvTpITWsbRrUMW5UNz9BVLl2dZ3ffPsavX0Wn7aG8vByFXonO
      bkdKGqFST3R6kprWNspVbYzPOOnq6cXrS6ASJIrw4K3ER1HKBSrxUEqT4M2jlAtU4kGeIxm0
      qB3goSpQMsCtu2G6mqrXX4bWcDpdOBNaju62P3Y7t2/fRhBZQm4/it1SukEp8fHZlBHg/SqQ
      pczE2FKK6Mo0K0tLNLa14fVHyIgzfO/7w0jEEnTyHBJzLStTo+grG/jEiRfv2+fSzCjXZ9bI
      5vLEPXepsBjwDFzitiCPXpwoKDdXro7y333plygzPFoZZ4nnm6JXhNU3d9BUaSCzoQKplDKy
      ObBaLYTDMXLpOOHoehFLzLdCJC1EmIkRzSnZv6+b+ro6VhedJPLgW3bw/R+9RQZYca7Qd+QY
      UtKYrNVYDGp27TuMQpzDtbyKWqUi4Pdib+0qXfwlHpmijgAPU4Hae3YzPjaFyKRHrdNSXl6+
      /vBMpsF2d4KkUEWFUYMIIWKpmMb2VmQCkFfU8aUv1AHQfeAQV69eoq65A40gji8cw6AUYbfb
      6WmzF5SbYChdzEMq8YxTUoF2AKVcoM2j1AF2AM+8DLqNFHUO4Fly8P3v/D985/tvsuQJFt4/
      derUE+03G/cwMPwIxlBJN6cu3H+hzM7M3vPxLG9fHfvAr775xptPFGOJnUnRR4CSO3TxKY0A
      m8emrRBTcocusRMo+nMAraUKqVyGVFrGXZ+DjrbW+9yhE9N3qGlt23CHVlNpMZKQH3rAHbql
      0kLeG0NY3YM6H0EilyMVS6jfcIfW6DrW3aEN6zk9OrmIi4MT1Nc2kdL3PeAOffHsOZqaW7AL
      5AgS8vWDl8iRSsVU1q+7Q4uUBvoOH2PNMYmsvA79/ARXLr3Lrn2Hin2aSjwlPMWT4JI79HuU
      boE2j5I79A7gX1/61ziiju0O4wFaja38bt/vbncYT0TJHXoH4Ig6GA+Pb3cYD6BUKlFtk6tz
      sSi5Q5d4MrapkqtYlNyhSzwh21PJVSxK7tAlnojtquQqFk+xClTiPb78oy8/lXOAveV7+ct/
      9JfbHcYTsd0KX4kdzNDqEF3fKZ5Aceurt4q2r0elqHOApHuWP/mL7/CzN3/IlZGZwvtXT50i
      tPF/z9wt/r+/+THJh+zj/Xk/M7Mz93ya5M033gYg4llkfvnh+Uan3n77SQ6lxDbxnW//MX/8
      H/4N12c9W9JeUW+Bku5Zvnd+gs4qOaGUmDQaZEkPkCAiViNChlEpIupbJi3XIRAr0YkSrC4v
      UVXXwI2pJXrqK4AEc54sYjKoZQI0MgGJbB5/XMDa3DQGo57GhgrWsnqSK3PINQZyZBEL4JVX
      jnLq1FUWZoYpL69k38uvYdXu7LLJp/UWqNisjwBp/sPvf4sT3/hf6Wu0bHqbRVeBFCo1Nc27
      OX6gk1wmSyqdBkS8cOgY2XiAHCAUSNh/5BipkJdIJEI+myQYSdDRs4+MQIBBJqRj1z7U0nVd
      LRDLcuzIAaRCsNU20mm3IFLoKTdrkOur6GquJZODfC5HLpsmnYWK6gZ2t1ax6o0U+xBLbCJX
      rgzxT7/133PpwtUtaa/oFWG7uzVYTAYgj0k5TlRioNZmZvL6JTp27UGcg4xZz60rF+nuO4j3
      7h2UGh0mczkKvRZ0VShFGTIqGXK7nbwASEY4f+kaiOQ0N1RiUAkQq83ML65QbRaz6IvR0WxH
      rxTx7pVbNLXU4nXOMh+ScKjdVMxDLLHJ6KRZ/u7no3ztK1/ckvZ2hArkmp9iZnGVnj370Kt2
      9u3Mx+H5ugXaWnZEB3jeeV46wHawNb5A91Byhy7xNLElvkAld+gSTytb4gv0MHfogN9PPpff
      cIdm3R06FUMsAv+GO3RXYxkiuYEyowKBVI9YkCWRyTN7a5Cpu8sb7tABygru0OsVZ4kc2Mos
      rK6skE1FuXLt2gPu0DqlBJP1PXfo9e/d6zFU1dBCY5mBeLFPUomnhseaA8RDHt76+TuU1bVz
      eF831y+9g66mi6aacgAyUR8Of4bGKgvDw6PoleJ1d+ieTkZHRjDbfuEO7Q2G0RlMSHNR/MEw
      NXX2dXdor4OVQByj+Rfu0MJ73aHzEa4N3Sy4Qw8M30Gq1BTcofuvDqItq8KollFVZWNk6CqB
      WKbgDp3J5amoqkGhLyfmXym4Q89PT6Itq6JcxYbHUEfBHbo4S7N+fEpzgM3jsTrAP/yXP2bC
      L6VMEsXQcpjQ+CmqDnyRT+zv2MwYn3tKHWDzeMwlknJodAa++rXf4B/+y58yMrNM1YPz3BJF
      ptXYilKp3O4wHqDV2Mrv7fu97Q7jiXisDvCpX/oV/u57b5ISCPnH3/hN1N//W/RqReHzVMDF
      6+eGqTAqUBir2dvVtP5BJo7LG8NWvv5QKhlaY2nVRxANvQ9ZaebDcLlcpINLSCp7sOmlj/39
      ncaEb+IpHgFy/NW3/4xQSsiv/8ZvopbsrKqYx+oAaoOVb/7GNzdeSfjsV7523+f5dIJ4BnRa
      La61VQYvO/FHUthrLFyeDNBsAn8wQkdnG4FAgBA5fv7WCCKlFosyTwQ12dAaCaHyAXfosMdF
      /407KLVGnFM3qbAY8DrCWAx6TLIUS94gLe1tXL18nWMvv1IyyN0q8hlefu0rXPnpX7McTNNk
      3lk/SEVXgfQmC94VJy3tHdweH0clBW8wRrm1HJlMRirsZWnVSyiWJOCaYjmUIeZeYmElyp59
      vQgFORLRGOn3uUPfGR5l7/GXiARWC+7QvX2HSIQ9jNwaQ61WMD81idZSXbr4txKBlPlbF8lY
      d+24ix+K3AEEEjmV1jKOvfJJpm8P09XZRSKdp7LWTj7qw+32otIZkEll6HV6alu6qDLKkGpN
      2CpMiMiRzoBMKkYAGCvq+NIXXkUMtPV2M3TuHVS6MqxGDaGUELlEgMFgoLe7k0Q8ibWqBpNB
      V8xDKvER5BNevvfGOfzOSdZ2oDN3KRViB/C0qkDPQkXYplkjliixEyhqB0gFXHz/xz/l4oWz
      DN26x805E8e1+gt/zWRojfnpCYanXcVs/rGIuR2MO9z3vZdLRVl2B+55J0v/6Tcf2O5JSAVc
      Dx73+85Pia2jqLlAm6kCuRenGZl2UlZZRyrswayCGCom553odToqtEKcq37sHT0MX7qARq0E
      pYJoOIVQLKGnsYJZ1xpKXTkB5yRlRjVrKTXxSJCEe55IChqrdAzdTWARxcjJNOxrNJGRqLl2
      tR+Xw4xGLmJPZz39A7dxR1LodTrs5WpmnKvU2DuYuHEBo8FAJCcnFQ0jEIrZ29PInVkXUqWO
      pPcuZWYdrpCIdCwMkeX7zk+9NkM0J+OVl46WhuYtYseoQBKpjFg0SiqdxOfzEQn6CIdCNHbt
      Ix72MTJyG5VahWNuCoXWglqco+fASRRSIVpRjrRIglQixbm4QF6iwF5byZX+y1TY9IyPzyMl
      QTCWxVpegZAs0WicicUATdU62rr2kEtF0AmT/OTcDWxWHXWtu8lFgwyOjKBWqVlwzCFXGTAq
      hTT3HECukFKlFRFIi5BJJbici2SEclrqq7nW34+lsvKB8yMSQjIaJZUt9l+lxMPYMSpQIh5H
      qVFDHqTCLI7lAFIRDA9cRqMvo7eni0QiQbm1CpPJgNZgRiIAo9GIzmAg6PeSzefRajSYTCbE
      MhVf/MovM3Vris4uO+m8mKq6epKhVdI5ITKJGKVWi0KuQauSYTQaad21h4A/hE4mZPT6FaQ6
      E329PSQSCSzlVkwmEyqtAblEgNFoRKMzEAv6SWXzaLXr7Qokcr7wlV/GMTbyvvPjJ5XOIZNJ
      EOysZ0k7mh2tArkd4wQklTTZ9FvS3vStQfK6WspEQZbSetrrNr9oG0oq0GayozvA88LT2gE0
      Eg0txpbtDuOJKOok2LPk4HL/FdISHQcPHaLSvP5QanBwkL6+vo+/42yUsek1OlrrP3y7VIDB
      cTd9vU2Ft2ZnZrE32jc+djGylKavve6Br/b393Pw4MGPH+NzSDgdZmh1aLvDeCKK2gHMlXXs
      aVshqGtHnvLwztmbiOVqUhE/A/3vUlffwNDIGAZzBSpBDI/Xj6msHInexvTIAC21lcTyEPJ7
      MZTZSKYEyPMxNAohWaGS02fOYbZWE3M7CISjtDTZGXesolaqKNcIWPWsEoqLkKmUOMaH6LDX
      MB/MoBRlGJtzrq8RNu3B7XLw6svHiPmXuTg0jsFsZX5yjGjQT2vvHsZGRhBKleilGSKpPAZr
      DbvaG4t5qko8JWye2iYQIpNJcTqdRP0rzK1FuHvnBgK5BpdrEYlUhlSQYiUuxDH0NsvuCLOe
      IFq5FIlUwKIrjN+9yJo/wGooRb1FSzwWJZVKIJPLSQRWca16qWrqJh0P4lwLcOL4i2h05SyP
      X2BlJcCo008u6md0ysFLJ09SXa6nsa0LUW69Ak0klpKKx0imUmhNVo7sbeXyuXNYW/aiz0WY
      8yc5euIEywuPsEJliR1J0WuCZSotKpmYkDtAMpNFp9VgNdkwygWkZFp8C4uYTBa8Hjd5mQqd
      XEFEruVzn+zm9t0wPq+HfF6GRifDkBeQ1LeiyodIxWMoVGoEZPG4faj1JhRyBRq5hKzRiEYm
      4OyFATSmBuIxNZ95rYfhKTcGJVRZNJx+5x0sejVGrQpERgDSqThShQqBAEzmdYWmuXs3K5ND
      CCQq9OkVzl84T3VDW7FPU4mnhKd4Epzm1FvnOPHJVxBvkyw42N9Pz8GDbHeO49M6CX4WKK0R
      tgN498//kOjy/Iduo//855HYHr+46HmnqGuE3auy3KeqvK8iLOCaxo2FVGCJWDxK394PUohS
      DA6O09fXSyK4ypl3B2jsfoGW2jKIuRl0RD9QzbmXgvqUDvPG6QE+/erJByY9LpcLm1X/aCrT
      vd+x2XCMD25JVVrdtTm4/cEr3L9HzZf/J5ZDKd6+eovO3cc4uq902/YoFD0XaHxsAmU+ytKq
      h4HL5wlGk9RYDVybi9BszBOMZ2msMhCW60mFQ0yN3cTn8bC7bx+D1wZQao1UGaQsrHoIJ6T0
      Abl0nOm5BZp7NwqQM0muXL6Ed8lBuVZEFC2C6BqRFOzqbWP41hQCsZx8KsLwQD8KmQBvPMvl
      s6cIRhL07urkztQCZrOZa1eu8sqLe5CozPzs7VNE4hnqbBb6epoYHF8l4p4jhZTWehszi0uY
      zVauXB3gm9/8GtGQnwnHJSwGPTpRHE8wSmNbC2ueFJJ0AIVGxtLSKtVNnczfvglSNSdOHmGz
      FhJSlTVwuCfG4OxsqQM8IpviDq3X6xEJwBeKc/JgF/NON+VWM2PjkyhEGeburpCJrCBWW7HY
      6jiyy85bb7xJKCPGvbTEhHONkyeOo9nwIrlw5SZHXujm0uV+3rtfa2rvwSyKMbMUZc++pkI+
      z7zTi1wmw+V0kon6GZ1bo7m+mkqbFZlMQdi7SCQrX1eUckIaGmpZC6eILd5h1+GX0cgF+Hw+
      yKXxLc8xPu+FRBB3JEMsGicnlNBQW1m4iN+rSlvyhTh58iDjN27gC4QJ+HxIZVKi8SSBhXHm
      vXESwWW80VyxT3mBXD5PVX0rq4szH71xCWATcoHq62qx2WyUl5kxahWc6R+ld+9e8tEwnZ1t
      JLMCampriQaiNLfUkktEuHhzjldf+zRGGWhNRtprKzhz9gJSzfqDtIbaanyRFEaFiHg6D2IZ
      /uV5vDk1jTYTIpSFfB61LE8smUGr02KpauDlPjuTS2GMailubwCdwUIyHNhQlEAuziNWamnp
      6uHmxdM4V/zYLFouXBvFUFFPl72MvFiJWgoq9fqtoDifI5WnkPdjMBioNGo5c6aftn2HIbKE
      OxQnEU+gVilRWOqwl6kRKw3o5JunPIeWZvjBGz+nd+/+TWvjWeMpVoG2lpD7LtdGZ1FpjRzs
      69nucO7jzi/90kfPAb7zHVQv7NuiiJ4dSmuEbaC11PDyyZrtDqPEFlPU8TjmdvA3P1pfm+v0
      69/FHfvFZ4ODg4X/z87MMHTP6w/D5dq+qrGdxszwJf7s2/83FwbubHcoO4aijgCZZJSFeQeJ
      dIL5OQd1nlWuT4wiV+sJOKcIh/xUNfUS8vvx+XxcPneaSAoOHz+BSirk0rl3iCTzVNnK8Hg8
      aPTlDA4McPTwLlxLXupa2rl19TLNrU0sLnswV9QQXp6i3N5dWiybkgr0cSj6jKy3vZafvv5z
      ato6mbo9TPfBk8SDXuRaIydOnmT29o11lYV4QblxuLxAlGhKxZFD+xCJxEikYlwrPurrq7g9
      cguVWs3C/Hq116pjDrlGjWtxgWReUrr4NyipQI9PUUcAsUyFrbGLhfHrtNZWINTXMNp/BrnG
      iCjp4/zZszR17SGw4gBA06UhHEtRbtYBUtSyKO/2D6HXSMjnRWg0cgTxOG1d3bg9fiyV1SRD
      Uey2Oq7fcWCyWJAJMsU8hB1NaGmGN29OllSgx6CkAu0ASirQ5lFSgXYw5f/y95G1rt/ry9ta
      tzmanUmRO0CO/vNnSSFGZ6mkQq9CQozVj1E/+16+zb04Z2eKtFhFhtlZJ3Z73RPvaTuRtbaV
      fvWfkKJ2AJ/jNjlDI8d66vjJ668zGw9RX1/FqGMcl8NMnUXBwpKXupYexgbPsPvQy1SX6Thz
      +gwZsYIKvQyP109ZTROXL/dzoNvOqj9CR08nly4MUKY3sOJbIRjLotKYEMbc+IMBqjsO015n
      4c0ffQ+pQkdjQw2j0y5qrHr8/gD2jh5uXjyPRC5Dq1Firmsl5l1jfmYSoVJHtVG6HldzG46J
      MYRKHSdeLN1HPw9sqv+SwWTFatEXfHWGC2rODHKVgWqrmZR/EYGpgQO7uxFtVIm5Aknqq8oZ
      uT2OWiVlbmoGraUaOSn8fh/d+48SdLvwR5K80NVIKJoEQKzUcXRvE0PDt6hu6WHmzljBK0ii
      0KNVKNl/fD/O6Xn8/jCCXJpoLPGLuBxzhfdKE6Png6KOAMa6LsTvnuPChQVsTe2osyFW/Um0
      ZhkioxF7VRmLq34slQ2kQuvrLkoN1eSvn+VqeA0lsfUqMZmYcD5PV1cn/mCY6gY7/mAOVTqP
      mHTB7yeXiNA/NIKp7QQAK3fnuCgQsm93NxmljN6eLpa8QcqrG5AJPSglIBCIMRr1kI3j86eR
      ioW09nbjXPVjKa9keSGGVFzyZXte2NEq0JWLZ4nEUvQdeQm9QvzMOjs8TAUqKT9Pzo7uAM8L
      D+sAstZWRFrNNkT07FDUW6BUwMXf/+wKZo2Ext5DNFWZARgfHKSurw8lEHU7OD24wKuvHv3g
      Wtv3eQDNzM7QaH/PkiRFf/8IBw/2kYr6CaZlWPTri8e933toaHCQvU/iRbQDSE5MbHcIO56i
      jgBJ9yznZxMcbdNy+tI4VlsDknSAsH+FiESF2ViBKBHE610BuRZjWRXZ4BK+QDUeClkAACAA
      SURBVJjmliZujs/TXmMhlM7h8UdRqdSoZKCVCVhyBxAqtUwMDmKrq6e2XI4zbUaVWCaWEZMj
      i8VooK+vh8HBcUaH3sVW18yLL72CSrKz7+kf5UFYiY9H0a+MiZEhro7e5aUjvYXKqBxiDhw5
      gds5TyoPUqGcw8dPsHp3FplMTi4RYNG1SkV9B8FEBrMoTl37HlIRH36fD8eSl+PHDxH3B6is
      baTeIiIr1VNulBIXmHjxwG7yeTZyjHL4fEFsdU3sspuZKKK3f4lnj8caAfLZFKOjt6lpaKD/
      3Bnk5hpOHO7jPdeS+60HM7z9k58TimdorjPjjmbQGy0oxRJSoRV8iRyGsip8d+8gFIDKUIa6
      rAFibnSSFGl9Mx7HGHkBaKUClnx+gjEhZXotlXoQaiuYX/IhCK8Qy0rQG9SYFSIWvWEkCh2e
      hXHkGhMvnny5NAKUeCiP1QF++nd/wZnhu+SjXjr3n2Ss/21+9X/8t+xutG5mjIzdHMDtD1HT
      sosGm2lT23oaKXWAzeOxJsGRSJimnv2c6KxAYaxgdugMiURqs2Ir0LGrJPWV2BweqwO89uWv
      8e7QBC3de3Hcuc6ul77I/o5flBE+dKX4e/igHJ+PIh7yEBNo8CzOoNXIGJ91kU6mOP7SS8hE
      6zdgd4YHEOmraK6rBCAbdTO9nGBp/g5CkZCqxm4aa8qKEk+JZ4eiq0DfOz/BrsZyXL4EZnka
      fyRFe0crY3dmMJjLGB+6zN4XDuD2+VDqyhFmo9SZVbhjcGdmgRqriWgkgKm6iekbA0iVGir0
      AoIKO8qMj9XVVV777GdJRILEY2GGRtc9gFbnx9h/6DBTc3cxmCswCOMEYyF0DQdorVTh9we4
      fXOQYCRBZ1sjo7PLqJUqVh1jHDh8lPGpWQzmCrTCWGHV+SuXrqPUqPnUqy9v65pdpVugzWNL
      1ghzuNwbLswZKmvq0akVhfW6fD4fiUiQUDhERX0HBo0CiVTAwtxdJAo9dWYRGYmB8jIDCOUI
      NtYPSkSChGKZggdQma2WgHO64D4dSOXRy947vDwej7vgC7TqDRVcpU3WajyO8cL37l11XqGv
      wCzKESn2SSrx1FDUB2HvrRG2t6WHU2f76ersIhiOYdOriYbWXZj1ahnzd10glqDVaFAK4txx
      LFPV0ApKBT7n7IY7tBxJTolaB0qlmenxG7T1HaHequKdM+fIZvN0NVkLHkAGg5E2eyW+63cw
      mcxotRqam3fxzjvnWBoXUt/Wids7ic5gQSqTod5wlZYJMii0NfgWXJhMFsprzKz6Q1RW1yAJ
      ZNEhKhVNPMOUUiF2AKVboM2j9ONW4qnk3mq3zaTouUAfqAK9zx06GVpjadVHEA29TY+vwLhc
      LtLBpS1xZi6xPcha21gUJblwY4Kqxi7wzTK/EuRXv/E/oC+iveSOWSk+7HHRf+MOSq0R59RN
      KiwGvI4wFoMekyxVUG6uXr7OsZdfoczwaJbuJZ5eNBUNfOPXuvlP3/5bFOIcXzzWztv943z5
      RGfR2tgxK8XfGR5l7/GXiARWMVmrsRjUBWfme5UbraW6dPE/I1j0Cv7of/8zvvrrX9+0NrZE
      BaptteMbn8Gd8BdWilfIFOjKqlAuzpDJq7AYtQ9ZKb4OgLbebvrPvYNKV4ZekiIUi6LfcGau
      sugKyk0ourPzfkr8gp/94G9AoWFwaJi6ch1/f+4Ov/bNo0Vto6QC7QCeRxVoq6rdSipQifvQ
      fe5z6D7/+e0OY8t8jnakClQMYm4HjqjqPr+iXCrKajBNhUW/8U6W/tNvoW/a/9i+Rg8jFXAx
      7ub+437f+dlOJDbbc1VnvGNUIPfiNCPTTsoq60iFPZhVEEPF5LwTvU5HhVaIc9WPvaOH4UsX
      0KiVoFQQDacQiiX0NFYw61pDqSsn4JykzKhmLaUmHgmScM8TSUFjlY6huwksohg5mYZ9jSYy
      EjXXrvbjcpjRyEXs6aynf+A27kgKvU6HvVzNjHOVGnsHEzcuYDQYiOTkpKJhBEIxe3sauTPr
      QqrUkfTepcyswxUSkY6FIbJ83/mp12aI5mS88tLRbc09ep7YMSqQRCojFo2SSifx+XxEgj7C
      oRCNXfuIh32MjNwueAAptBbU4hw9B06ikArRinKkRZJC/lFeosBeW8mV/stU2PQFl+pgLIu1
      vAIhWaLROBOLAZqqdQVfI50wyU/O3cBm1VHXuptcNMjgyAhq1bqnkFxlwKgU0txzALlCSpVW
      RCAtQiaV4HIukhHKaamv5lp/P5bKygfOj0gIyWiUVLbYf5USD6Poa4RVWss49sonmb49TFdn
      F4l0nspaO/moD7fbW1CB9Do9tS1dVBllSLUmbBWmh6hAryIGEvE4So0a8iAVZnEsB5CKYHjg
      Mhp9Gb09XSQSCcqtVZhMBrQGc8E/SGcwEPR7yebzaDUaTCYTYpmKL37ll5m6NVVYX6yqrp5k
      aJV0TohMIkap1aKQa9CqZBiNRlp37SHgD6GTCRm9fgWpzkRfbw+JRAJLuRWTyVRYN8xoNKLR
      GYgF/aSyebTa9XYFEjlf+Mov4xgbed/58ZNK55DJJAi2aWHw55EdrQK5HeMEJJU02fQfvXER
      mL41SF5XS5koyNLH8Dv9uGylCmT+rd/C8k9+e0vaehrY0R3geWErO4CkshJJ1fNTIFTUSbBn
      ycHl/iukJToOHjpEpXl9mdP3e/Y8Nu/zCnooqQCD4276en9RiTY7M4u90b7x8b1F+/fzrLrK
      PS7ppSXSS0vbHcaWUdQOYK6sY0/bCkFdO/KUh3fO3kQsV5OK+Bnof5e6+gaGRsYwmCtQCWJ4
      vH5MZeVI9DamRwZoqa0kloeQ34uhzEYyJUCej6FRCMkKlZw+cw6ztZqY20EgHKWlyc64YxW1
      UkW5RsCqZ5VQXIRMpcQxPkSHvYb5YAalKMPYnBOdLM/AtAe3y8GrLx8j5l/m4tA4BrOV+ckx
      okE/rb17GBsZQShVopdmiKTyGKw17Gpv/OgTUGLHsXlqm0CITCbF6XQS9a8wtxbh7p0bhcor
      yYYT9EpciGPobZbdEWY9QbRyKRKpgEVXGL97kTV/gNVQinqLdn1191QCmVxOIrCKa9VbqOxy
      rgU4cfxFNLpylscvsLISYNTpJxf1Mzrl4KWTJ6ku19PY1oUot17ILxJLNyrVUmhNVo7sbeXy
      uXNYW/aiz0WY8yc5euIEywvTm3aaSmwvRX8SLFNpUcnEhNwBkpksOq0Gq8mGUS4gJdPiW1jE
      ZLLg9bjXnaDlCiJyLZ/7ZDe374bxeT0bFWEyDHkBSX0rqnyIVDy2sbp7Fo/bh1pvQiFXoNmo
      7NLIBJy9MIDG1EA8puYzr/UwPOXGoIQqi4bT77yDRa/GqFWByAhAOhVHqlivVDOZ1xWa5u7d
      rEwOIZCo0KdXOH/hPNUNpRUXn1We4klwmlNvnePEJ19BvE2y4GB/Pz0HD36wh+kW8jzmAm0V
      j9QBotHoVsRS4iFc+/bPSSyHtqSt1v1WNCbFlrT1NPBIt0Aq1aPl19+rsnykqpIMMeOOohAI
      sdnKC9+/N08mGXCxEBBwd/o2IiHUtXWz7Fjk4ME+QmtOnCtulBUt1FmUj6U0jY2NkU9G8IYT
      iOQ6Dr/Qe9/na85Z5BY72ocsRnb+9E9IIyOFhE+9fOxD2/qofT0Ky/FyAhHDx9/BY9DTtQtz
      o4pv/8f/k1/+vX/B1R9/l0nHGl/5xm9RrpFsSQxbSdFzgcbHJlDmoyytehi4fJ5gNElTcxOT
      0/MYzFb8zkmEUgVtba0sLi4yN+ujt9mE1x/EXl+D15vi53PjaAxmtIIkkWgA++5j1Bsl+ANe
      Tl0fwOd109tRh8/nJyld5c7QFIsrHsxaOXPOFcrLK3EtLZMTiDHJ86AtI7p2lxRSjh3pIxKN
      srIW4bOfPonf72dy9DrLHi+m6iZmbg5SXqZH5Q3jXPWjUqkxyTK4AwGU5kb29zYRTuT4zGde
      4sc/+CFXLp5DdM/+6yu0zK5EC7lAbXYznmiOJZeTsspavIuTpJDS2VzDndn13Kbuj5J3txiP
      y8Hyqo8UWc6dv0RdUxupdAZ49jpA0VUghUqNXq9HJABfKM7Jg12M3nEU1JacWMnLR/cyemOE
      lEhKVbkVqUyGILV+wQlFErKpOPFkimgWVIUJQB6P11dwh3athYilsszfGaH1hRPYa6xMOZY4
      efIlLDoFCrmMRZcTXzTJviYT4/NeSAS50n+TmpaWQrqBx+NBKJEWvIgUWgs6OQQCwYJD9ZI3
      xPFDu/EHwwCkon5On36Hjr4DBN+3/+k55325QEtuP3nRRh5TcLGwnTucKeQ2PW1YaprpstuA
      PHJ9BZ8/2sHFG1PbHdamUPSKsPq6Wmw2G+ULC4jzKc70j9LeZGd2fhGBAHwrdzlzUcCuvl04
      gym8gbt43AlkKh1yhQKBREhCqkAsyKPV6mlt6ub0mXPMi4Q09uzBZA6j0oIAFUKRmLrmNqYG
      zxFJ5tjTYuOdd06j1xsIx5LotDpMJhMoLXTZy4ilcigNJip0OurKFZw/fx6p2og44S14ESlF
      UlSqNJm0BJVMjNFoRCpIc+HSNfKydRvIipqmwu1d0L103/5rrPfkAolBKIB8aiOPSWGhy54k
      lsqhllLIbXoasdhsSBHT11XPD8+P8flf++Z2h7QpbLkKtBOfuN4cuIw/FKVl10FsJvWWt/+3
      //YSAefmmxADfO5bu7C1bM1842lgyyvCdtrFD7Br36HtDuGJ+dy3dj3Sdubqre/g20lR5wCp
      gIvBcQew/ktfIBPHteotvAy4ppl2BRgbG2dwaPBhe2NwcBiARHCVn775JpMLa+sfxdyFdj6M
      wcGNfafDvPHWGXIfsI3L5VrPNZqY/8j93fcdwDE+iCuwNb/MT4qtxYDBmuUH7/wAW7Oat8/+
      LW8NnMbWYrjvn0z57E10P4wtUYFqrAauzUVoNuYJxrM0VhkIy/WkwiGmxm7i83jY3bePwWsD
      KLVGqgxSFlY9hBNS+oBcOs703ALNvQfWG8okuXL5Et4lB+VaEVG0CKJrRFKwq7eN4VvrjtH5
      VIThgX4UMgHeeJbLZ08RjCTo3dXJnakFzGYz165c5ZUX9yBRmfnZ26eIxDPU2Sz09TQxOL5K
      xD1HCimt9TZmFpcwm61cuTrAN7/5NaIhPxOOS1gMenSiOJ5glMa2FtY8KSTpAAqNjKWlVaqb
      Opm/fROkak6cPIKomCf9MZiZniYYChOaG0Jcux/V3SuspqB8u5/0bSNbogLNO92UW82MjU+i
      EGWYu7tCJrKCWG3FYqvjyC47b73xJqGMGPfSEhPONU6eOI5mQzu/cOUmR17o5tLl/sKcsam9
      B7MoxsxSlD37mgpVXfNOb8ExOhP1Mzq3RnN9NZU2a8EdOpKVr+cV5YQ0NNSyFk4RW7zDrsMv
      o5EL1tcay6XxLc/9QrWJZIhF4+SEEhpqKwsX8XveREu+ECdPHmT8xo3C2mhSmZRoPElgYZx5
      b5xEcBlv9IPGoa2he+8BzFr5+otS0Q2wCRVhBRWozIxRq+BM/yi9e/eSj4bp7GwjmRVQU1tL
      NBCluaWWXCLCxZtzvPrapzHKQGsy0l5bwZmzF5Bq1tOpG2qr8UVSGBUi4uk8iGX4l+fx5tQ0
      2kyIUBaqutSyfMEx2lLVwMt9diaXwhjVUtzeADqDhWQ4sJFXBHJxHrFSS0tXDzcvnsa54sdm
      0XLh2iiGinq67GXkxUrUUlCp1x8IivM5UnkK1V8Gg4FKo5YzZ/pp23cYIku4Q3ES8QRqlRKF
      pQ57mRqx0oCuiLZ+HwebzYa2YS+puX5CyrLn+tcfnupcoK0l5L7LtdFZVFojB/t6tjuc+yiG
      CvRb3z5RpGieLUq+QBtoLTW8fLLmozfcZlr3W2k9ULHdYTwzFHU8jrkd/M2P3gbg9OvfxR37
      8O3j/iXevjDwgZ+9p7Q8Kq6ZO/iTH35/XVCFdjAakxyjJcIPT/8dPxs484CK87B/JT6Yoo4A
      mWSUhXkHiXSC+TkHte4lbk5PIBDLkeVC5HJgbeoivOZGL0njDvlI5w288/bbRNNweE8z18fm
      UClV3L4zxe7uNnqaKhl3BZkam6S1qYZlj5+KGjvOiRtYKyvxhhKYrdUkw0Eyi6dJ5YVYa9rw
      3h0nGEmwb38fN4fH0BjLCLtXOH+xnxqLmtl7vHwqK2sIJZJYq5vpaKwq5inZFHJCOb/29W/w
      7T/9T9sdyo6n6DOy3vZafvr6z6lp6ySXFxQUmWA0xbETB1iYnMHnCxAO+DCYLVRYrciVClad
      Tm6MTvHiSydpb2uhvqocn89HLh0nGAqjtVTjmJtBo1axuOBAKFfR1FC7USW2nk8TTuY4ceJl
      FqaHC4rPwOAovS++RJu9GsfUKDmJhpvv8/JpqK0kFo2TSsaLfTo2BZXexJt//X9x/NNf3u5Q
      djxF7QBimQpbYxdiqZDW2goyMX9BkTGZzCCUYDRYkBBh0R1CqdSgFGXwBSOY9DpaO1u4ePod
      5pc8CPJ5jFoF10an0Wk1mAw69u7uJZ5IYLGUYzKZClVi+YQfvaWWeMjHhfNnaGjpLCg+zW2t
      DF88zdT8ErsPvYI85aWz634vn3gsXlB4dgKO4Xe5sRBkdPjGdoey43mmVKCdmGf0KNyrAvV9
      qo59n2nY5oieHZ4pFehZvPjfz8SVFVzTgY/czlyl5sUvNW9BRDubonaAmNvBjy5O8qtf+ASn
      X/8uva/8YyzK9c/urdianZnB7/ez9xEquEorud9P2Jcg7Et89IYb4/rf/uc/xxOX8Ju//c1n
      sJzlydlUFajOs8r1iVHkaj0B5xThkJ+qpl5Cfj8+n4/L504TScHh4ydQSYVcOvcOkWSeKlsZ
      Ho8Hjb6cwYEBjh7ehWvJS11LO7euXqa5tYnFZQ/mihrCy1OU27tpb6wt5qE8M7hW1shlRUTT
      oC/1gAfYVBVo6vYw3QdPEg96kWuNnDh5ktnbN9ZzbYgX8nccLi8QJZpSceTQPkQiMRKpGNeK
      j/r6Km6P3EKlVrMwv+78vOqYQ65R41pcIJmXlC7+h5Fyk8BIQ4WSu6vh7Y7mqaSoI8B7KtDC
      +HVaaysQ6msY7T+DXGNElPRx/uxZmrr2EFhxAKDp0hCOpSg36wApalmUd/uH0Gsk5PMiNBo5
      gnictq5u3B4/lspqkqEodlsd1+84MFksyASZYh7Cs4VET6UeVuNSXjErtzuap5JnSgV6Vvk4
      uUCVTXo+/zu7NymiZ4dnSgV6Xvmg/CCpsvSnfRSKPAfI0X/+Hc6fP8/NsSlWXC68rmnGHe7H
      3tMH5QI5Z2cojodChtlZR1H29DSgMcmxNcv5y7/+j5y73Y+txYClWrPdYe0Iivoz4XPcJmdo
      5FhPHT95/XVm4yHq66sYdYzjcpipsyhYWPJS19LD2OAZdh96meoyHWdOnyEjVlChl+Hx+imr
      aeLy5X4OdNtZ9Ufo6Onk0oUByvQGVnwrBGNZVBoTwpgbfzBAdcdh2ussvPmj7yFV6GhsqGF0
      2kWNVY/fH8De0cPNi+eRyGVoNUrMda3EvGvMz0wiVOqoNkrX42puwzExhlCp48SL+4t5ajad
      uGsCZ1LCbn0p8e1x2NTqDIPJitWiL6yxNVxQc2aQqwxUW82k/IsITA0c2N2NaMMx2hVIUl9V
      zsjtcdQqKXNTM2gt1chJ4ff76N5/lKDbhT+S5IWuRkLR9XFBrNRxdG8TQ8O3qG7pYebOWGHd
      MIlCj1ahZP/x/Tin5/H7wwhyaaKxxC/icswV3ttpE6NIVsa3/vk/Y2LoIuntDmYHUdQOYKzr
      Qhyc48KFC9ia2qmxGln1JwtrbO3q7SaRiGOxVq779QBSQzV53zxXh8fwv+cYLRMjyOfp6uok
      kUhjrarCZNChNRgw3LP2l14lo39oBIFw/TBW7s5x8cYs+3Z3o1PK7l83zLy+VphAIMZo1GPQ
      qcggRioW0vteXJaywns7DbVGy89++F/RVTWVHng9BjtaBbpy8SyRWIq+Iy+hV4ifi1ygD6KU
      H/Tx2dEd4Hnh7b8aJuZ7eLGP1iR/rhydPw4ao5y2gw9W0n3sSbBzdoyEzEJjVVnhvVTAxd//
      7ApmjYTG3kM0VZkBGB8cpK6vDyUQdTs4PbjAq68e/WDf/fetBzYzO0Oj/b3liVL0949w8GAf
      qaifYFqGRb/+gOf97tBDg4OPlGu0E/A4Ix86Ajw/K3p9fCqb9E/eAX7013/GpeFZAGKREDmh
      jK/+xrc41LN+gebTCcrq2zjapuX0pesEPA1I0gHC/hUWzp3FbKxAlAiiws+Fs2cxllWRDS7h
      C4Rpbmni5vg87TUWIukcPz3lQKVSo5LB5K0hltwBhEotE9cH8Xnd1JbLcabNqBLLxDJicmQ3
      OkEPg4PjjA5dwePx8uJLr6CS7Lx7+hJbw2NdGcc/8RpWg5rW3oN84ZNH+dSXvvrAiosTI0Nc
      Hb3LS0d6C/44OcQcOHICt3OeVB6kQjmHj59g9e4sMpmcXCLAomuVivoOgokMZlG84Mzs9/lw
      LHk5fvwQcX+g4A6dleopN0qJC0y8eGA3+TwbOUY5fL4gtromdtnNTHyMZxAlnh8eqwMYyqv5
      3f/5X9FRIeH1n51HrlQhlfxiEBFI5Bx88SjHXjyEQmMq+OPoDRqGLp6nrLoWrdaITq/kyoXz
      VNQ14fG4Uaj1KBRy9BoFWq0WuUZXcGY2GI3UVZg4d+ESibwIk9mISmvEaC4jHE6hyPu4eHUY
      k8mA3Wbh3IVrqAw6EhE/N+e8tG7RYtYldiYfexIcDQdBLEeleIKlTx6RsZsDuP0halp20WAz
      bXp7Txtb6Q79rPKw3KiPPQlWbbi2bQUdu/ZtWVslnk3C3gQDP3nQALmoqRCpgIvXzw1TYVSg
      MFazt6vpgW0+ToVXPOQhJtDgWZxBq5ExPusinUxx/KWXkInWTS7vDA8g0lfRXFcJQDbqZno5
      wdL8HYQiIVWN3TTWlD2w71LF2fNB2JdgcLM7QD6dIJ4BnVaLa22VwctO/JEU7R2tjN2ZwWAu
      Y3zoMntfOIDb50OpK0eYjVJnVuGOwZ2ZBWqsJqKRAKbqJqZvDCBVaqjQCwgq7CgzYSamZ3jt
      s58lEQkS9bq4MLruBL06P8b+Qxre+vktDOYKDMI4wViIyo6DtFaq8PsDXNxwh+5sa2R0dhm1
      UsWqY4wDh48yPjWLwVyBVhhjyRukpb2NK5euo9So+dSrL29uzkiJbaPof1e9yYJ3xUlLewe3
      x8dRScHhcm+sEZahsqYenVqBVCLFubiAz+cjEQkSCoeoqO/AoFEU1uuSKPT/f3tnFtzWdd7x
      H/YduFgJ7gtEgBQJiRQ3OVYVLbZsS3LTOEk7nT7kIe1MXtLMuNPXjh/y2Gam7cSeSTqZbs44
      HTlOLMVSFEmUZJmkTEsiRXEnJS4ANxAriX3rA1WkDKNItFZb+D1e3HPmnHPvd8+9f5zz/amx
      SMjIjJTYjCBWIrpr7pVYDxOJZQp5h2zl1YQ8kwUn+lAqj6D4v+7lWV31FXIFLfsjBYd5s72S
      1ZmRQrnBoWG0WhV3JsZRCaVYJDnWH/UgFXlmeOQeYWV2G+2u3Zy90IO72U14LUa5oCUa2XBk
      F7QK7sx5QSpDr9OhFsUZnVmkoq4B1CoCnumCX5csp0ZrALXawuTIdRo79lNr13DufDfZbB53
      vb2Qd8hoNNHoKCNwbRSz2YJer8PpbOXcuW4WRsTUNjbj849jMFqRKxRo7zrMK0QZVPoqArNe
      zGYrJVUWloMRyiqrkIWyGJAUN018idmiAp0//UvW7i66l8kVVDkacLueLRvP542iCvT42PJw
      m5/30nXgVWS5GGcu9JJfXwGFFndRTy/yDFJWL1DuFD53+S0BIJKpcNbXIc5n0PTdoNXtYsIf
      ggcIgHuqQJk4Xn+M8pINDT8ZWWFhOUAYXcEVfjt4vV7S4QVkZbspF55zh4fnnHKnQOfrdaRj
      fnoG53GYRZy+fI0jf/oNqm33l+q3BMC+rhZ+/M475BBx8JXXGbj1KYeOPtiisnupQI4qK5+M
      h3CaIRhep6m5kVAoRIQcZz4aRKLWY1XnWUdLNrJCQqzmlUN/sqnutVUvPddHUetNeCZuUGo1
      4p9Zw2oUMCtSBeWm75NrHHj5CDbjFyfXZ5GH5+fv/TdLUQPKzkb++ttf54dvn+Dvvv+d+5bb
      ogLp9EZ21NfjrN+Bb2WJY197A9U2FpP9IRXIH45RYi9BoVCQWvOzsOwnEksS8k6wGMkQ8y0w
      uxSlrbMFsShHIhojnYfA4gz/84uPyACjAzdpP/gS66FlzPZKrEZtwZ/r/ys3emtl8eZ/zhjo
      PoE3rsIzN09n227+5Yc/4s/+4psPVHbLDPDLD0+y//CriEUgUWwvl8y9VKDqBgeBkSl8iSAa
      gxGFXIFKocJgq0A9P0Umr8Fq0iMhRzoDCrkUEWAqreHP36gBoLFlFz3d59AYbAiyFJFYFOGu
      P1eF1VBQbiLRomL/vOHqfAV74yr//p8f8U//8CYBVQ0L8/M47Pd/BdqiAn1w4j1ePHAEhUyC
      SCJF/wVKG/5lpagC3ZuH3Q23ZQaQi3OcO3sGAKXBxhvHXvr8rSvyzNBxrOZpN+GxUO58uCwY
      hQBIBBfpGV0kEY8Ru2uUkldsLwtPJhqgu+8mKhlUOndRbTfdrShHPJFCpdrwqE1GVlgMxECh
      p6bU9FAd+LwkIyv4EkoqbPrCsXw+SyKRQVVY4Zpn/OZnaOyuTec9DJloAE+Ezf3+vfF5HGw8
      JfNcudLDvn0v8tuTJ8hqy3j14JdvD/V2KASAQihhf5eN5SobtpISADzbNKrLxoLkNFZe2FPN
      r05fIt9YzezyGo2VWs4M+OjaYWTBF6F1dwPZWBBPIIN/dgSRxoJJI8YXjKMgQUKsobO1eVPd
      8Yif/utD1Da2kFpbRacUkULB1J0ZzJZSSg0SBsdm6djbyVB/HzK5mnQ+OfNwPwAABnpJREFU
      gVSmJZMT4XbYuXFrgvK6RtaWpiAdI6auJhJaRZoKs7yWZYcZLk8ncVlEZBUCzVU6ZueXWZ7w
      0eSqRaeUsqOmlFvDk6xGohjNNupKtPQPjrG7Yy9Tg33IVVpiyQxSqYxkJke728G1G7ewlNeR
      CS1ALoEfK9GwH404uWl89tToWM8q2Nu26xFc2q1cvXCK/zr1KW0OPXfiJmQz/YT3fwXD07Ku
      fwaQvPXWW28B5DMxfvL2j/jw16cZGRnh6tVPmV0K09HqfuDKsrEg3VcHGej9mAPHvsHZk+8j
      KGFlPY/KWIJalGDxzhiJvIxgJEbEv8DYfBDf9DDhWJqOr77IQM8V1pLgqq8juDjDqd/24Gqs
      xzc7yYTXj1KlxjMzjSQVxB9JoirZgXfqJiNDN7FaBAZGp8kk86iyQWo7DjM1NIgknURl0BGL
      x5mcvkMsFqe1oYqfvvsBLx89xKn3f42SMHGxHrVgZnFqjGhWTDYWp7xMQKSvIrQ4TT4Wxrvk
      QyzOk9dV4Z8d5dbIECarhRsDo2QzaSyqDLraDuanhjBJ0qRUBhKxOGOT08TjCbrcDn7yHz/n
      4KvH+M2HJzaNT3B+jEg0S73LsUmeG7o8RyKSfagL3Xm8lopaF3NTo7hK9XizJrSRWUzuLgzP
      8VqPQtfFMg3f/ds3mRwfQa3d+HpOZf647egfotbZxEH3Yd4/fYHq6iryUiUuZx0f94+xGvYi
      aGUkkxuvVmrBhjW9hNruQk4WhQS0eoFln49kfkMF+tZdFUgqVyLo1CwuLhEP+bi1GKGmYQ8j
      g5+hU8qora0mkcmzs9GJ57YHSCCVypDLpYhFMD42jExlJJvNorj7ivPa8eNcudhHdVUJUqWa
      HbVlXLo2hVEQWFn1EdZXYpeATCpFLBLR1rabd352lr98qYlT/dcxaBTU19YSTmRo2NmIb35j
      v7RUKkUulyMWi7g9PgYyFblsFrl8I3PDkWPH6b108ffGZ5xSrcDyyiqxNOgeY3Ifk2MX4+/9
      MyKlnq89vreuLwRbVKAf/+s/ks1myamtZEQKvv83f/W02nZfPMN9rCgd7HE8mWUak0P9BHMG
      arXrTCds7G16MpaqRaf4x8eWyU8t2Di6v5XeuTxr3uGn0aYHpqJpL0/S1bfe/bt/xJ/0yihL
      hZZ939q6wajIw7ElAPbu2clq3kR44ldoq1q2VVk+E+P0mfPkcnm6DhzBqt+YX3t7enjhj2Rs
      6+//jF31pcxF1dSXb5a1Jgf6SctlGMp23nfdz/DwME1NTVuOT09P43A47tv+6akplCrVM7lD
      TK6SFh3fHwObAuB670WmFyO8dqyFV44e5cSZT4AHl8ky8Qir4QRdnS1ISXH+NxfJSFWElm6T
      iIapbGjhzvAgWbEct7OCkWkPgqWUQCDAxGQGU2kJZ89dx2QtIbzkIY0EQZ5HpFKAcoXB3mH0
      JhsmRZqlQBC5rpx0aJ4Ucg7s72A9Eae/fwQNUdKyLMvBJBqtgJwUq6t+HHYdS3EpczO3MVpK
      SYU8GCx2lpb96IwWFKIMY1e6qalx4n5hH5NDN2hvb3/UY17kGaIgNqRCc/SNLrPbaeen77zN
      v/3sJMdfP76tyuLxDIdffolUyMvVjy8Xsj4r9WYO7m9n6JNulHYXNUKOkz3jHD58CP/CDADR
      LEwPbzjFV2vT5I01uEqU3F6OAjAx9BkZqYaFBQ9zS0EOfbWLNe80I3f8kAjT23ODKlcdgUCY
      cCBAKLzCzrb9rAeWCQaDpNfDXB31EF0YLez+SmTEuBvryabixJMpAoEAtrIq2lscXProA/Ia
      +6Mb6SLPJIUASKyv4djZjLO5E5lcwt+/+T3KLdvL/KAVjNzou4xnZZ2mjhcKWZ+tZguIZFQ4
      d5FYGmcmKOL4V1ycP38BU2k1JpOAXi/g3rXhFD8fVyIKzjC+FGeXswKd3oC7tQMFCcwmC5Ul
      Ahcv9ZDR2HA7bOSlatRGM6VaAXF2lcVQFMFgQSEVbeQWMhppa21ArBRobmlHko5jNlsxm81k
      0ynEchVS0ca5VkFLOGcgFIrQ0vAkvzCKPA0KKlDEM8yH/R46m2rp7r7AwYOHkCrU1FU/ezfB
      zWu9+EPr1DV3UF3y+TdD3Av/0hyT3gh725rvf/IT4N0fXEGtUhc9vx4DhQBIrq1y+vyVTT8q
      dBZeO7zvqTSsyO949wdXiPlzWCq1T7spX3ga9pZuSpL7v8B6+uRaqIriAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2Bar' width='192'>
      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
      B49eiwK8fYxIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q2 Table' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Temporary Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      gUmHElEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='TestDash' width='192'>
      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
      pHnfN1cCF7oAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
