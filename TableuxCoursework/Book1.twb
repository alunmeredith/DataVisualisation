<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0330.1916                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='45' min='1' />
      </column>
      <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
        <calculation class='tableau' formula='100' />
      </column>
    </datasource>
    <datasource caption='EstablishmentDetail+ (dat)' inline='true' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' version='9.2'>
      <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\dat.xlsx' interpretationMode='1' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
              <expression op='[Scores].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
                <expression op='[Geocode].[EstablishmentDetail_Id]' />
              </expression>
            </clause>
            <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
              <columns gridOrigin='A1:U1374:no:A1:U1374:1' header='yes' lost='0' outcome='1' processed='8177'>
                <column datatype='integer' name='FHRSID' ordinal='0' />
                <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
                <column datatype='string' name='BusinessName' ordinal='2' />
                <column datatype='string' name='BusinessType' ordinal='3' />
                <column datatype='integer' name='BusinessTypeID' ordinal='4' />
                <column datatype='string' name='AddressLine1' ordinal='5' />
                <column datatype='string' name='AddressLine2' ordinal='6' />
                <column datatype='string' name='AddressLine3' ordinal='7' />
                <column datatype='string' name='AddressLine4' ordinal='8' />
                <column datatype='string' name='PostCode' ordinal='9' />
                <column datatype='string' name='RatingValue' ordinal='10' />
                <column datatype='string' name='RatingKey' ordinal='11' />
                <column datatype='string' name='RatingDate' ordinal='12' />
                <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
                <column datatype='string' name='LocalAuthorityName' ordinal='14' />
                <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
                <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
                <column datatype='string' name='SchemeType' ordinal='18' />
                <column datatype='string' name='NewRatingPending' ordinal='19' />
                <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
              </columns>
            </relation>
            <relation name='Geocode' table='[Geocode$]' type='table'>
              <columns gridOrigin='A1:C1374:no:A1:C1374:1' header='yes' lost='0' outcome='1' processed='4041'>
                <column datatype='real' name='Longitude' ordinal='0' />
                <column datatype='real' name='Latitude' ordinal='1' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation name='Scores' table='[Scores$]' type='table'>
            <columns gridOrigin='A1:D1374:no:A1:D1374:1' header='yes' lost='0' outcome='1' processed='5297'>
              <column datatype='integer' name='Hygiene' ordinal='0' />
              <column datatype='integer' name='Structural' ordinal='1' />
              <column datatype='integer' name='ConfidenceInManagement' ordinal='2' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[ConfidenceInManagement]' value='[Scores].[ConfidenceInManagement]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (Geocode)]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id (Scores)]' value='[Scores].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Hygiene]' value='[Scores].[Hygiene]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
          <map key='[Structural]' value='[Scores].[Structural]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8177</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Geocode)]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4041</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hygiene</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hygiene]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Hygiene</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Structural</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Structural]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Structural</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfidenceInManagement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfidenceInManagement]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>ConfidenceInManagement</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Scores)]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Scores]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1374:no:A1:D1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5297</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
      </column>
      <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
      </column>
      <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
      </column>
      <column caption='Confidence In Management' datatype='integer' name='[ConfidenceInManagement]' role='dimension' type='ordinal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Geocode)' datatype='integer' name='[EstablishmentDetail_Id (Geocode)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Scores)' datatype='integer' name='[EstablishmentDetail_Id (Scores)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='integer' name='[FHRSID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code numeric' datatype='string' datatype-customized='true' name='[Post Code (copy)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='tableau' formula='[PostCode]' />
      </column>
      <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating (string)' datatype='string' datatype-customized='true' name='[Rating (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([RatingValue])' />
        <aliases>
          <alias key='%null%' value='Exempt' />
        </aliases>
      </column>
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
        </aliases>
      </column>
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
      <group caption='Action (Business Type)' hidden='true' name='[Action (Business Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type,Rating Value)' hidden='true' name='[Action (Business Type,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating Value)' hidden='true' name='[Action (Latitude,Longitude,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating)' hidden='true' name='[Action (Latitude,Longitude,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating Value)' hidden='true' name='[Action (Post Code,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating)' hidden='true' name='[Action (Post Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.679083' measure-ordering='alphabetic' measure-percentage='0.275072' parameter-percentage='0.0458453' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BusinessType:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Takeaway/sandwich shop&quot;</bucket>
            </map>
            <map to='#2a2a2a'>
              <bucket>&quot;School/college/university&quot;</bucket>
            </map>
            <map to='#373737'>
              <bucket>&quot;Retailers - supermarkets/hypermarkets&quot;</bucket>
            </map>
            <map to='#464646'>
              <bucket>&quot;Retailers - other&quot;</bucket>
            </map>
            <map to='#555555'>
              <bucket>&quot;Restaurant/Cafe/Canteen&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;Pub/bar/nightclub&quot;</bucket>
            </map>
            <map to='#777777'>
              <bucket>&quot;Other catering premises&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;Mobile caterer&quot;</bucket>
            </map>
            <map to='#9b9b9b'>
              <bucket>&quot;Manufacturers/packers&quot;</bucket>
            </map>
            <map to='#aeaeae'>
              <bucket>&quot;Hotel/bed &amp; breakfast/guest house&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;Hospitals/Childcare/Caring Premises&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:RatingValue:ok]' type='palette'>
            <map to='#5a5a5a'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#a50f15'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#b7b7b7'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>&quot;5&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated) 1' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='FilterSum 1 1' name='[Action11]'>
      <source type='sheet' worksheet='Q2 Table' />
      <link caption='FilterSum 1 1' delimiter=',' escape='\' expression='tsl:Q2%20Table?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2 Table' />
      </command>
    </action>
    <action caption='FilterSum 3 1' name='[Action12]'>
      <source type='sheet' worksheet='PiesB' />
      <link caption='FilterSum 3 1' delimiter=',' escape='\' expression='tsl:PiesB?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='PiesB' />
      </command>
    </action>
    <action caption='FilterSum 3' name='[Action13]'>
      <source type='sheet' worksheet='PiesA' />
      <link caption='FilterSum 3' delimiter=',' escape='\' expression='tsl:PiesA?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='PiesA' />
      </command>
    </action>
    <action caption='FilterSum 3 1 1' name='[Action14]'>
      <source type='sheet' worksheet='PiesC' />
      <link caption='FilterSum 3 1 1' delimiter=',' escape='\' expression='tsl:PiesC?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='PiesC' />
      </command>
    </action>
    <action caption='FilterSum 3 1 1 1' name='[Action15]'>
      <source type='sheet' worksheet='PiesD' />
      <link caption='FilterSum 3 1 1 1' delimiter=',' escape='\' expression='tsl:PiesD?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='PiesD' />
      </command>
    </action>
    <action caption='FilterSum 3 1 1 1 1' name='[Action16]'>
      <source type='sheet' worksheet='PiesE' />
      <link caption='FilterSum 3 1 1 1 1' delimiter=',' escape='\' expression='tsl:PiesE?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='PiesE' />
      </command>
    </action>
    <action caption='Filter Business 1' name='[Action17]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Q3' />
      <link caption='Filter Business 1' delimiter=',' escape='\' expression='tsl:Dashboard%203?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q3' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='FilterSum' name='[Action1]'>
      <source type='sheet' worksheet='Q2' />
      <link caption='FilterSum' delimiter=',' escape='\' expression='tsl:Q2?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2' />
      </command>
    </action>
    <action caption='Highlight Business' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='all' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter Quality' name='[Action3]'>
      <source datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' type='datasource'>
        <exclude-sheet name='Q2' />
      </source>
      <link caption='Filter Quality' delimiter=',' escape='\' expression='tsl:Q3?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BRatingValue%5D~s0=&lt;[RatingValue]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Filter Business' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q3' />
      <link caption='Filter Business' delimiter=',' escape='\' expression='tsl:Dashboard%201?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q3' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='FilterSum 1' name='[Action7]'>
      <source type='sheet' worksheet='Q2Bar' />
      <link caption='FilterSum 1' delimiter=',' escape='\' expression='tsl:Q2Bar?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2Bar' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <datasources>
      <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
    </datasources>
    <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
        </aliases>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='PiesA'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode - Split 1]' derivation='None' name='[none:PostCode - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]'>
            <groupfilter function='member' level='[none:PostCode - Split 1:nk]' member='&quot;SO15&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='PiesB'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode - Split 1]' derivation='None' name='[none:PostCode - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]'>
            <groupfilter function='member' level='[none:PostCode - Split 1:nk]' member='&quot;SO16&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
            <format attr='height' value='48' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='PiesC'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode - Split 1]' derivation='None' name='[none:PostCode - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]'>
            <groupfilter function='member' level='[none:PostCode - Split 1:nk]' member='&quot;SO17&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
            <format attr='height' value='44' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='PiesD'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode - Split 1]' derivation='None' name='[none:PostCode - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]'>
            <groupfilter function='member' level='[none:PostCode - Split 1:nk]' member='&quot;SO18&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
            <format attr='height' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='PiesE'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode - Split 1]' derivation='None' name='[none:PostCode - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]'>
            <groupfilter function='member' level='[none:PostCode - Split 1:nk]' member='&quot;SO19&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
            <format attr='height' value='50' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='44' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='84' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2 Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[cum:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Columns' type='CumTotal' />
            </column-instance>
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]'>
            <groupfilter function='member' level='[none:RatingValue:ok]' member='2' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='133' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='108' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[cum:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.42779004573822021' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='10692' />
                <format attr='maxwidth' value='10692' />
                <format attr='minheight' value='1280' />
                <format attr='maxheight' value='1280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:13]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' included-values='in-range'>
            <min>0.0625</min>
          </filter>
          <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' included-values='all' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='133' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='108' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='71' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='10692' />
                <format attr='maxwidth' value='10692' />
                <format attr='minheight' value='1280' />
                <format attr='maxheight' value='1280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' direction='ASC' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='104' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' value='348' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='68' />
            <format attr='width-header' value='28' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='center' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='center' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='-90' />
            <format attr='text-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='right' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='10' />
            <format attr='wrap' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' value='on' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <text column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok] / [excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk])</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
    </worksheet>
    <worksheet name='Temporary Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessName]' derivation='Attribute' name='[attr:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='Attribute' name='[attr:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]' field-type='quantitative' max='-143734.44246768503' min='-167969.00343557459' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]' field-type='quantitative' max='6616829.1475003138' min='6595666.5726253632' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:BusinessName:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:PostCode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='83705' id='1' name='Q3' w='34466' x='65534' y='0' />
              <zone h='16295' id='7' name='Q2' show-title='true' w='100000' x='0' y='83705' />
              <zone h='83705' id='8' name='Temporary Map' w='65534' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='16550' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' w='8627' x='1089' y='64799' />
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
          <calculation class='tableau' formula='1' />
        </column>
        <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:13]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Columns' type='PctTotal' />
        </column-instance>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='93028' x='0' y='0'>
              <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='93028' x='0' y='0'>
                <zone h='74984' id='1' name='Q3' w='31437' x='61591' y='0' />
                <zone h='74984' id='8' name='Temporary Map' w='61591' x='0' y='0' />
                <zone h='25016' id='9' name='Q2Bar' w='93028' x='0' y='74984' />
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='10' is-fixed='true' param='vert' type='layout-flow' w='6972' x='93028' y='0'>
              <zone h='7003' id='12' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' show-null-ctrls='true' type='filter' w='6972' x='93028' y='0' />
              <zone h='4838' id='13' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='6972' x='93028' y='7003' />
              <zone h='5157' id='14' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='6972' x='93028' y='11841' />
              <zone h='3693' id='15' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='6972' x='93028' y='16998' />
            </zone>
          </zone>
        </zone>
        <zone h='16550' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' w='8627' x='828' y='55124' />
      </zones>
    </dashboard>
    <dashboard name='TestDash'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='9' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='12' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='10' type='layout-basic' w='98000' x='0' y='0'>
              <zone h='14875' id='8' name='PiesA' w='98000' x='0' y='0' />
              <zone h='12500' id='17' name='PiesB' w='98000' x='0' y='14875' />
              <zone h='14250' id='18' name='PiesC' w='98000' x='0' y='27375' />
              <zone h='13500' id='19' name='PiesD' w='98000' x='0' y='41625' />
              <zone h='44875' id='20' name='PiesE' w='98000' x='0' y='55125' />
            </zone>
            <zone fixed-size='20' h='100000' id='11' is-fixed='true' param='vert' type='layout-flow' w='2000' x='98000' y='0'>
              <zone h='18375' id='13' name='PiesA' pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' w='2000' x='98000' y='0' />
              <zone h='15125' id='14' name='PiesA' pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' w='2000' x='98000' y='18375' />
              <zone h='10125' id='15' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='2000' x='98000' y='33500' />
              <zone h='7250' id='16' mode='type_in' param='[Parameters].[Parameter 2]' type='paramctrl' w='2000' x='98000' y='43625' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='42'>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2 Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temporary Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Q2'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Q2Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='TestDash'>
      <viewpoints>
        <viewpoint name='PiesA'>
          <zoom type='fit-width' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='PiesB'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='PiesC' />
        <viewpoint name='PiesD'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='PiesE'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='PiesA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='PiesB'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='PiesC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='PiesD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='PiesE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]' type='color' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode - Split 1:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2Bar' width='192'>
      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
      e74Cwww2QQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q2 Table' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Temporary Map' width='192'>
      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
      DmHli3u8I8Oby7slv3pOnnVOJu8eXVl8ss3+FrAIkssOWP0foq9UX0dJL/JJyOmLDoJzguln
      uV68p9fmctwcH7lPGnmD3r2DNCud26MvL8rcqy/vnqcvec/SFxvgproy2up0Mgefalt77n+q
      vlaDYC9fT8CYv8eDSo+n82IvEng8eIMe5q1yHmGvJ5OdR780YpHQkpXpnI0JrAh3j1xL3ms4
      CqnHPW1t6Z3xxBY7yvKW7jR9Lb/umFoeyz4TLO8BvNyOrf/QCKVimUdj6ZKFi+HQuHQ5qyGY
      cqy0ba83Y+MHbdRWOihxyAODGQ3r2mpwLR+r68nK9MUc4l59sQjLjF//MRmse3vpWzIVurBu
      SIB/+8rrELJuztA1WELKN40WPxq/hUs3jBX2NQ2GQ3qghEfy561RsfRlece9oI1JOiapL88x
      aFwav6VzSYfVYamU5M/KDCz5LM/PgN0vWAEr1HhIrZ7NosGee1Jh2sj3CpmLKsxDe97V4tOS
      U/Kg6eTSDcZjjg8rJdGwp0Na/HgeWgOzH6t+ThdMX9I2NI9az7rDpnurpRA57ywJpP/6z2pg
      3fstQ7JCvQ6/e3jVNORWylxDMp1YXvOelICFeq8BLTktz6xxWh2IgRUBNG5Z3tIT43GPXEzG
      vfpiOK1Ike5VwHpn070fiNaE2St0q8d6DeGFNs/jergkbX2OjSxrhXxdnuHwQMvFOjhLhTz8
      Xj3Gv66X41Hqi0V5jd87JOue6MGMmtmE9W04+Z/Js6SHjDndq72ci6UqkjkvTHlK8cJ57kxN
      KyppnrXssrzmWzcI82ae55P/WXjWOL3OInF46Uq6zp1KlyKjF228FNEyeP1fr8hlf5KebAtG
      y/L8nm1pfW0sKZfzeV5L15NCWA2YS2ksfiywDGKP1wmBn+qmy7BOZfG3Ry7WsZiR7THCT9HX
      nkiTk4HRkvx6g1vPqHX01vfTM+uUbVZW/q/kgz279L38Sytzj5Ho37k5da++pTjWMFZksPBI
      XvR9CzQNqWOG15PZahstixWhLcNisudosOeWXOy3Bo/2XoegZ9u8pdISZ8FuaiLMmBcEzkkI
      ujwr43lCyRur4zUi8zCe12H0vE7MwNKVlM1ajs3kk/VyvHhOId2zvKfmmxk805eOWp8SQbQh
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='TestDash' width='192'>
      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
      pHnfN1cCF7oAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
