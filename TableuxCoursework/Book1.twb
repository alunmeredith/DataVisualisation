<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0330.1916                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='45' min='1' />
      </column>
      <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
        <calculation class='tableau' formula='100' />
      </column>
    </datasource>
    <datasource caption='EstablishmentDetail+ (dat)' inline='true' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' version='9.2'>
      <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\dat.xlsx' interpretationMode='1' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
              <expression op='[Scores].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
                <expression op='[Geocode].[EstablishmentDetail_Id]' />
              </expression>
            </clause>
            <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
              <columns gridOrigin='A1:U1374:no:A1:U1374:1' header='yes' lost='0' outcome='1' processed='8177'>
                <column datatype='integer' name='FHRSID' ordinal='0' />
                <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
                <column datatype='string' name='BusinessName' ordinal='2' />
                <column datatype='string' name='BusinessType' ordinal='3' />
                <column datatype='integer' name='BusinessTypeID' ordinal='4' />
                <column datatype='string' name='AddressLine1' ordinal='5' />
                <column datatype='string' name='AddressLine2' ordinal='6' />
                <column datatype='string' name='AddressLine3' ordinal='7' />
                <column datatype='string' name='AddressLine4' ordinal='8' />
                <column datatype='string' name='PostCode' ordinal='9' />
                <column datatype='string' name='RatingValue' ordinal='10' />
                <column datatype='string' name='RatingKey' ordinal='11' />
                <column datatype='string' name='RatingDate' ordinal='12' />
                <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
                <column datatype='string' name='LocalAuthorityName' ordinal='14' />
                <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
                <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
                <column datatype='string' name='SchemeType' ordinal='18' />
                <column datatype='string' name='NewRatingPending' ordinal='19' />
                <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
              </columns>
            </relation>
            <relation name='Geocode' table='[Geocode$]' type='table'>
              <columns gridOrigin='A1:C1374:no:A1:C1374:1' header='yes' lost='0' outcome='1' processed='4041'>
                <column datatype='real' name='Longitude' ordinal='0' />
                <column datatype='real' name='Latitude' ordinal='1' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation name='Scores' table='[Scores$]' type='table'>
            <columns gridOrigin='A1:D1374:no:A1:D1374:1' header='yes' lost='0' outcome='1' processed='5297'>
              <column datatype='integer' name='Hygiene' ordinal='0' />
              <column datatype='integer' name='Structural' ordinal='1' />
              <column datatype='integer' name='ConfidenceInManagement' ordinal='2' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[ConfidenceInManagement]' value='[Scores].[ConfidenceInManagement]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (Geocode)]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id (Scores)]' value='[Scores].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Hygiene]' value='[Scores].[Hygiene]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
          <map key='[Structural]' value='[Scores].[Structural]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8177</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Geocode)]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4041</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hygiene</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hygiene]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Hygiene</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Structural</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Structural]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Structural</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfidenceInManagement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfidenceInManagement]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>ConfidenceInManagement</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Scores)]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Scores]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1374:no:A1:D1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5297</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
      </column>
      <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
      </column>
      <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
      </column>
      <column caption='Confidence In Management' datatype='integer' name='[ConfidenceInManagement]' role='dimension' type='ordinal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Geocode)' datatype='integer' name='[EstablishmentDetail_Id (Geocode)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Scores)' datatype='integer' name='[EstablishmentDetail_Id (Scores)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='integer' name='[FHRSID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code numeric' datatype='string' name='[Post Code (copy)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='tableau' formula='[PostCode]' />
      </column>
      <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating (string)' datatype='string' name='[Rating (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([RatingValue])' />
        <aliases>
          <alias key='%null%' value='Exempt' />
        </aliases>
      </column>
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
        </aliases>
      </column>
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
      <group caption='Action (Business Type)' hidden='true' name='[Action (Business Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type,Rating Value)' hidden='true' name='[Action (Business Type,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating Value)' hidden='true' name='[Action (Latitude,Longitude,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating)' hidden='true' name='[Action (Latitude,Longitude,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating Value)' hidden='true' name='[Action (Post Code,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating)' hidden='true' name='[Action (Post Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.679083' measure-ordering='alphabetic' measure-percentage='0.275072' parameter-percentage='0.0458453' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BusinessType:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Takeaway/sandwich shop&quot;</bucket>
            </map>
            <map to='#2a2a2a'>
              <bucket>&quot;School/college/university&quot;</bucket>
            </map>
            <map to='#373737'>
              <bucket>&quot;Retailers - supermarkets/hypermarkets&quot;</bucket>
            </map>
            <map to='#464646'>
              <bucket>&quot;Retailers - other&quot;</bucket>
            </map>
            <map to='#555555'>
              <bucket>&quot;Restaurant/Cafe/Canteen&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;Pub/bar/nightclub&quot;</bucket>
            </map>
            <map to='#777777'>
              <bucket>&quot;Other catering premises&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;Mobile caterer&quot;</bucket>
            </map>
            <map to='#9b9b9b'>
              <bucket>&quot;Manufacturers/packers&quot;</bucket>
            </map>
            <map to='#aeaeae'>
              <bucket>&quot;Hotel/bed &amp; breakfast/guest house&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;Hospitals/Childcare/Caring Premises&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:RatingValue:nk]' type='palette'>
            <map to='#5a5a5a'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#a50f15'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#a50f15'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#b7b7b7'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>&quot;5&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' included-values='in-range'>
        <min>1</min>
        <max>45</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 2 (generated) 1' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action11]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Filter Business 1' name='[Action17]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Q3' />
      <link caption='Filter Business 1' delimiter=',' escape='\' expression='tsl:Dashboard%203?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='FilterSum' name='[Action1]'>
      <source type='sheet' worksheet='Q2' />
      <link caption='FilterSum' delimiter=',' escape='\' expression='tsl:Q2?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar,Temporary Map' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter Quality' name='[Action3]'>
      <source datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' type='datasource'>
        <exclude-sheet name='Q2' />
      </source>
      <link caption='Filter Quality' delimiter=',' escape='\' expression='tsl:Q3?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BRatingValue%5D~s0=&lt;[RatingValue]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter Business' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q3' />
      <link caption='Filter Business' delimiter=',' escape='\' expression='tsl:Dashboard%20Pie?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q3' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='FilterSum 1' name='[Action7]'>
      <source type='sheet' worksheet='Q2Bar' />
      <link caption='FilterSum 1' delimiter=',' escape='\' expression='tsl:Q2Bar?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2Bar' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Q2Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <datasources>
      <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
    </datasources>
    <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
        </aliases>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='84' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:13]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' included-values='in-range'>
            <min>0.022222222222222199</min>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='133' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='108' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='10692' />
                <format attr='maxwidth' value='10692' />
                <format attr='minheight' value='1280' />
                <format attr='maxheight' value='1280' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' direction='ASC' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='104' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' value='348' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='68' />
            <format attr='width-header' value='28' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='-90' />
            <format attr='text-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='right' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='10' />
            <format attr='wrap' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='on' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <text column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk] / [excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk])</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
    </worksheet>
    <worksheet name='Temporary Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessName]' derivation='Attribute' name='[attr:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='Attribute' name='[attr:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]' field-type='quantitative' max='-139656.62758370809' min='-171435.32209327014' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]' field-type='quantitative' max='6618487.3392170025' min='6596225.0547289448' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:BusinessName:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:PostCode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 3'>
      <style />
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='74984' id='1' name='Q3' w='33793' x='66207' y='0' />
                <zone h='74984' id='8' name='Temporary Map' w='66207' x='0' y='0' />
                <zone h='25016' id='9' name='Q2Bar' w='90281' x='0' y='74984' />
                <zone h='7448' id='13' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='9719' x='90281' y='74984' />
                <zone h='17568' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='9719' x='90281' y='82432' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Pie'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='83705' id='1' name='Q3' w='34466' x='65534' y='0' />
              <zone h='16295' id='7' name='Q2' show-title='true' w='100000' x='0' y='83705' />
              <zone h='83705' id='8' name='Temporary Map' w='65534' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='16550' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='8627' x='1089' y='64799' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='42'>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temporary Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Q2Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
    <window class='dashboard' name='Dashboard Pie'>
      <viewpoints>
        <viewpoint name='Q2'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q3' width='192'>
      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
      /wNLI079dTQc8AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2Bar' width='192'>
      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
      5iyU1pUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Temporary Map' width='192'>
      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
      BLTP/wd2pXQSn69TkAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard Pie' width='192'>
      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
      Dzo9YjlsLwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
