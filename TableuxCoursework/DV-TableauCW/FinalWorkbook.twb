<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0330.1916                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='45' min='1' />
      </column>
      <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
        <calculation class='tableau' formula='100' />
      </column>
    </datasource>
    <datasource caption='EstablishmentDetail+ (dat)' inline='true' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' version='9.2'>
      <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\dat.xlsx' interpretationMode='1' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
              <expression op='[Scores].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
                <expression op='[Geocode].[EstablishmentDetail_Id]' />
              </expression>
            </clause>
            <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
              <columns gridOrigin='A1:U1374:no:A1:U1374:1' header='yes' lost='0' outcome='1' processed='8177'>
                <column datatype='integer' name='FHRSID' ordinal='0' />
                <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
                <column datatype='string' name='BusinessName' ordinal='2' />
                <column datatype='string' name='BusinessType' ordinal='3' />
                <column datatype='integer' name='BusinessTypeID' ordinal='4' />
                <column datatype='string' name='AddressLine1' ordinal='5' />
                <column datatype='string' name='AddressLine2' ordinal='6' />
                <column datatype='string' name='AddressLine3' ordinal='7' />
                <column datatype='string' name='AddressLine4' ordinal='8' />
                <column datatype='string' name='PostCode' ordinal='9' />
                <column datatype='string' name='RatingValue' ordinal='10' />
                <column datatype='string' name='RatingKey' ordinal='11' />
                <column datatype='string' name='RatingDate' ordinal='12' />
                <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
                <column datatype='string' name='LocalAuthorityName' ordinal='14' />
                <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
                <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
                <column datatype='string' name='SchemeType' ordinal='18' />
                <column datatype='string' name='NewRatingPending' ordinal='19' />
                <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
              </columns>
            </relation>
            <relation name='Geocode' table='[Geocode$]' type='table'>
              <columns gridOrigin='A1:C1374:no:A1:C1374:1' header='yes' lost='0' outcome='1' processed='4041'>
                <column datatype='real' name='Longitude' ordinal='0' />
                <column datatype='real' name='Latitude' ordinal='1' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation name='Scores' table='[Scores$]' type='table'>
            <columns gridOrigin='A1:D1374:no:A1:D1374:1' header='yes' lost='0' outcome='1' processed='5297'>
              <column datatype='integer' name='Hygiene' ordinal='0' />
              <column datatype='integer' name='Structural' ordinal='1' />
              <column datatype='integer' name='ConfidenceInManagement' ordinal='2' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[ConfidenceInManagement]' value='[Scores].[ConfidenceInManagement]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (Geocode)]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id (Scores)]' value='[Scores].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Hygiene]' value='[Scores].[Hygiene]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
          <map key='[Structural]' value='[Scores].[Structural]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8177</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Geocode)]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4041</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hygiene</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hygiene]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Hygiene</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Structural</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Structural]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Structural</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfidenceInManagement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfidenceInManagement]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>ConfidenceInManagement</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Scores)]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Scores]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1374:no:A1:D1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5297</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
      <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
      </column>
      <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
      </column>
      <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
      </column>
      <column caption='Confidence In Management' datatype='integer' name='[ConfidenceInManagement]' role='dimension' type='ordinal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Geocode)' datatype='integer' name='[EstablishmentDetail_Id (Geocode)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Scores)' datatype='integer' name='[EstablishmentDetail_Id (Scores)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='integer' name='[FHRSID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code numeric' datatype='string' name='[Post Code (copy)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='tableau' formula='[PostCode]' />
      </column>
      <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating (string)' datatype='string' name='[Rating (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([RatingValue])' />
        <aliases>
          <alias key='%null%' value='Exempt' />
        </aliases>
      </column>
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
        </aliases>
      </column>
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
      <group caption='Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)' hidden='true' name='[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[AddressLine1]' />
          <groupfilter function='level-members' level='[AddressLine2]' />
          <groupfilter function='level-members' level='[BusinessName]' />
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Name,Latitude,Longitude)' hidden='true' name='[Action (Business Name,Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessName]' />
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Name,Latitude,Longitude,Post Code)' hidden='true' name='[Action (Business Name,Latitude,Longitude,Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessName]' />
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type)' hidden='true' name='[Action (Business Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type,Rating Value)' hidden='true' name='[Action (Business Type,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type,Rating)' hidden='true' name='[Action (Business Type,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating Value)' hidden='true' name='[Action (Latitude,Longitude,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating)' hidden='true' name='[Action (Latitude,Longitude,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating Value)' hidden='true' name='[Action (Post Code,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating)' hidden='true' name='[Action (Post Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.735693' measure-ordering='alphabetic' measure-percentage='0.216114' parameter-percentage='0.0481928' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BusinessType:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Takeaway/sandwich shop&quot;</bucket>
            </map>
            <map to='#2a2a2a'>
              <bucket>&quot;School/college/university&quot;</bucket>
            </map>
            <map to='#373737'>
              <bucket>&quot;Retailers - supermarkets/hypermarkets&quot;</bucket>
            </map>
            <map to='#464646'>
              <bucket>&quot;Retailers - other&quot;</bucket>
            </map>
            <map to='#555555'>
              <bucket>&quot;Restaurant/Cafe/Canteen&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;Pub/bar/nightclub&quot;</bucket>
            </map>
            <map to='#777777'>
              <bucket>&quot;Other catering premises&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;Mobile caterer&quot;</bucket>
            </map>
            <map to='#9b9b9b'>
              <bucket>&quot;Manufacturers/packers&quot;</bucket>
            </map>
            <map to='#aeaeae'>
              <bucket>&quot;Hotel/bed &amp; breakfast/guest house&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;Hospitals/Childcare/Caring Premises&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:RatingValue:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#a50f15'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Geocode (VisCWdata)' inline='true' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\VisCWdata.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Geocode].[EstablishmentDetail_Id]' />
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation name='Geocode' table='[Geocode$]' type='table'>
            <columns gridOrigin='A1:C1374:no:A1:C1374:0' header='yes' outcome='2'>
              <column datatype='real' name='Longitude' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
            </columns>
          </relation>
          <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
            <columns gridOrigin='A1:U1374:no:A1:U1374:0' header='yes' outcome='2'>
              <column datatype='string' name='FHRSID' ordinal='0' />
              <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
              <column datatype='string' name='BusinessName' ordinal='2' />
              <column datatype='string' name='BusinessType' ordinal='3' />
              <column datatype='integer' name='BusinessTypeID' ordinal='4' />
              <column datatype='string' name='AddressLine1' ordinal='5' />
              <column datatype='string' name='AddressLine2' ordinal='6' />
              <column datatype='string' name='AddressLine3' ordinal='7' />
              <column datatype='string' name='AddressLine4' ordinal='8' />
              <column datatype='string' name='PostCode' ordinal='9' />
              <column datatype='integer' name='RatingValue' ordinal='10' />
              <column datatype='string' name='RatingKey' ordinal='11' />
              <column datatype='string' name='RatingDate' ordinal='12' />
              <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
              <column datatype='string' name='LocalAuthorityName' ordinal='14' />
              <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
              <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
              <column datatype='string' name='SchemeType' ordinal='18' />
              <column datatype='string' name='NewRatingPending' ordinal='19' />
              <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (EstablishmentDetail)]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (EstablishmentDetail)]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (EstablishmentDetail)' datatype='integer' name='[EstablishmentDetail_Id (EstablishmentDetail)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='string' name='[FHRSID]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
          <groupfilter function='level-members' level='[none:Latitude:qk]' />
          <groupfilter function='level-members' level='[none:Longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.735693' measure-ordering='alphabetic' measure-percentage='0.13253' parameter-percentage='0.131777' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:RatingValue:ok]' type='palette'>
            <map to='#c7c7c7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>1</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>2</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>3</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>4</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>5</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Geocode (VisCWdata) (2)' inline='true' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\VisCWdata.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Geocode].[EstablishmentDetail_Id]' />
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation name='Geocode' table='[Geocode$]' type='table'>
            <columns gridOrigin='A1:C1374:no:A1:C1374:0' header='yes' outcome='2'>
              <column datatype='real' name='Longitude' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
            </columns>
          </relation>
          <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
            <columns gridOrigin='A1:U1374:no:A1:U1374:0' header='yes' outcome='2'>
              <column datatype='string' name='FHRSID' ordinal='0' />
              <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
              <column datatype='string' name='BusinessName' ordinal='2' />
              <column datatype='string' name='BusinessType' ordinal='3' />
              <column datatype='integer' name='BusinessTypeID' ordinal='4' />
              <column datatype='string' name='AddressLine1' ordinal='5' />
              <column datatype='string' name='AddressLine2' ordinal='6' />
              <column datatype='string' name='AddressLine3' ordinal='7' />
              <column datatype='string' name='AddressLine4' ordinal='8' />
              <column datatype='string' name='PostCode' ordinal='9' />
              <column datatype='string' name='RatingValue' ordinal='10' />
              <column datatype='string' name='RatingKey' ordinal='11' />
              <column datatype='string' name='RatingDate' ordinal='12' />
              <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
              <column datatype='string' name='LocalAuthorityName' ordinal='14' />
              <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
              <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
              <column datatype='string' name='SchemeType' ordinal='18' />
              <column datatype='string' name='NewRatingPending' ordinal='19' />
              <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (EstablishmentDetail)]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (EstablishmentDetail)]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (EstablishmentDetail)' datatype='integer' name='[EstablishmentDetail_Id (EstablishmentDetail)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='string' name='[FHRSID]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating Value' datatype='string' name='[RatingValue]' role='dimension' type='nominal' />
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
      <group caption='Action (Business Type)' hidden='true' name='[Action (Business Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
          <groupfilter function='level-members' level='[none:Latitude:qk]' />
          <groupfilter function='level-members' level='[none:Longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.73494' measure-ordering='alphabetic' measure-percentage='0.13253' parameter-percentage='0.13253' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:RatingValue:nk]' type='palette'>
            <map to='#616161'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#a50f15'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>&quot;5&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='GGLmaps' name='[Action10]'>
      <activation type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Map Best' />
      <link caption='' expression='https://www.google.co.uk/maps/place/&lt;[BusinessName]&gt;/@&lt;[Longitude]&gt;,&lt;[Latitude]&gt;.' />
    </action>
    <action caption='Highlight3' name='[Action11]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Google Maps' name='[Action12]'>
      <activation type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Tableau Map' />
      <link caption='' expression='https://www.google.co.uk/maps/place/&lt;[BusinessName]&gt;/@&lt;[Longitude]&gt;,&lt;[Latitude]&gt;.' />
    </action>
    <action caption='Highlight 1 (generated)' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Rating' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q2Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action15]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action16]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Tableau Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter Business 1' name='[Action17]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q3' />
      <link caption='Filter Business 1' delimiter=',' escape='\' expression='tsl:Dashboard%20Final?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action18]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q2Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='FilterSum' name='[Action1]'>
      <source type='sheet' worksheet='Q2' />
      <link caption='FilterSum' delimiter=',' escape='\' expression='tsl:Q2?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter Quality' name='[Action3]'>
      <source datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' type='datasource'>
        <exclude-sheet name='Q2' />
      </source>
      <link caption='Filter Quality' delimiter=',' escape='\' expression='tsl:Q3?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BRatingValue%5D~s0=&lt;[RatingValue]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter Business' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q3' />
      <link caption='Filter Business' delimiter=',' escape='\' expression='tsl:Dashboard%20Pie?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q3' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='FilterSum 1' name='[Action7]'>
      <source type='sheet' worksheet='Q2Bar' />
      <link caption='FilterSum 1' delimiter=',' escape='\' expression='tsl:Q2Bar?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2Bar' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q2Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <datasources>
      <datasource caption='Geocode (VisCWdata) (2)' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)' />
      <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
    </datasources>
    <datasource-dependencies datasource='excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)'>
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
        </aliases>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Map Best'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessName]' derivation='None' name='[none:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <groupfilter from='&quot;0&quot;' function='range' level='[none:RatingValue:nk]' to='&quot;Exempt&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]' field-type='quantitative' max='-140536.33062806979' min='-170144.91033597189' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]' field-type='quantitative' max='6616640.3729666136' min='6596761.6779641844' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='true' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <lod column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]' />
              <lod column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' />
              <lod column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='14.547999382019043' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map Final'>
      <table>
        <view>
          <datasources>
            <datasource caption='Geocode (VisCWdata)' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0axvv590qlybpc1amcgp80da5hh6'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
            <column-instance column='[AddressLine1]' derivation='None' name='[none:AddressLine1:nk]' pivot='key' type='nominal' />
            <column-instance column='[AddressLine2]' derivation='None' name='[none:AddressLine2:nk]' pivot='key' type='nominal' />
            <column-instance column='[BusinessName]' derivation='None' name='[none:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Action (Post Code)]'>
            <groupfilter function='level-members' level='[PostCode]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
                <groupfilter function='level-members' level='[none:Latitude:qk]' />
                <groupfilter function='level-members' level='[none:Longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='701' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='51.000307999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.388382' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='741' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='50.962072999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.303348' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='1227' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='50.923679999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.305723' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]'>
            <groupfilter function='level-members' level='[none:RatingValue:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Action (Post Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]' field-type='quantitative' max='-145176.11276076105' min='-166177.59623931316' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]' field-type='quantitative' max='6614227.4102882687' min='6600172.5517123323' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Business Name:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;AddressLine1:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;AddressLine2:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Post Code:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Rating Value:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.263370156288147' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#820000' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#686868' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]</rows>
        <cols>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='84' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:13]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AddressLine1]' />
              <groupfilter function='level-members' level='[AddressLine2]' />
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' included-values='in-range'>
            <min>7</min>
            <max>45</max>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude,Post Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='112' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' field-type='quantitative' major-origin='0.0' major-spacing='0.20000000000000001' max='1.0' min='0.0' minor-show='false' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' scope='rows' value='true' />
            <format attr='title' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' scope='rows' value='% Rating' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='108' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' value='7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='10692' />
                <format attr='maxwidth' value='10692' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AddressLine1]' />
              <groupfilter function='level-members' level='[AddressLine2]' />
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' direction='ASC' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude,Post Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='104' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' field-type='quantitative' major-origin='0.0' major-spacing='0.10000000000000001' max='1.0' min='0.0' minor-show='false' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' value='344' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='68' />
            <format attr='width-header' value='28' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='-90' />
            <format attr='text-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='right' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='10' />
            <format attr='wrap' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='on' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <text column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk] / [excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk])</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
    </worksheet>
    <worksheet name='Tableau Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Geocode (VisCWdata) (2)' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating Value' datatype='string' name='[RatingValue]' role='dimension' type='nominal' />
            <column-instance column='[BusinessName]' derivation='None' name='[none:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[Action (Post Code)]'>
            <groupfilter function='level-members' level='[PostCode]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]'>
            <groupfilter function='level-members' level='[none:RatingValue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[Action (Post Code)]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[Action (Business Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]' field-type='quantitative' max='-149767.25710982253' min='-161825.19832180906' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Latitude:qk]' field-type='quantitative' max='6612317.9708199231' min='6601186.8285758952' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]' value='false' />
            <format attr='break-on-special' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:BusinessName:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:PostCode:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Business Name:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:BusinessName:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Rating Value:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#820000' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Latitude:qk]</rows>
        <cols>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Temporary Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessName]' derivation='Attribute' name='[attr:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='Attribute' name='[attr:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]' field-type='quantitative' max='-136763.57030345857' min='-174514.59487166218' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]' field-type='quantitative' max='6618955.028307993' min='6594166.0211952571' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:BusinessName:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:PostCode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='74984' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='74984' id='3' type='layout-basic' w='66991' x='0' y='0'>
              <zone h='74984' id='1' name='Tableau Map' w='48627' x='18364' y='0' />
              <zone forceUpdate='' h='74984' id='8' param='https://www.google.co.uk/maps/place/Jungle Jeans/@-1.410838,50.901471.' type='web' w='18364' x='0' y='0' />
            </zone>
            <zone fixed-size='780' h='74984' id='4' is-fixed='true' param='vert' type='layout-flow' w='33009' x='66991' y='0'>
              <zone h='74971' id='9' name='Q3' w='33009' x='66991' y='0'>
                <layout-cache cell-count-h='57' has-max-size-w='true' maxwidth='565' minwidth='565' non-cell-size-h='93' type-h='cell' type-w='scalable' />
              </zone>
            </zone>
          </zone>
          <zone h='25016' id='12' name='Q2Bar' w='93678' x='0' y='74984' />
          <zone h='20242' id='11' name='Q3' pane-specification-id='3' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='6322' x='93678' y='74984' />
          <zone h='4774' id='13' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='6322' x='93678' y='95226' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Final'>
      <style />
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                  <zone h='72884' id='1' name='Q3' w='33347' x='66653' y='0' />
                  <zone h='27116' id='9' name='Q2Bar' w='87818' x='0' y='72884' />
                  <zone h='9548' id='13' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='12182' x='87818' y='72884' />
                  <zone h='17568' id='6' name='Q3' pane-specification-id='3' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='12182' x='87818' y='82432' />
                  <zone h='72884' id='17' name='Map Best' show-title='true' w='48667' x='17986' y='0' />
                  <zone forceUpdate='' h='72884' id='18' param='https://www.google.co.uk/maps/place/Above Bar Church/@-1.404832,50.905218.' type='web' w='17986' x='0' y='0' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Pie'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='83705' id='1' name='Q3' w='34466' x='65534' y='0' />
              <zone h='16295' id='7' name='Q2' show-title='true' w='100000' x='0' y='83705' />
              <zone h='83705' id='8' name='Temporary Map' w='65534' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='16550' id='6' name='Q3' pane-specification-id='3' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='8627' x='1089' y='64799' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='110'>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Rating (copy):nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='86'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temporary Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map Final'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine3:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine4:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessType:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:EstablishmentDetail_Id:ok]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Tableau Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:AddressLine1:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:AddressLine2:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:AddressLine3:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:AddressLine4:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:BusinessName:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:BusinessType:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:EstablishmentDetail_Id:ok]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Latitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:PostCode:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Q2Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Tableau Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard Final'>
      <viewpoints>
        <viewpoint name='Map Best'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='17' />
    </window>
    <window class='dashboard' name='Dashboard Pie'>
      <viewpoints>
        <viewpoint name='Q2'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='worksheet' maximized='true' name='Map Best'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2Bar' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Temporary Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABnWAAAZ1gEY0crt
      AAAgAElEQVR4nL19TYwtSXbWify591bVe/1merp7fmzGM7Y1lsHGxhoJI5sBiYUN4mfBCiEh
      i4034B2wZIVgYTASWFggYbEwP5JZwMZiEDI2so1mhAX4B3nsGTxqe3p6unvmvVevqu7Nv2CR
      N7JOfvc7J+LWaxxSqW5mRpw454vzl5kRkeHNN9+MTdNIaYkxiohICGF1Th97bVM9Rseqm6OH
      tEr5KeHzZeuza1Z9Dx+G1zAO0o+jxBilbRppa38cNV4PGb8cXevavj8cf4uEcP9/ilE2Tbvi
      +2XwQplEuH7puk3TNLLZbJYG6SJjooSpdG6aptV1BB7paUVGWrq+HsSqqqiwSMcCgpXStpqf
      xIdXx+of8dI4oYFju2qsZOxm5WqaRjbtpkgOjVeJoXkl108IQfo4rvE6Xq9DkPZoAJqXaZoo
      ppou6mmpbqEeNjHGlbKyAbE6Z/WRGQaYZ2DWdTQmJqg+1vWnaTo5ZxVL4SxaqT4zBOZtc3iV
      OhpNv6oq2TStKYfmUdPth0Hqul4UUl/TvHolhHDi7HSZpkmCBJEgUoVqNtwQJEiQpmmkAj5R
      +ZF3y5Hq857u4Tg1qQF6nKqqTgDTdRlYqBSWMrFwdeg7GadRqqqWuqqkruqZpnDlx2NLCUXk
      5JxlKPoawyDRSvynwdJ1Pf5QKUvxwpLqVGHGqW2aE9pMNhGRKFG6vpdu6I9RJMjFdjcrKcHL
      i8paLutcVVVyud25GYBub42VxouNi8WPh0mMURrdCCtZipcbJLRYj8HlvMw5YZxGGcbhnsG6
      lovNbtWWGaGXJ6IMXqqk61opTDpOg+UpnO7HG7Rz8Uplt9lIFSrqJXXbKUbph16GaVzXE5FD
      3y0Yaz4xxbCKl6ZZiu7JVKpfjD9PD5CfGKNU+qC0MCXE3zqqaPpWvixESUIIMk6TdEO/eFk9
      uOfk2J6M2CemC6zu/y+8UoqFysx4mNOJdbqg74uSp9z3B7k93C3Kj3iN02RGasYvnp+gfWkk
      s0opXokXL6Jrflk0a6xGXvFyRMvS9DWaJgApXacfB6mqSirhxpPL+zy+0ZCqqnJTgIcUL41g
      qVFuQLWSY2qh2x36TvpxyNITmTFO9xEs+uljCy9UtIdiV5J2WVGZ4YBRQtd5kAGgNTJBWS6H
      A6eZymGVerRyZQYa9kNDoEpj2HUG3svgZaVrzOhYXs/kTvWmOMk0TTLGuEojraKvDUdDmeL8
      UKSpa9k07QkGmPahslPndmbxojZTdH2OjZlXjHykrMQYT55miMgqjKNC2ce216hCJY+uHsmj
      R4/k0HfSDb1M4NUQgPQ/8ZL4xCcM+r+mlX570e7cgsqPqVxKJSyPxVIzrYB33UEOQ78ov8U3
      84op1eyHXqY4HR9KTNnohH/vR8RE2fAc6llJ9LfoNXjBCqkWcSvklADhhafFqiXIxXYru91O
      ur6XfhxExvv2zfGpURWq+ZGe8lBajrquV/3m5Ent9RMHJlOpYeBj5VQSfebZkgFrnk7wUXLu
      2o3s+87N3VN93Z4ZeghB9v1Bts1mjixxkmmao8zV7iL5Kxcvhtm5eOmC9L0UPGGreWDvjSpG
      yAtBrEMvTKOXZVYZYxQJ4WSARUS27UYuLy4lhCBPnz9b0Y0xSj8Ochh62Q/dyqNiP8m7Yi7L
      olLyLOkYZWADk8OLYeopA0YzxIvx0NTNksdr2awo4JXUdt8fpB8HGcZRxmn2PIgPSxuZ0WId
      jYXHH8OLycWMBh0P9neSAqFAVr7NFJvlyahkmkHNcE0e5VUhyO7o/e/2ezkc33oiMDHGk6ch
      TGmt6MQGkCm1abyq5PBibREvTIUYXohr8m5t3chus51fNjl9WvJrOfB6OjeCAVj02H+G5UPx
      stLbVFe/p2F6LWLcA3gRwWL6ITmyfnnUHFMU7UGaep6mEUKQ27vbEyXWfTbHR6Sav5wCMDqW
      50rh16qbw6IELy+SWm3wfAjhaAS7EyNgzqCEvr4eY5Qo/IEAS++wPWtTgpdVmNe3xoXxWTHL
      Ku3c8pKWknnpUF3V0tT1qv+2bhZveOgOK++oS3U0FsYLq49g5BRD86zpnYMXS8nSeRYdGV7I
      C7uWaNZVtXq5VVKsCIF9T9PpjXCOnsbK6kPXtaI0i3q54qVjFXpBLz2wCFv1LA/LBj2EILt2
      K001R4IUEV7c3MhXvvZVGcbxpH4qzXEyFRNSK7U3UJ63sPhFua3BLfVyluFZqVZKA7w+r7YX
      UjuKUoLXuTqRU3DrWLfVvy39tMbN40/fv4io9wBWXm91hILqtpZXw8Jo7jZbOQydDOMoMXYS
      47TKOZmQbd2c8KJlYBGJKS4z1BACnXvC8GLXdPTL4ZXSrFK88JyVV+/arRxkfimG15BWiYce
      p1GmOEkd6hOFzUVFS2EtfPRvjCIxHh+e0J7K8DqZQI4D5xFGi2X12OM/zyjmzud/+nk28rac
      k9NHg5bBslmvjCdmHJZiWnhh2me1Yzyy3NkqlpdO15Z0smmWt8IWRiiHL8PpNJf0W+PlzRRF
      PTrHWYrM85v23V6qUElT11JXNb35x740zydvgi2FRivN5WleNPG8XHohw/pnpWnu7xu8WYIi
      ds6IA1BV1YmxWMpQEulyoRoxQYV66HoDTSdNRfY8NYuCrIQQ5pm7x/uuqqpkHMeTt8TpGuOJ
      6ZxlnJaRD+Mw15f5cXg39McZsrNBJJl1P0j7BNkU8lkjNheeKYUXAj0lHadR9t3eDH+6JBp1
      qE+uW54JzyFfeFwyCIhXqvN+4pUr+HabRVx0SlbEK+ULTaM+PsBAmiw1pZGcZBMeVlFExjid
      XpMowzTKXXeQu26/TLNnhhdCmBfEJGZYDqjPeW/5vJRDC2cp4hzODsLhPi3hmPvhDR7rL/Gt
      vZSWDfmx7gcQJ8QLFcBbh8AKi66ecmoj8/opSWdZ/167MU5L/swUV+PCcnzWd2nUDyEs9zNW
      mY1BZJhG6Y+Roq5qqY/pUuqvyQ2uxdxJZwCCJ/Sp8k+y77rV/B5sk4rHSy4PtpQfz3mKivgw
      vDTPpbktRg2PTy2vfpdiGSKTy8KK/bb6tlKoUvw0H9Yx4y/Xh9VunEYZ4iDdGOY0Kdb3N8Gp
      kr4JS+f0DQ1jBG90VrmnMXVXG9e+O5jKrwvztvMqsvVbZK3o1trkHGBWyoOF4WXxqq9Z6QJL
      PxnvOe+q2y/jmN62C3dsc1QNxxvKSkJ6ux6j7IduZZyTkyngOU+5rXQI5UBDL9EXVu71Zn66
      uCyJZHMmmCdhSpzzyCwdELlPe6boh1smgKaB16wnD16410adrnue3ZrcxvrTdLyc3lMCxjOm
      pVakTL8vt/cr66JEiVEkHie51XW1eqKG/O/azcpRzTRkWU+s8dKRLDcmiBczIsSGHT+0VOg1
      mSKwjlmoxoK00u9E49B3EsV+Tm7RxPzyRChYOYa8s1CaSwmQBvP6jA4qgOcFkZbGwKqjlc7i
      lfEUJCxrrzdtK3VVu3jV1bw0VSv8dJwch3IwZ2ZFSfzP0ipsV+IoS8tqSWSJJ08MoOf0nrEj
      HRGRu+4gk7qLz3lTTVcDnZbzMWWuqnmKtKfcKIfXnxchdRvNhxVp2M0rFqst44Xxkf7YlG7t
      pVNJ08kt71odp1ek5+7IJ/afO2elbrkUSUROdrJ4aMnuiKXBZwKk/6VWGeP8zDZNrS2xbCsy
      zLngtOLPSnOQvmXMTLGZR8oVpqAleFkeMP3O4WWlUToiIh9W1GJ4zUawPVnH4KUonnP1HJAl
      51L/ZbOgGNeT4V4mr2J0WD43TvNqo3P6ijEuLzdoCff0df8WLXZcMohWiuDRX1gkg1iCl0fD
      Kh5f56QSyE865zkqxBEX+efoM95inB9h98Mgh76TfX+QAdIvRjtXQqjub4LRO6AQNUxXzhM/
      fTsb47z/jwh/wcMGKR1vmlaqUMntYb+6bzjWMHlIdL3c3GuLx5aRWXilNqVRxLov8bw9S40w
      /SpNLxNdK9pYG3rpPtiyU7wpZikZky3pDL70MksUqap5x7kQguyP+sZKU8NjUDZQuEuCZk4X
      zClZXt4d15tSvp2QmZS/G3r6CA+HNhcJ9Hn2mNZKg1g6qOXTOTf2hcpiKTnWPyfKWNeYY8vl
      2cyQRNZ4YRqEPGi88FG1Ps94T9e7oc8qf5RZB5qqlqaqV2/x0zJRhkkVwum+QFoQa0oEA86K
      DBrENN/fSwf0tbqqZNduZHO05mEaT4AOkp5I+NOCEyiWp2EDKHK6/I8pEhoFu57bbY21ZXSZ
      fKVpk6bLIl/qS/dZgpe+5uGlf+NUEy1rjPO9XTf05hvfxEddVbKtW7nc7GTTtCdTMuqqll2z
      OWkfQpDD0J8uimeeJ3l39GDINHYgsn5eftftsznfSrBmc08nzntMLunP8hjvNELpopfFlRYW
      FbTcumCap89ret5zcE1fv1hjUSLVS+fTNYs+c0y5yXXaqC0ayIs+ZhEOHSvS11jfqvlgzADr
      qpK6bpZp8LmNC+q6louwvc8gUsiQsF4PwAYxhCDjONKwj4Jb50VE+mGQfhio1bP2/TAvxG7r
      RrbtvP3f1e7CnV9k9Y3GyooVCbANUz6sj2+Hvcipz7G0kWFj8c+UEd8/YL9YX8uWjkvv13Sk
      Q168cdNOio7P8Xxd19KE+xSH4ZX6QIdQVZVsj7tna94rBI8pJIYrrzBDiTHKYejc8IzHLArp
      0OkNopcSWIqr/zNZsB7DKxVLCSx+rWO2kZhFI0UZzTemXkzGHH0PL4sGtrEcAMq5YKn6qKtK
      tu1WLjY72dTt6uEC0sX7E6skHZqm+wl9K2ti1qWLNxisftrbE9uip2GKizldGmSc72PdkGl6
      zFvovjxlZLx6OHkDrgtLJRlv2Ibxzu4zEC8doayUJ8ezha/+HSPfdr+E5sVmJ1GiOZ8/8YpG
      7/WD+pfar54CecrDiHjCaJDbpj3ZmFXTcsEGAdiUbCut8jy91QbbIbBeWoL4lODlGb/mzbpu
      bSCVyvuBF7vm4WXpEcOHGW3JstActhZuaPwnK8IwjGLnWom8UKOBqMO84H3fH8xHpehZE400
      R4UJyPpkYZgNuBXdPGDZOZ3bsqWMOby8dA2vp/a5qGwZNBtPxIspZarnGRuLHlb6qFNZSwY2
      2TAXpdDBWgam29LHoKUzFvFpBaOVSl3xr5hgsQzBqq/7ZIqBxXrCYhmM11+iV7JkkfWNv1EW
      HDAWjazULmdYucfGqVhPxHJ4WTLmnA+mhPp8MsJEh/FiyYEyLGPCGugKuKWg1THLsRCAtm6W
      N3T6D0FKpTLA0m0974ZPC7DoOpquZUhsTyCGVzrnpUloFJY3RP50W8sbe8qQ+GLRysJLK2QJ
      XkxZmUIidlbfuliLmhAvzRsa1MrATzgC4vg4jwnAhGbXReY3c97XDDUgdfCfYKBgrI6VymFf
      LBVAQ/cig8ZLK7/Hm4i9z6a1wzaj461NQE9sGY2WA4v3nJ3hVNqX7g/TF11ft2O7kafzVh/I
      l6ZhbovCGlvXRU5fbujraH1pasNh6E5AWOV4zuNE1pfnva3UQCsgiyy5Jxnn4sW+BllCVxdM
      pdjcGzwuxcuK9vraaoxICmbpghcBrMxBO2HPCbGIxfhDvE/eBDPBSz2sla6wMi+720l3/G4V
      EzAt4bN48JQdCwPI8qw4wLm3yaV4YSrgGSyTiSmHNiTGAyqwR9tSElQoL6qEEJbNB6xxKHGo
      7NrL4MXOxUg2xkImLKbZmz2Laaukt3NtnFbvCkTkuK+Lf8OUS0lE/M1T02/mJfU5dpPLQnVJ
      8fCy5MkZtK7zULxYPeYQ9LFlGCVbuZQWHMccXpZzQ77TsfmRvFIFe5myABYq2R3f9s0fuwjL
      PCDP6+Z4Y4OJ/VuKxHJvTdu61ylNZx6CX+LJM6DS6d3WNS9lYnRKnYB3D1HSRyle6JhyfDU6
      z7LmZOTy4RLPZYGsz6W0KE1Y8gahRKFZeuDxzdpaWKDnS95JY5TDqzT8W0bM+MpFK+zvHLwY
      XWzL8GJpH8MIUzrWD+PfksPiVfNZ6RzcmqWXiv4EUbqeKywHZUBpRvU2fjmaTEimSHqASrwQ
      41HTYukf0nkZvDSfHl7Ij0eTtbPOabxK6GkeWYrJxgZlYlOkvRJjPHlalsNK8yQiUkWJx52Y
      eWhlliNStqg7hPvnxiX1sW2JACWekl3PhW70ghYOOMDaMB6CFzOskpIzDq9NLm3yjLyEHwsr
      XRfxKulHP/PXxldqBCLLU6BJ9v3h2GmQTdNIXRnrb2X9qIuFmpwhaTrWNatfXd9LT6z83wKG
      1cHHjbl2uuiUSEReGq/StITxZeGFtBEvPGd5Z/T8nvJaMrAUEutjeqbpMIeVMwKR9B4gBLXB
      VJRD30tVjbJtWvr63mKC7cKW+31usbwyFuxPP0XwogbLJS3l8/JMpGEppMcz/j4HN6ZM1tQV
      1p/1co3xbhkrni/Fi50r4bmEFhb+SjYc91GcKtnASwj0CCkPw1fk54TwnHKhAniAWHkr0kD6
      mB55is7aW/cVzBuxbwCcUzy8tBxs4h1rwxTTU94cXha/un1OJt2mZFe5XN+WPPZUCAnL54qY
      gMwrvt9envLlKLLV97m8nLMAiPXh4aUVU8vysnjlZGaR7iGRBUtKFXORMZdGevzjeu73A69U
      7Ek5wQbG8ogl4dG7Xho1dF9emlLydZKcd7dkyKVHHj3P25V4R0bXwo45KfT82jg9vEqwsvhk
      U6ytwvDKZQfnXkvFNIAY47wAXXwiCGiJZWK9UkXAayVeL+flSjylx0cunXk/8LJ4LsHLwtnK
      7z28vHMeXpguWWuM2fQJTGsxncyVHFamASwDBZEAGWGCYCfWNSYcMo394DVPuFT0wnBvN2Wv
      YB/eDMz3Gy92Tsti4WVhp+vqa+z+yYpw1lQYS25L8VOdnOHkjJf1qflk7WKM9j1AFcLy9fUk
      gJUanGuVmoHElP7T1xldDP3enHqWLiF9JhMWS5msgcjR1spaihvKov/rPr207NxxsvCyIojV
      1pOV4cUiVyleGGEt3RJxboKx45KOcjkpA43lwwtzZJqvZxC6rZV3W8WSUb9pRH5SJED6Fm6W
      Qli85fBCpdf8YaTzFA95S8eliob0cPy0AuYcKeMNebJ4RjlZNERMTAPQtL2wiMRLvAtjlPWj
      r1nnNS1UiBwdS8HQa3gpljV4+r8VmVD2cw3Bk7NESVAupjx4zsMrV7yoxHjVBXd/8IqVOrH2
      1mLW1U7MCAJbxcQA1Msp0dt43qfE8+AfC3UlALDwi54i/feUlPGf/uullBYfum/kwfKaJSkB
      RgovKjC8LC/PeLbSDM2LxaN1XUc3HAvsw8KLyZUKvQnebbYnUyHQy3uKhQzmvO851s36SDQs
      L4wAW/zodta1ksiC/OVkZeHZ4sGiYRWWZrG+2BdscoaVaOl+9PXcWgw8zyItk5X1ad3s5nBd
      RYBUcRjH4zek4sqLexbOPJbllS0h2DXmvXQ7pK/BYEIjHWbI1iDldn9gGwhgPTYwDF80unPx
      Ytc1bRwT60FCDi/WJh1bW8BYeGGx8GL9so2cvWvprxKZF59XIcz7cDYbaZtG0tc3SvM7ZMxb
      TK/DNxMmMZqry+hqhWFpCxqwBb7Fj1VYpLHqsb5ymw/k0h2UsUQuZljWrtGpjqWEf9B4ecVy
      Huma1q1m02xkt9nKFKPxmYlTQiwXQ8XyckkU3gPL86a4HaKVnuk2VkrAnql7xfNallw5ZdFp
      g4VXji+sX0IXIwHWYQUNkmGNjsiql+ixPqxrWi6UOcf/St6QGpMG6P2t8GeFdYuOLl591i6B
      mdsLFPv1wLTSOotfTymwT6aMFi1M60qL18aLhqwua1fqoa0oXTrGJXjhfyZ7SYRIf5WVXqTz
      3udQMee0OrLq5BjV7VhEySk449/ql+0340Udj18WcvHPKufgVZLOWVHoHBqs4JNAkfxyTEt3
      PMNBA2Ly5LCycInx+JE8NtBLhWr9NhjrsU49xfYY8zy5N7jMk1pKnOsjF1GsFArpY/+ed3u/
      ohNrg8VyKp4Ts84zmfR1hgHKwfBCT5/qsBdrjFemV5YclTcg7C6ePWGxOtYCMLCZ4ek6GmSs
      r39bnz9idb1rIQTzaQgWtmUh8pCeclhGcC5eWJiieIqnZbSUx8LR4pt9CIQ5EvzNlFjjxfjw
      nBwzHK/tgsVJTUUcFZEBbAnpeVK2PJCB66UCOU9tpUIlvOt2VmHKm/N4Vp+lkYfx6uFleVJG
      P5WEE+KlHxJ4zsaTQ9PDfVYZfx5eOXlYGqrbpt/UANBLeIyyewT0BFoBLa/keTlNS/PjpSNW
      esWuo0LlFJIV/HKNHjzPO1l1rI1lLaw8b6nlYvWYJ2X12Nh5TooVnV0wvNApWI5Sy6gzEwsv
      yygqSwAvT8T9NHWbkh0GUJk9ADHvszweDjALuek63vBaymm9hczhhd7Te0vtpUEWXlbBNAYV
      jNFhfLHUJIcXGhJTXryu6TNZsVhburM+PVpatyoNGjZkYQoFzqURucJmWHpRgg2yp6D6mpff
      MzlZPVQudAxe5NAphJbJ6osVZtiMZw8vzQ/zjowWFtynn6VFlkz47D4XbTx98PBmW8Bj3YoJ
      kf6slTteuPUUCNMQRptNL8a0hHlZxsu551ixlADxsurGeL/rHuvb2/lY42UZLYu46I1F+GNL
      XRfTD+QD6em6bJGRZzyIj4UXRi0LE2/PpVyGYm6PzsIHsyCvQ6TnraLC+hZwiScNug7R1jYu
      Of5y53L8olKhcZR89wrpeauukqJgYfU0DUzrcnsfWd6XyWA5Gssx6HYWXp7xYd+sL0sPUnEX
      xOQ8J7MoLw/LRQCkUVpYaC+VA3NaTGdK+fCimv5tRTbGA+JlRd5z+MTIzto+FC8mrxW5NA2r
      75fBKydDKvRFWCJmWRMLm0wYpIV/XhtsbwmTfrOP71neGb0CAwzf+Oa2NrRWr2H/rDBFZ+mV
      9fABaTFDwZTBilhM6Vjx8NLRy+IRH25omi+Dlz62dFu3PZkKgUxY4fccxS31KKyONZUBlVgP
      LnoCVp/xiX1b36Oy5LDqoUJgOoFpCbbXg5mbrWk9KUFPyXJpK9Kwvhj9HF7MgzN5cdwsvLyS
      aI7jaMoQY7z/TKrlGXWDc3Jj7MwqbL8Y9j/RshaDeLkf1mOgYhsv30x1vT6wL4yUTAFZf7qO
      RcczbtZ/TnaU5SF4WWmcpsnasr4svDxjTDKnL8tbxu2+CUbG8TgXBawPvXkCsH4tb5DzdKww
      D8RolUQ4VteLZjmaFuZsi3VWlymphVcuApdet1JIVtfjw2tn6YmFgbclPUZCd18giykWkkq8
      Uy7cWteYR8DzXr6H7Vm9nGf3aHt9o8fS4d0zZuZBdZqh23or4BAvK5WzZC3BK0eD8eMpNeKF
      e8/q+pj6avn0pmUWjicRIOfBkJBWdA/YklTCo6GFYjSxHYL4kFLitb2bPXQC+PLI8sia/1T0
      4CJeTElxTo/ulxVN46F4YVvmyHIb3eo0F6OMpotZQQhh+c6FppXDqkkWlk6mu3nro2TMSkXs
      77daUaAkf0NgWF3dxjICXSdXcgbDnqOjV9EyIFYMQ88j6nasWG1x8lpJ2ldCFwsqGRbrE0gW
      XrjVJPJupcL9OMi+O0hVVccNHY4OWtI36DYLP5p+kzrOhUo2iAgWel1LmXLpyrlpEgMVaWL/
      pdeQf/wQNjvv8cuU2sLLU8BUj+W7Vjqkz+X2/0eaJdeZcec+HI48sCWZ4zTN342b7vsJat/a
      KUbphn7pY5zGVftJJrmLUdqmWX2kPcZ4/53gUq+LQlsKboVypvxe2GJtkVerL0Zb/8+Feoww
      WJBeCV5eX2wMPLyYI9LnGV65qIJ4MZw9GXTxDDoXXaY4yThO0o+DTPH0MXGMcd66M6z7tsZq
      nEaZ+kmGYZBte/8FUvMzqV5hSoi/dUjT9HNTAjBn1Tc/egot5sLIA/LFUoBU2CB5dT1allwe
      XvrYmod/Tj94zFIIj0Yq5+CFNM7Bh7XvhkEOQ7fy5id9yOlY5KJmVHWqqrp/D3BOyXlcTKfQ
      Oq3BTykMs2IcWM9Tebxi7o3/LY+Jufw5xUsjPLxYfSZLDi8sObzYmDGs0nhZUfuhRhBjlG3T
      yjgOImQsNF94zHCYt/xp5w2f4WnSgwzAU8ZU2DYjeNNjpU+lPFhglyg71mXekrU/Fytsgzly
      Kududa7p5bwea2ulK1b/6Zy1fYyFz0PxCmF+iZWe7OToenw3Tbva6lOXl/qmfYyRPv3Rr+PZ
      PqJIg1lyrl8WAZgn0o8DU0ql2+n/SEuf9z4wV1pQ+VkqZ+X0+tw5ebkVUSwnhikoS9vQaTD8
      349Sh9qV95y+ovC6VSJ0bl5r1UUly+X8eJ2tF7a8t+bdWnKZ6New2S8OriW/leadi5c1hYM9
      CsS+tSHg3HvEC38j3+m/9Tx+eUHkfMeMGS7irft8KF5t09BFLey3V/pxOHlRlnhZzQXSTLM0
      ghUdOlmuhvWwWKGTWT56fd3W8xIhrF/AaBBYv5ofK/yei1dJvur1YfFnldwLMG+f04fghe3Z
      b10nt7FZOrdtWtn3HdUvL7Vs6lqaulk+9GLpZvZNsJU/MiBwIbdmjLVhMzdTX9bzfKbo2FbX
      054JwzRTQuY9Lc/FvNo5eDE+Eo7n4sWM1ItyzKHgf0/hvGLJb0UnD6+mbqRtGop1wgmja1s3
      smu3Uodq2eUcZ8ku9JH5nPeymPbA0QDoc9ZLpZySYtRhnsbyPkgHUwFUBEbPquthcY6hWHyj
      R2b9eeNgrSBjUc/qn0UGS6aSqGfxq+k0VS29DC7dVDZNK5umPaln/W4YAPi62CqoZJZHOakn
      IvvuILV6JDXFKDFOEqPM/0EgSxG9NIFFHjZIyCMrGhtmJOemM2w7Gba2tpQvXZij0ec9pTsH
      L48W8nFONDk1NPttty51VcmmaU3DZOPQeIOZY9azROt8CEHkeC69vtZ10VN0Qw5osW4AACAA
      SURBVC/d0MvlZrdSEmsQGO8lBuPJqEOst4u0lZuW4GfxxgZNt/WmNGjltwryau3pf45OeCkj
      HjMM0CkFEbnY7GTfH2jEDiHIpmmXaQ5W/6xP+iaYpStM0JLUQZ9L56c4SVVoVOlvgrDMoo/+
      w1QCvZs+nqZptQYYUwBvPj56xJfF61xvz/BCPi3DZFGbtdN1044NbK0HYmDxaxk+8qKfRNXV
      PKGtArzappHL7W7x/Ofi5d4D5DyXpeT63DRNMsVJ+mGe0zE5bbzB74ZeLjZbqmxeO+SFKZ63
      u0LJThaMf5bz5vCy5CkxitLocU4E1NhYkRDplhgy8m6loIhXXc1Pdvpxvh9I6fE5Oot4nbwJ
      tgTQ53PMYtl3h5UHz31qiNEfp1GGcZy/XqPqe2+XmaF4fKaijQUH2sOFyWPhxeRNdZHvc/BC
      L471rRTHomf1wXa7y3lcTY/pnIWX/r1pWunHYXWzi3J6zsVMgXRj3BJdM4ZedIqT3B7upBt6
      Gcb1NFSR40sIJ71ixRK+G/sioFloxzq5ohXA8uKpHnsZpZVZ92/l6zk+vGu5HdA8I0z8MmPx
      2uV29LPSGsvQk1ExvFC2i3ZLb3a9gilr+t2wQbNegiDQU4xy1x0kxnk+tohIG+c51zFG6bp+
      CVclisTqrfqbJhnGUeq6WuaCY9EAI71xHOkSOQYW84BYH/FC+Txva8mH/FvtmBJZ9T1MmYdO
      Bp3w8vDw6DPd0sfYpob5OpbceqG7168nYyqNtnIvlKKCxhjl0B9OOhvGUfphECyMLitVNSt3
      mgOOAhyGTmSYP+y322xdwbG/nEJ6SpXqW3kr4uVtecjk0orHjMwqbLp0SWpi0bTwymGrPazH
      b04PvJSyRIfOiQoikAKFEGQcx5OUIb1F1c+u+3FYUp5zOrTqJtp1qORyu5PtcQkbtk1hclTv
      CpAu5qooY66wVEWnhsg3hmy9rJQVK6poz2hFqHRs7Y2KdXPXtXyMXmn6iA4SUw3ND0sJNa/M
      Y5ekVewacyia/rI5blIsa9ajZrwfejn0nWutjBmrVOqV9TJ5rappmrOAd/zz+kXvx1IwHCQ9
      IGzb7nTdmty2ksu4l8rl4jkPqnn05NPGeA5/SI/Jy/DS/WA+n1sMr2kyvKxoURKxvfRteaSC
      uZ6Vk8cY5TD0Z3l9FFBkVvDmuIAZQQph/nRNqPhU3mmaRMLpNhnYD9u3lOXqTE5Nh6WD1sId
      K11k4KNMONiMjtcfFk82XXBbQzb27LGnhRe7xvCynKyFhf7NDMpycF6K2OgGVt6lwdkf8349
      IMx7YEchBGmqWpq6ntdyyn1akWhsNhupqkr6vpdpmmTXbuXQdydrQkOYV/lghNFbauuUJbdP
      pTX1w/P0JXilesi7ZQS6vu6j1NszerpP/Z/hlfPWmsdz7g8YTyVY6Do5WlZEx9+IVaMbeyU1
      2hynp7Jczip1Vclus1tSlt1uJ03TzEZx/I8Cv3jxQqSfX34d+k6GcVjWc2rlRh6ZF7C8TxpI
      piBIE/PQUrw0H+waa8cMiKWbjI6VdloK6Rm2hRerz7y5xTeT1zOOXKRneLF2jE6DjXODU1e1
      XG0vZN8dZJhOn/sjaE1dy67drl5h393dUfCrqpK2bWW73cqjR4/k5uZGuq6TbbuZH61Kekp0
      z4+VtulihXUrxKbj5AnZ3jYWXqXekPXLFFTX88YmV0qjjtV3+m/t/5SO9cctWJTxeEJsrWvp
      mI1lToexLPsCWQMkMofE9Ow1Ed9ttjKMo3RDtzyNwc7bupHdcfqCpmkN5jiOMgyDHA4HefTo
      kVxdXc3P/odh6X/O/0+fMOjCgNbvAHQdDzS2DaH3kIDhxfiyvCYzZEt5dJ9euNdRziv6OluP
      YPXPsgC2IhBxZhEClZnVtaK0lwJpfvFaeOutt+Jms1lVsIBhdaJE6fr5hZdmrK0b+igzx5yu
      8/jxY6mqSm5ubqTve0rHC5OeR2Xnc549NzBIy7rOePNKaZTx6DInhKUEL8uIWcrn4SViv5d5
      Wbwsftj11WxQK2fSNyFoeVWoZNtuZLfZLgK1TbNsPuQx5jGu3z1cXl6efFABB8faF1/X9/pn
      siJdL5XC/+k6/qW2jMdUvDzW4ts7ZgpofWcgh1fOgNiHSvB3CKf3cAwv7JPJhNet7MLiebkJ
      tnLjdIzLHbFNU9VSb3YyTqM0al72NE0SqrA80/c8VLp2cXEhu91O9vu97Pf7k5scS9H09dSm
      5PmzBdRDc3zmMLxZpbou49fzwp6cVvpkfZMBZfZwsAo6J8txonGgjN6iLA+vkuioU8OGVdDE
      Qggn+bM1ICIi7XH1VhKyqiqJIjJMo9ThdF2uLlVVyaNHj2SaJnn69Cl9+aIND0FmAKEs1kBa
      bbxBsPBig4cKgHwzZcVUwiueZ8a+8Jg5FX3Omy5u4YV8sGf72nh1O8/g9TmGl6df2DbGeL8t
      CnamCVtClZYgc4Tw9tZpmkYePXokd3d3cnNzQ/kpVQhPniQ4KgCjgeB6XvKheHkpTMl8otQG
      b7ot75/oecd4zYpuWM/CGPmwIpJXh51HuufglfBp8ELOu3rM6fqeh9HnY4zSNI1st1u5vr6m
      /bA22psnD5LzgpbhsPpMMfUjPU3P81oeP0me9J9535wRsX4wBRRZe3GNl+73XAX0+EBDyY3J
      OXil+umRK8putWN9NPqEl5/rznObXYmsQWZWm/qqqkouLi7k9vaWAoY85dYE62Llh8xbWSme
      lbtaTgJpe/xpmlZ9y8AYr+xcbgqDlz97UdJqd27k0Y6sFK+SuhZu6CxPNsZiHlZ3njMGVBCW
      C+pQVVXV6kYXvZ/lZdELM0PD/pA/tl2iB6xFP9Hz0hkPL1bfw4sptJcaeIaF/DFngFNKdDvr
      Qyr6v44GGnMPL2uNhVU/Xdd44djjZmEizoowy+NoIiyn18Iy5vFxZoxx9SlLfZ6lGiiA7ps9
      2kOFY3ki5qyeV9ElYVV6o2zh5fWFeCF/LBqhs7C8Meub4YUORuPFDD9H34poFt10bhgH6Y8L
      ryyHyPDSOKBurVIg3ZlOZZhH1p0iA5YHKlFiVizL115c09IeWXu1nAfR/XkhnHmm1AZTP3wu
      jr913fnN+jzAVQgiQaSS+SMQdVVL7TxE0Odz6YpWQoZXauMZERoEiy4lXhwjKN6fpDqHoROR
      IJfbHY3+TO+YkaAc7qYxOvwhOKzggGuBMcXyijcDE4+t8KuPvcFEfvQx8pzLTXEgcm20rDON
      efG/hHnBUX/8SMShtz8UkWhYHm+z2bhLCK1jxMsyLsTLcnasrQifKsHqjdMktZpnpOlpvfN0
      ixls0daITHkwQrDwrDtjXpsxpkHJ8cQGz1M6K1XQ/9Fg2FYqJbxZ1/F5ePq/P854DSHIN334
      owudd7/xdbnb39E+d7udjOO4miai+6vrWq6urkRknmf1/PnzIrw0FpZz0DQYrkx2L1VibdK1
      uq6lruplffm2Op1iwyKQPq+xXs1V0h0xa8YGMd4vS2S5WonQ1j2G5XmZ12F8e9GGAcT4ZwPM
      Vobl8LJkoIol6w+73R5ny1ZVJR/64AflYrc7kX+73crFxYWLV5pqnmQoxQtvUNGgvZQmh5eF
      iabHdGvbtLKpmyUNtIqXVmOUiJFsjGU1TsQTQNYOBihQzkNa7TQ4XlizSgIwt3JIn7M8h/fY
      V/OKfbPC0rFKKqlCSB9BlJu7G7m6vBSROfd/8vgVefr0qYiIbLdbadtW2nbeFuTq6kqurq6W
      /sZxlOvra6nrWnZHw4kxyu3trSsDypJLeRleVgT3CovCiE8aAzTMc3QL66e+zC/Fa0+GnsLq
      /NySo2cpf84oMCJ5qZEV/nNOwIp2D+FXROD7JWu6z6+vJcq952/U5mCobHVdy5MnT+g9gVV0
      PfaCzKorkscrV49FoYc6vcQf0rRwiDHe7w6du3nzwqDXAatjhSldx1t0boGDfJcMoHXNUnR2
      z7NKZ2AAWW4bwvzEZ9/PO2SPEJpH+C7WZrORu7v1fYAnA3q6m5ub1aNm5BVlznl/XR/bIk1M
      ZVC/vLfrrB9drJetuXHXOt9YzLFcjN1Q5LwMA7QkvTknjKKQLJVhoRV5RL6tgbByYMtJMLzS
      arqRPDXr+k7e/cZ7st1spW1a2R/2C81huF93YS10Qf66rmNwuW0tI7AMA3XFSieZs2B4lRog
      vtnV17xInc6d7AyHAOBjqlS86aqso5JpvqVF08Q5QDFGd0UWguulOtbjRd0elUO/hcQ2OMBp
      gmCQICHIkuZ0Qy/TOMnN7a30xx040uKiNFHQSkXQWVk8aPnHcXTxwrfRXsRnBoS6pemnYq1P
      8EoOe2zf3d7I/vpaXvnwR5ZzjQUU+42d5fJdzRQTvsTKGV8WrXQ93aRby/FyMqe2dV0XeSPm
      1dKfnoym611stnZeHETeeO11EZn3YPrqO19z5dfndOTGaxb/mEYwxUUlZjInvLw1GFYmoPFi
      fbD0DGVDeqtUaxzkP/6DvyvX774jP/Q3/5Z87Du/a5YdG7A3v57ysnOpPq7BZWlJqfIzEL3p
      1bn5+B4PrC3DxMKLtbUcCeMxjpNc37yQGOdn4A/Byxojq71WOiZrTkYtT0rNsG0JPyVOhtW1
      eM2VZU2wlR+nwqYcaOaw05L7A90e+83xU3JPwehZ3kXXY54P5SnBy5phaqUKS9s4LwPdbXcy
      TZO89c7bsqlb2bTr7cBz8lnXTyKOIa+Hl65npValeCUa5+JVol+6bnd7I/sX1/LKGx9ZzjdY
      2RLes3pmcQ/x7Mi0d12Db6US3jJEr3gzNj1+ERPLMVjRKX0OSkRku7v/JFQIQcx9IA3+UHEZ
      XidpwhnLR62IgOmXPs/61PQsRS+ZGZArUUQ2l1fSXlyu+FtNhrNCFROm9LrnvfF6ji4rCFgp
      PU9WKzWxzp2LFyrlMI3zDbH6GNw4jnLoOncC3PuJV45WaRqn+9B1znmqh1Hl3GiC16LMT8LY
      Z5QabIg3O4w5XTQwDzUcK19FvtJ5NnjME+m6mqbXj3VsyWINrhWV0rm0u/YU5ykKTV3LNN3X
      vb55Ic9f3K+Qi6GiMiGPGH1YmmKNsYcXU8IcL+fixVb1af5zxaoz7yw4yjCNcrnZre4dT/YG
      ZcyV5JIsD8wVFM5S4nOEZ+lYolOydNLqy8qBLbysFERkfvZ/6NfP5vF9AJZ+nDcHq1WUsBYj
      sXFBR2Ll7djWKqUOAlM/ywl54+yl4KxoWvuj8qfj224v22azfGqr0o004wgE23cHAUSgcyFz
      tRu0sVCCLWv0DM9rz5QDFZvhwBTrZfCqqlN+S7xc+taaXoRjKbbFN/J+ThplOSt9ntHMpde5
      Nixt83hP5+fPdg0nMh+G2SjGaVwbgMUkeub0m73swUefSEd7gVxeqT0sMzbWB6PBjrGkCMHa
      JT6Rd4v/dA37Wl7QSDj5HgLj//HVI3ntg6+uPgx41+1PpjXodOTeyPgjaKsvK8Xxim7HdMeK
      MJZBeo4unWNTH1DO1FfX29+U2/cH2fcdnwyHDSwl1Yyzt2+Yj1pFG1TJYDEeretsENixF2Y9
      L2kNHvKCWLR1TRe56DavPHosTdPI5cWl3NzdyjAMMk2TvLi9kYuwPb5BzufcjActs5W6Yn3P
      85akvKmepV+eM7QeKzN9iDHOH3CRvFEXLYhBxWHL1phXZmFYDwSbCJUr2C/yyBbA5zxV6dRu
      xqeHV/rP0rimbqQ+3gQjvyIibduuNiR+dHm11OmHXu66w/zdZMcINC8lzgjTuJKpLsyYrL68
      6Gula+m6lzng8TAO0h8XF2m5WP9UwlxeajGCv3OWbe0MoEMl8mB5ar3gA/tHxS9N8UoL9omD
      qeXUfTdk/s3i8UZ+UxxCkFeffFBivP9Cp4UV9qf5xHsU3PoypzzvF17pP1PqdI3Vt2QTEemO
      ym/JoLHKPpy1FEkzbgnIQGLMMNosTDJvo40RUylvdwsWrdh51sYqqIBM6ZNXvTvsT54EaRnG
      aZSvvfeOdP3pTM6maeSND70mm7Y9Lhb38dK08S/VtYzUk1X3y1JNK9XRx7mXbyV7UOl66bFy
      om852qWdrogCpN8sDWDHpUrDgGae3qKBHp+lVxYt5N2LWl4UYjigYrGyPDgw6rRNI5fbnVxs
      ttL3g3z96VMasS52F/Lqkw/KOE0yTmNWXg8vlBfp6PFCXfDa584nJ+UVtpePV6pQSVOtNwFg
      MlehkovN9nQqhC46h7VeUuQU3ApXVurDBNWpBCtaUBZJcJCYgXhPF5B/BFWf16kEu57oL59+
      mubP0jZVPc/1ifdtN00j+74zp3en+4R+HJePDaLjQmzYOKCCaxrWLh+eMmqcLRy1bnl6pM/X
      db18xjfR1+t8U920NX+aVoJl025ke3wrXHkeXTOi/+c8ahLMEgTp5mgy+t7jVlZKUxsvZbIU
      n9VLvy1FCCHM31Vot3Kxmb+LnG5ok2cMx7e/t3u+GmycJpmOEWByvKw28Bzv+jdzKEg/l2KW
      YOXhpQ0/LQbSDi2lN+gc3/wfn5N3fuPXThbRb5p2Uf45Ehie2PNyWnhU9lRH51377iC3hzu5
      6w5yGDrpht7d5yYVKw1L13DAWD1miFZKZfWr27D7Ci8N0IrHrtdVJTVMH16MPATZNK08u35O
      n/0/u3620EpbhiS+GW8oM0tvSx3Xy+ClscKCa5KrqhL8ghH2gSnOe1/+v/Lf/tU/l1/86Z+S
      8flzaepG2rqRKlTS1s0qyp1EAGTQWhHGUhaWH+77bvmqe5Qo4zTJMI3LlyYRWC0o8uOds/LR
      0iiDnogZejr28tYSvCweWNk0rcRpkqfPn614uL55IU3dyHazFRGRqcChJD6wP8SrJNKX4IVj
      wOh6jnazOaYy3emN/op/SDsfv/6GvPrNH5c3vvXb5eLJB2R3/ILRhfpe3dLPW2+9FfX+MYw5
      ZNLLxVO7KUYZhl7GOMk4TeuvvgcRiVG27XZ5FIi5IRqf5on1h3wwA2W8rsDI1NO8eXhh2xK8
      GK/p3O3hTqYYZdO2cnlxOTuRoZfXX31NRESev7iW5y+uZdtsViHfUhgPLyttY1uqW3TwvQob
      S9YW6dZ1vXpcy/B6+3d+S/7LP/vH8oe++3vlT/7Ijy710uo05A3prL4Qw4SxwMzl3XGa5pu0
      k0lesylEkdXHrtHImMdkCpfjNV1HT2TJ4/Vv0dc0GE85vDyDFxFp6kb6oZeu76Xrn8njR4/l
      9VdfW2g+efyKXF1cytPnz6Q/5smb45d6cnzj+aToOIcKp6QwvCxZPcfijRvujsHafuP335Tu
      7lbe/uIXVnxjKodOUWKUaRrtfYHYa2fmHfDzNql+ssA0x515jVXEINslasU9Jy2yvJh1PVcv
      V5ji47H2jgwvto45/d62G2mbVvqhl37oV3ODUmmaRl579UMSY5RvPHsq3aE7qZdTJkxrrLY5
      5+fVwRTSiyZWHY3ld/zgn5Z2u5PXvuWTriND5f/PP/kP5b03v3y/L5AlsG6Y/rNBTNctxfHy
      Ss9D4tMeXDRteSI8p9uiommgdGFTJEr70Td/iBfDiKVt+nq6IW6qWp5fP5eb2xvZbXfy+OrR
      6klJCEE+8MoTefvdr63oMlkxTdE0dP8leKEeabyYM/DwslJMOvZ1I9/2/T+46hPHBcs0DvLO
      735Jutub+3sAzO908YTyLFe3z6UTRWkVSX+sfq0owEK27t8zXmz/B4UXto9xXkU2DINEEXny
      eJ40F6NICCJVVUvXdXL94nrZTsXrF5WyFC8rZcMMwcIV6+bw8nj2aDPZ3v3yl+T6a1+bDaA9
      LrbOKSobcFQ0i0mLBhtsb5sOvfeLl7qwvnWdnLysnSWf1VeSlclzTkREGugVp+PmutM0Le8D
      qqqSTd0sX+30DJxhYaVwFs85vEqdoK5bouQML0ZT19VZhTkb1AIp56U9RkqmO1ueMp1LfLGQ
      mc5r/nMePSdPrjB5tbJ58ljn0VEwGdK1qqqkDkFa/W3mONF7rzQGul9L+ZC/EsxyCu45IdQL
      5iA9DFkKhv0x3ct+IMM7pwFNx+nPmnvCaLAokPPMKyHgpqokhdH/2e/p+JaVXWMF6eJ5RkPj
      w/qxnBHzsrqOXlyP7ZPRWG1z9D28EAcPkz8IvCylX2HlWa3lJZJiWN78rjvIXX+g9CxvYKUz
      3rVEx1p+mNpZ81lSPaYEbI98LwyzqRmIl1Ws9BHxYhGPyeWlhhY/LEqU9JUKRmSrXepLPxRg
      eHmFRS0WQTy8Eo8VDjJaphWC2IAuAMdJHl89EmsvG2TOM0K0eOw/Rr5GVtPO5fo5hdG8vAxe
      Vjrk7YSNfXt7aObwSuc0XljH48O7lsYh1bGiOuMP+0WscRxKDKQELxG1NWKOIB7nPPY8cSl/
      35AGA4VNzOtjT7mizHvnWzmzJYslj6WsOXmsNughrfoe/UTH8nQar9ybV90XwwudR47Hc/Bi
      Y814Y3ihYeSMleGli7siLP22lMmKApebnYQoIobFe4KjZ0+/LQ+sy8XFhUh1+hYQ6TO+vVzU
      KtYAeXXPpSfiR95VPlu4pQ32xXjbbrdyefxKjYeXlUKyuux/CV6es0V6aBReJAzB+UKMF+pY
      SGIdM+Vj+Rv2yXJhfYy5X4xRJIq88967Mk6jbOp2RavEw+r6XnqH55hhWjJrZckNFNuLFdMM
      1pZ5W4qXwWOqt9vtpK5rGYZh9RE+7EfLw65b53IZhOY9vSjz9Alfknl46Rd7Jy4jlzOzTkq8
      AFNkTQd/M75EhE4LTv+bqpZtszlJqXI5o1dynhsX9ovM07+/8eKZ3OzvRML65k4roedZWejG
      dujNkC/9H+lj5EBj2+/nj3KkqcheyUUZVOhcSoy8I74sPVvtKzVNEofhJI3SD2+W/tIFzUBJ
      aNf5Ixb0SFoB0BtZntACia2MSpZuGZln0F5hbdLj0VRwvv9935VMcTq5j8n18xC8GN3Fwzm7
      sVkp1263k7ZtTzYayBULL91PwstaT4DTRphuaM+ejheaUeSzP/Hj8m//9o/Je1/8Es0eVgbA
      QGWKnRtEvKYtVA+GBRTrGz0c4yFZv/do1roPyA2spVg5vJqmWaZ5s76Rvh4YxEvzyhySVgR8
      vJlL2xjvIQQ5HA5yc3Mjz549k77vTxakWIWlsN7GZszZse0edbsYo/zOL/+C/PYv/+LykDHR
      q6pK4jTK17/yZekOt/L8nbdXfcT5h8QYpd/v5ef/xT+Z7wFKFYeVc5Qol94ggJheaYXBuiXe
      FXmyrqFnRK/B8Fr9FsWnt685KRZed91emrpZTXNm2KRSss1JSfTebDay3W7l5uZmSYuswrIE
      yyBLdIuVb/z+m/JLP/PTIiLyxrd+uzz5yMdWfYe6lh/6sb8jz9/+qnz8058WkRmLtApx33ci
      UWT/ld+T3/3Vz9+vB8jlZlg8BUQPjgvqPaOxHn1auXMKm9aAokJbg56TXRtjrk0I81LHTdOa
      85osZ4MzI9Pvi83O3EkutbU2LkCl97YiQRnT791uJ13X0akU1r2MlvkhupXwCCGIhHnDq6sP
      vSYf/rZPSdXUcvXqa3Qa/auf+BZ59RPfsvR91x8Wvpu6kWma5MnHPyHf/UN//nQyXElBZbZS
      n5xwjG6pMXo8sHr6WE+o04soGB2MPLkUI8eDRd+aNcn66IdhtY74HAPG31Y9XefJkydSVZU8
      ffr0JHdnm/RajqioxChf+KVfkBijfOoH/5SkjQH0x0PmdQ5Btk27avr87bfki5/7FfnUD3xG
      Hn1o/sZa13fSHddLM+dgrgjzClqc5R2Z58Prp/KX3XBhe6Y0un9vWi7O1Uc+Nf2HhG6MiIwO
      i5LovS0ZvWKltzm89Fg+e/ZMQggyjuPJlA9MFx+SRuvy9KtfkV/6mX8pInOK84GPfbNMMa4W
      /ffDIJvm1Gl/7t//G/m9X/9f8uLr78pnfuRHZYqTdONgRry2buz3ALmiBfdeq1ubmupjfPKU
      2yzJyjWZclsrsPSxdU4Xb71ESfHkY8qezmP9GKO0TVMciawU0XJA7CkMyn1OFDwXr0cfek0+
      +qnvlBijPH7tdenHYfXoO9Fr6uYEt0/8sU/Ls69+RT7+R79PRGRZHsr6b6p63iFCp0AlAmlG
      0n98Y6uvW56KKV86z9p6So59ezRy8jA+2DGTwyuexy3x7J6xsihh4aUVmq0xsKJBbrxy48Pk
      yJUYo9we9hLlNLO42l6sjJrxeNftzQ+PXG53Ulf16VwgHaZRWHbOAs+iZ9FiYVoXfCaN3sza
      29LiJcb44OfcXjpRktZ50eYcvLyiZWN1cztVpLZa6RheFq/aIB6CVzrfqN0dVnoqa2NGnqNE
      SZ+cSjzo9mnKOEWhJFQyofDRW66Nzs1wwFiOjIIwwbF//Z95TEuRcjKz1ECf99pe393Ioe9M
      vCwlfyhemi5ixnBCnlIbRhN5zkW6c/Fq1EKf1biJnDy80HTn1XH3axTYS0UR8okkxlDOs6bi
      7QJm0U3XvLxft0XPZA0YhnDmWUOwp0kw5bGUzFIq3V/qZ5xGiTJ/vue2268MAfu2xsHDizkH
      SyatlKikrK2Wg/VrGcaibBX/DJaHV11VUjnpFz421nKxWcZYGi2wlU8ho0y4xDSzSE2feQAs
      Vv/sWq6u5oUZonVDqvljuyKk32whDB7r890wLPshxRili/NnfHZq1zKGl5VGsYJGSRUsRqmd
      1ATlT79zDyhYsXhgfTH+m7pZtpLX1zx9bepmiR7jNM5fjInz3YSu2eAg6UHN5ZueIjLvgQIw
      ejirj9HAwkI5hjvm1XL0mfFYL7awT8Zb2soc+2zJJla6DqOLHhmNRXtB1r6uTqcoWGNoRVZ0
      aJ5ys+vYX9rkd87Po8QpSqjm7c47J+2yzus0qq7mewlcL33ymVRmVZ7XZnlVDghPmXOhVIfp
      kkUmGNLZrmdpy21PXuzHi0TMIOf/UeqqkmmKEo5fisQQ/7J4IX8sNUBHJhAZ9QAACvNJREFU
      o+lgO1T6qqpcvPT4eOmO/p3qHvp+9cmodO1qeyFNXS9PdEqiiIVTiBApsCILJ1bqw8DFdl4+
      aZWcAVn9WfSt49SehXW9iZZllJSfwD1jCPOXIS82955omMZlNwdNg2HLimX8lC+xjdejz97h
      sFz+HLw8B6Ovp3PDOEpTNzKMB0r3HLymGGXfHeRyu5tlSQ28UJjOMQUvEdY7ZtcsYaz1nchH
      6Q4FOW8hcmoc2JemPcX1JsAWXlVVzTs7Nxupgr3dOqOB5eZwJ9d3N1Sm9OQjpV2IlYeXjgiM
      tuXZWfrstdPn8Es3qW0/DtJU9XFP5SPeGSdnlWkal88ohRDunwJphrUQGALZa2VmHNhOM8o8
      khbCWtrneX2rD023FCTPGzGeUyqGe/FYGCBeuRQH+Vo843S/eSx77h9CkHGaZN8dVlMJWB9W
      qlQSZXHcLIXXhscwsIxjOu4w3qhoKUnOGOVX/8PPys/9o78nN19/18Tq3simBTuR44IYHHC9
      Ky+G8ZI9ZZiyopJ74dvyLpYHY/0zHvUrddYeB1XX0YPG8GKFba1i4SVyungElQXbp6+gt3Uj
      EoIM4yDd0K/aDuMgEsJxOrAdQTWPqehc38sSYpw3JHjy5Ik8efLkhBZGYitN0hP8kJfuuCnw
      pmmXff4Tvd/8r5+Vr/72b8lX/s+vr1Onw15GWM65aVqpQli+I9bgALNjls+mOsioPi7JM7FN
      rjDaXntdz1tsgec1kPhbn8sZyDTx73sxGawJcax+ijhX2829B25aGY7fHq5DLVFkSX9ijPLi
      7kZeuXxEvS3z+iULmFLp+16ur69NWS0Z9O/L7cXy3bSTdjK/vd226w/gSVXJD/zVvy7v/u6X
      5BPf98eX+rdPX8h/+snPS7MJ8sN/409IezF/SKSf5v1Upzh/InV1E5xCKYYy3I8TDSJXMC9l
      L8zQ43khsTSVSf3hoHg8M6+PMqCCI17aGNg9BOKIXl/3gymnbrNp2pNxaOpauqFf7i1GtaC8
      ruvFOLBoHnKT9VCeVCd9w0uv62W6wlLSdG3bbqSN831LkOMUF+FLdRPtT376++WTn/7+lfO5
      fm+Qw+2rcriNcvtskMswyS/+9E/J5uJSPv1X/pqM0yhNXa8XxCBTCMI5u39ZAHpAspQJyzmz
      Mpknx76Yp0X5UDm0Ens8aF41Px7GGg/9X5/HaIzy1dWs6JO6XoUgu3YrdbXeSh0xt/DC6eQM
      r4uLC7m4uJBxHOXp06eUV69oXqvjbE/EMIdXKm984on84c+8KvWmkicfuZKvffEL8uav/U8J
      VSXf/ef+orRPPiDbdnMfAbxB0TkqMuQZDxpNDoycETKevIIDzLy1RxMNRntGbzIZwyvHJ1uv
      UKI87FpdVdIN/XLjGyTIxWbnTp9gUUj/LnkDfDgcpG1b6fueRj7GO5MlpwcaL6uP0AT5nh/+
      +HL8+ie/Xb7vL/xlaXcXsvvgqzKmNeRvvfVW3Gw2WZCxI2YAmomSNi9rBEgfX3ClPnI7M+Ca
      hUTf8/Tn4IV8luKFUzDOMYIYo+z7g8Qo8zQLoC1yuvw0J7PVH+M9xzPS021Lj2OMEkTkN3/+
      s1I3jXzHZ/5Mtr8pTnJ3OMw7Cbab9VwgqzBwveuaUUvJLUX3FFTTY6kU8zo6CuGg6ZQG0zRN
      w/I4VrGMpcS4LefiKZOljLt2e0JHFwsvb8zYVBAvfS2VmZ3zdCTG+fHo0997Uz73s/9aJAT5
      6Hf8EXnlwx8x6cYY5zlBx/UFEtVTIC0ME94TGAVldUr6sYo1gF4+ah1jHq4HlnlEEXs5pde3
      FyUZj9a5nKxeKa3rpRPodHBKtr623W6lqiq5ubk5cRxMmZlntyIiSwurUMmTj3xUvuk7v0vq
      diOPPvRaFiPcpWOVAmEHGiDrSQpTbC8k4jmkibk2ltKpCUjXyv/Rs1m8MZq6LhqGN8s0/R6n
      8WQvf6T5MuliCZ6spPcR+j3GNE0iQVZbvmD/j4+farq9vZXDYb09vpU2oUNi9b2USPdfol9T
      jHLoDyISJARja0RcPKCVn6VMWhjLs5UwZwmY2jNQvBROX6vreuXF9TUd1q1wjtMFNB+4GS9G
      F2ybfjPlR76tKGOlHHgdb8JL8EpjruU4DP383YfuIGm7RxyL29vbBQPNvz6n8QjhdNaByBHr
      GOX3f+N/y4v33nGjBpPJwyu9VZ7iJOM4rQ0gNWR7RaIC6vropVJbK7fzSsl1pqi4KxrWzxUv
      9DJPrH9bkcXCg6UbJfn9Q67rOtoQc/OqdOnHQTabdn5TK9woRUSGYZBnz54tG2h5eFm6kT7a
      /qXP/4p89p/+uPzcT/x9k0drvD0c0tUYo0iQ+53hcrkTDqjXxrthtLyPpok0LCC1UrK0IcdL
      rljet7Rt4lHzYUU4LY9FKxXm+RheKQfHrRZxOounTFOc5NB30korbd1K1fgOJU2fsHjHfkXm
      6LzdbiXGuOxCd/nkA1JvNvL49TdW7az7NOwP9cSS9eQeAAknEK1OmdfzQEWGWJ/sGuPLU0bk
      y8o1sT99nT0etfh7GbwYTZTFCv3WkkDdDlMS9m6C4VVV1bKdYFPVyydXNa/n4qV5qapKLi8v
      Jcb5LfIwDLLb7WSaJrm9vZX+9kba3YVUTXNCQ+PHZPFSpZvD3T0PmjCCh6XEk5YopZWH6r4x
      DfMMBGmwHJmlcx4tppyed7GMuqSc4yhO+qiqeV6LMR2D8eTRQyWrq1ou2u2yEZXFr4cxU9AQ
      7u8zkuFcXl5K27ZSN43cdnsZmkYO07Ds72Pxz/DyUkqtVydzgSyPwTryiqbDFEYDwyxa17Pa
      6PQieTXvkd45eSOjwdY8I16oBFa+i/I8BC+R+QvyUU6NclFCicucmlTwjT6TSfeJkTOHlx4X
      D0+ROf3BbxDUdS2Prx7J9c0LGacobR1O1vImGmyvUo0VyoH/G2zkeXA9qGwwGGPpmDGmaVmM
      4zk2KQrBTwKyiWQIhm7H+mfGyZ5c6D4QT2Ygmj5L0Tx+SvBK19OkOCsyleDFjnOOTNPGemnO
      kOcYPvDKEzl0nVQSlq3m2bhb+sMMN13bNRs5DN08UVBfZJ7Xslyv6M5R+a1tNTQP2P85qRfW
      9Z52aF6xf+b1LENmdM/h2/KwiBc6D8YvRibkz+tXJP9SzOIvh5VWTGv9BPb56gc+uKze0nxb
      mzZY/Oi2InOEudjs5rUBugLbJFYD7QFRUkK4f6eQrFf3p/N+BA1DfK7vVMebqqxlTvS9l0ae
      gXp46fqMZ08GjVcIYZnhmXhFvFhUsiI8q8emnOAGXlo+a19YNE7dR9d1RUawadt5W/bjIh9N
      38o8EC+UbUVfG4CubHkBNnAJHLbLgK5nAZLasnrYPyueZ/baoEyoJLlUjHlT5AlDtsbLUlLG
      Q7qWNorVyx89XC2ZGV5exNIRBSOHZ3QMr3Tu9va2yHG+8uixVHUtYih8wtTCQV9n9U7M10sP
      GFBMmXQpOWcZDg4I8wJemNfHnvIyflgUYje0SAtpevUnw/hQ5iV0h0rqmn/3NpduvZ94sesY
      GUT4FGq9uMpLh3X9D7/2ulxeXJg8euOpZb7nU+TwYhSJ6kWYJuSFavQGFlNW8bx7idJ4fTCP
      bl330hCUDffF9/BKKUMugoYQpDbqWqVkPlaJ00Cecp6f0cE0SV/H+VpofOn/zc2NXF1dZZdR
      isxfq7y7uzsLry99/lfk629+Wb7nz/4laXa7xLz893/3BXnzNw/yvT/8Mfl/B/Gp+Txobs4A
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map Final' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABnWAAAZ1gEY0crt
      AAAgAElEQVR4nKS9WbNkx5Em9p395H7z7reqgCoUCgWCwIAg0SC4s5vspnWL1tMjG5nmQaNH
      2Zge+x/oTaYHmekXSI+SbEZjUrM3ds8Mm002NxAbFwCFAqpQVaiqu9/Me3M9qx7y+rl+PD1O
      ZrHDLC0zz4nF3cPD3cPDI8J68OBB7roueMrzHABgWRaqUp7nah75XNbXH4zQadYr69bqWxau
      JEngOI4x38nZCJ1GDbatv//n4L/o2SSKkeU56oFfWTfH90nxtywLlmUhy7KF8PeHY2R5jm6r
      AYs95/XQf628ZVk4G00Q+B5811maJlS/4ziwbRtJkiCKIsRxjDiOjW3atg3P82DbNhzHgeRd
      re0sy+Y+1Ibrui5831eJzIEwEYKeU8N5npf+ax2X5mN4nmccPFri9S+Cybbt4qOVWe+6OOyf
      YavbMbanwW7CP8syYwdT+1T+eDDG5kqrgE2mKvqb8NfyOo6DNE3nYJYwbfg+oiTBydkIoe+h
      06g9Mf7R2QirtXAh/rxPkiRBHMeYTqeI4xjj8RhZlsHzPLiuC8uy4HkefN+H53nFQCGGBoAs
      yyr7T8JBA5p/XJ5JViYZm1fGk23bJWlDdRHAUgKQ5DV1jtaOxgwmuAkeap+XyfMcFgDfdTGJ
      YoS+Z2yDM/Yy+Jtgpu/hZIpGGJTgMuEv/1fhr5Uhulc9JyYIPA/bqx2MpxF2j0/RqPlo1cKl
      8O8NRlhp1lUpT1I6z3MkSYLRaIQ0TTEej2cD51zin5ycYHNzE5PJBKPRCC+88EJJWud5jjiO
      K+lC7Ve902hS1h8sSYRkxVz6mFQtNcgHAgC4jlPUKRlHU/3yuYSBJ8qvwcQ7caVZx+5xH9ur
      nUozTmo4Xg9Pkql5GXo3GE+xvdopwUr4a3iaTIcq/CUtJEySUXgboe9he9XDaBJh7+QUzVqA
      Zi2sxH8SxYXWIKlNtB8MBjg4OECtVsPBwQFWVlYQRRHCcFYnSfhOpwPP87Czs4PT01NMp1Mj
      3iZTUDK/iWYS/9IA0FRqlWrn/3lHap3PR2CSpqX3Ekj5XzKHZmZJBAEUWkCr17IsdFsN9AYj
      dFuNSsJJfJM0RZzG8F0Pju2obUnY+sMxOo1awRyUtwp/TkuJo0nimfpPs+u18rZtox76qAUe
      Pj04gee6CDy3lIf6uzccY6Pbhu/7iOMYURRhOByi1+shTVO0220AwNHRETxvpmk7nQ7q9TrS
      NEWj0Zjrl1arNUcLib9GY9n30nQz4e+aOoxn1JJJ2sk8mhbJFLPI1IaJgbnE1QZNlYSkZ77r
      oD9MkKQZXMdWtRzPb1kWsjzDNImQ5znG0RS2bcM9HwR5kiMHMSgA5HBsB4HnYxrHJft6Ef7U
      pjQvKUlhpUlo27aRpulcWRqsXPtalsUGo4W9k1NsrrQQeO4c87ju7Nlk2kM6GcG2bUwmEwRB
      gNPTU/i+jzRN0Wq1UK/XZ2ZWEJRs9kWazjSAJf68POEjebMKf7eKkU2ElwCYGI1LN4mQNKEo
      L0fYZFaYYJAdKiUD1clx3Oi0sHdyip21FVUQ8JTnOaZRVIIpyzJEYv7DtWGSpTg56WG93VI7
      WTKwNE14p3KBoNWxTCJGl6Yp1ZFkGfZPTrHd7cBx7FK52aCPgdEIR70zTMZDbG2s4/T0FLZt
      I4oitFot+L6PdrtdmgMQL5lMKZNpxnnDVL7KctFMbE5rdzCeoOv7yBmhNSYwSVuJgCSYpr5k
      fYskNSU5l9AktpQMqgkBIM8z5DmQ5Rl8z0FvMESzFswYxNI9NFESI8nmJarEQ5orUZwgSmLA
      QqEtNDrIZBrQGu6UtIFrkq78XZ7nGE6mGI4jXF7vXmgEy8KjvUNMoghZmuLwpA8rjdBsd3D9
      qSvo9Xpot9vwPA+1Wq3UjsksXmRVyEHAYV0Wfy2flt8NfA+HvTOkeQ7fcbDSqsNZYJqYpKRm
      Rmnvl6nbJPHonSYxeR1yIMCykKQpkixFkialvL5n47A/xPnc/KJuWJj9tADkSBf41TX8jk9H
      6LZqyJFjGkeILQu+68MxuEFNZhi5NZfBXwoVkzTlbR72z+DYDnbWV2DZNk7Ohuj3T5HnOUbD
      AaIkhet68FwHV65cRadZh+d52NzcNDK0Zv7S72XKaHY+f24aUMuY55Rcz3Gw2Z0tSsVJiqP+
      AFmew3VsrLaasG3dPSob0GzRRalqtEpTjJtDJjciz+84DqI4gut6yPIMcTydU4dcQ6w0a+gN
      xlhp1i4IjRxgzTwpfkmawratEtNleY5JPIXnuAg834g/gJLvm+NrWkPgidv4HE9qJ8syTCYT
      OK6LR4cnM1Mly3A2HCKOIrRqAcajASZRgprvwbEzdFc62FnvGrXdk9CG4ys9YZIWmiVgSiar
      QbZLbbocEc91sN5pwrZtTOMYh6dnyLIcruOg26rDMdjkVeqmKplUt1avhoT2n9u2FixM42nB
      w1VlXMdGns+EgMdWNKvs8yp48jxH72yMtY7uYXId10i3PM/hOA6yLEOSJHBdF0mSqHk1XGQe
      bS5l2zYGgwH2e2fIYaHTCIEkRq1WQ1ALkVg2up0OplEEN6hhtdUo6KKZsk/a97zsIk8gf77I
      xFu2b4gmLn/IU+B52FyZua7iJMXx6fBcEltYbTdh/44jX6qvqsRdqBLGZeYOjuMAmYU4S+be
      abB3WzUc9AbYWGkWMMo2NKmn4RLFKXzPnWdGy4bnuCUTyMREZIdbllUygaSZaMJf+0+rsdPp
      FJ7nYaPTRBzH6LRbyPMczWYT/dEEzdDH0ekAzVa78F6ZbPTfhfmXZdqqueWTDhTtncsr1QAD
      AM91sLEy88/GSVIMBtdx0GnW4Jx3UjVQwNl4jEmUFDEjvB3O7IvUq9bB0i1KHog0TeHYDtIs
      Lb03qdtmLcBwEqFZC5aalHF4+P/T0aQYSMTwtjXvauXw8udpmhbwS9yyLEMYhoiiSMVf4gQA
      rusiyzIMh0OMRiPk+Wwhan19HQBKq662BRz2B9hcaVUy+O/C+BL3qncas3NzbpGVYErcNLQe
      P36c+74emFWlogEgzTL0BiNkWQ7bttBtNmDbFwRL0vP3+Sz8oFUP1dADzgBPwvjaO8mUSZLA
      si2Mo+lSxAGAo/4Qq52L4LAnTeNpjBw5GmEA3/Xgu56aT2NY2eGkAWTcCy0+ybqoHpoDeJ6H
      6XSKwWBQDBjP89BsNhGGYYnxJaNx2KRJWMVsyw6MZfCX70xtmPq/ynwuTCDeqInpNQ+C6zhY
      bTVgWRbSLMPJYAjAgm3POsyxHay1G5UAcyC5tNGk9SKTRyO867qIoggWZotYi1RvnudYadVw
      fDosYK9KcvACwHASYf3c9ndtc4Sk/K9JW1OYCV/M0ZjfcRxEUYSTk5PCdKrX62g2m4VmoQHE
      J6PLwkrlTKvtVYLsSfCv6vNlBaWpDID5WKAqu1ermCp0HQdr7eac+aI1bkKOBiBfrJKDUpbh
      HiLpN5c42VY5LMM0oXIsC57jIIoT+J4xXKrUDsF0OpygXQ9KcJja0/DnZfgzqfbTNIXneUiS
      pLSwZds2hsMhBoMB8nw2me50OqjVakU52Y98kJlW3pfBnwYEf87xfFL8qU95cKOkCTf/pLA0
      wcrbtqXK40iYGJ5rC80mXqR2JMI8LXJxavAQHCb3mOd5sGGWEJo2ajdC9IcTtT35m9MhTmeT
      X6pzNJ1gGkeQdAbMK+0m6cjL53leML/runAcB4PBALu7uzg7OwMwi7vZ3NxEEARI07S0jkDS
      npuzVXBp+GvwkfBapv8X4U+8Jt3gvD4paJaBmfDO83zmBpVJC0uoGlGaCbKojClfaYLCkJLP
      q+qU9VqWhTzLYDsW0oqBK/93GjWcjiZo18NKuAn/3mCMlUZ5NZRig6B0mAaz1FBVA46Y4uTk
      BNPptMgTBEERRy/NHJNQ416pZdYZNNir2pA4mAa6rG8RD2r1P4n2mtsPoElDCaRU61WhwCb7
      XGPmKlvOxDjafy2OPc9z+I6HNItUU4q3SXD4noPBeIosz2Eb6FG0meezNRN3tpzs2g4cx4Fj
      2XMMVWUTm/DniWz8wWCAwWAAYObyrdVq8H2/WEPgbZnMQ61/54THksxtqs8kPHjdVTSpameR
      8KvCBQCsR48e5UEQlBBf1pbjwGvAmAAxIcPrMDHaMkm2S4tIWZYht4A4TebymjQRABydDrHe
      aVa2eXw6wla3Dd/1FoZvaO8kfpogsqxZJOZ0OkW/35+5ol0XrVarFIfPI0hN/SUHs2SU9Dxk
      XW4q0vpce2/C/3cZ/FX1mugpLQetrjzP5/cDaIUo0XNt6XpRMg2ORRrH1GFVRJaEJJ96np+v
      sOb2XFyPZl5QCn0P42mM0HfnzJM8z5GkGWq+j9AP5uDX8DDhT881vCgE+fj4eObVsiysrKyg
      VqshjuOSPb2IprJubvLyQSTL/nP7f1n8l+UVEz5VdcnkakCY4ifke43hOBDLPF+GiMsQieri
      Jg/FwwdBMEP23CUaegFG0UStR6u3WQtw2B8i9N25dizLwmgS49JadyH+GuxVHUm0dV23ZO40
      Gg20Wq2SK1PSwCTt+bdmJi5rgj1p/5vaMNGI41IFiylJGORegULQVRWWzzRzhgghG+UuK9kh
      pv2zi+xRSqYO5QhT+0EQzG3AfxJ1SmmlWSt5hajjLTioB/NuTxnExvE3STkp4citeXh4iMFg
      AN/3sbm5iUajUZh10jXI8a+SmCbNKvPM4auYI7Idnk++09YanqTvZR7tW8PXNLF35WZ2rSJT
      xRqSVF6qScq3TOCTiVml6VElHait0WiEMAxLm7NtNknUNlxo+LuODeSz1W3vfKJb8wMcnAyw
      2W3NMZMp9HhZ/F3XxXg8Rr/fBwC0223UarWSK5PTVda5yOwhmlKoRZW0lsxYpVGkBpbJcfT9
      EPx3lRaSPGoy10105Xx4/r18JB59y9+cMPTNGdWEqERWQ9C0G8gEI6/bcRxMp1OcnJzg+PgY
      ljULKsvStAhPeBL8V1qzkOk8z2FbNkaTCI3QV3Go0pCL/Oyu66LX66Hf78N1XWxsbCAMQyRJ
      Ukm7RWaCxsCapq5Ky+Qx4b8MnBovVZXVhHZVklrF1hrRpKBcG+DPZXnN5cZjWhYBqP3nRF00
      6ikvHbvRbDaxtrZWzAfyPEeWpMiSVLVhZeJ4NmsB4jhDzZ8FzXWUDfXaTq5lYCf35uHhISaT
      Cer1OtbX1+fMRm0QaOaKiT5ck/K8Jjpo9ZnKakLRZBJJ2Ko0ixxUHA5tUCyjFSyLzQE0ptdG
      H19BpP+8vEn1UXkpcZYdEMsiTfW6rovT09Niqx5JzzzPMZ1Ocf/+fYwGQ3iOO9eWKbm2g9Vm
      E1E8C/JbbTdLpp7mOpbJNDciL8/+/j6SJEGn00G73UZ0vge5ysyjT5qm2N3dxcHBQYkuskyV
      fV41IGQZac+bBjdPcqBIs1bDcZmBIweHyQSi74JXNaZfVAlvUJooi0besodNmeqUHaR1GEn/
      JEnQbreLCSOldruNZrOJKIpmC1YsnFtLru2gHoQIPB+2bWN9pYk4zeC7ZXvWNtQjzT/5nrxT
      x8fHcBwHa2trRbhzFf7E9CRIHMfBcDhcSFeTObpMGArvO6n9NfwlA0tJX6V1NFpJzWXqN1M/
      SCvENhU2AVcFvIl4soym1kwwyHplPTJRbMzZ2Rlc1y3Oo6Ey9Gk2m2g2mzg+PkbgBXPtUt20
      dZE2yjuOA9/zsLO2osK9CH+Jj+/7GAwG6Pf7xZEixNiayuf4ywklDXr5nMNB2sLUh1qb2n9T
      Pq3NKh4zJY35F80/qjQJf1/aXisbkCYNPdeA56uNVZMz3rgJSG1ASEkvCWEiCB2wyqW/HDid
      TgdJkmAymaB3coLgfFLM8fddr9i3y80Uy5qtlEpzsCppUsvzvGKye3JygkajUURxavSW+EvN
      lmUZ2u226mlZpIXouelEvSpmfFL8NbyqtLmp7SoLReaX5QotyjNw5tQOGVpkHi37vKoDNGA1
      ZE110KKRbduQG31k/dvb22g0Guj3+3Bsp6TSSfKTaQGgxPTaaqgJTs0EcBwHvV5vti93fx/1
      eh1ra2vY3Nws0auKubj9b1mzILjRaFQs/FXRFzC7vbmZKt3kmglTBauGP39XBR/ReZE2WjZp
      gmVutqqpRG2eQKqEP9MapI+23rCobf6syhaU7U2nUzQajdKpaJrNSHMEy7Lw4MEDBO5swcxz
      3MJNSusHRAPaWsgHSxX+8jcPaTg6OkKr1cKVK1ews7NTuQJP9OZtEV35ZHQ0GhWRoSbcqU9p
      /iDxMElpoHykYyFFBS0kzpx+moSXtKL/mkbQyspyJhpy+hHtSm5QXphPbk2TIzmqZcdwALha
      1lTtIrNmGTPLtm2Mx2MAs91PkgFl/TRf6Ha7M4l80kNwbvbwTSaLJNgy+JMJlSQJ+v0++v0+
      8ny2L7fb7VZqV8lgnGllmdXV1cJzVEVf6hPZ95zxtHa0/pDagEtuPnA1gShpJ9sytV9lklXB
      y3G0bdt8KoSpcqkRJJH4aNMIWGXnS2lkgs2kQcgLYjIBTOU7nQ7G4zHG4zEajQZcpxzzw4lG
      34uiLSX+vu9jNBrh5OQEp6en6Ha7CMOwMNNMg7uQVOdMxCfHMq9lWcVdD8viriUpfeU7U59L
      GknYtPfaoK/q+0U4SP5cVLY0B6hKEmCeTFK7Kp9Jgsm8JmmgSXTa9USxMqZJqnye53mxUHZ2
      djbXAVxS8mjJZfC3rNlk9+zsDLdu3UIURWg2m2g0GsU2RY1OwGxAk+bkMf6yTc5QlmVhOBzO
      TdI1ulZJzKpkMj01hq+iUVXUMcdrkTQ3DSiNt2TflzbEyGRST8tIB9k5kkAmqS7za0TUBqNl
      WZhMZsFq/MQEiQMvy+tyHAdXrlyB4zgYjUYYDofFKqxmKtCqrcaUXAvYto29vT3s7e2h1Zod
      M7K+vl7MLTT8KdEcxj7f4E4DYtGCE3mCTIwpYQX0YDFT/2tRATK/ZL6qfpVwSavANDdaJOk1
      /GXwYIG1JhE0BDnzm0YZAaB10jIquCqZNm07jlMc0U1wyo6SbUvGcBwHcRzj008/xWQyKQYR
      9wRJTSA7mMMDAAcHBwXTd7tdXL58ubjXykSLuYHP4vC5OaT5+/v9frGAJplaM0fpvyZlZZLm
      zqL+1/6bzLcq/E04VJXXTDBNyBg3f5oANqm5KqJqWkMDkpJGVCkttbJxHKvn0Es8NDwp+b6P
      brdbHEvIE9cE8kgS3h4dSbK/v4/JZALLsrC9vV1cGGHCgbQNtcVdnHzzO+WV8wEAReQr5XkS
      xpN0qWIiTZtrfVIFgwkO2dfSFVrFNxrMGm6UCi+QtJ1koya7kau1ZUeuZqfJvNJs0jQPJzxJ
      a9/3jYs5Jrzk98bGRhGRCcyYkeYUmlbhcLqui9FohIODg+LGlGazWQpjNuFPA4zO7aEPD93m
      pzvwPqDfYRii1+upjGjqw0V5NJqbGNtU/kn7n9ejCQoJA09V/S/hKybBksHk2TwEmEmKa4Oo
      qoxERgLLiSbLSLvbsqzi1DPys5va0wgkB3Ce51hdXcVoNMLjx4/nVpO1+CfLmk12T09PcXx8
      jCRJkKYprl+/XjJVTPjzs434Iht9uDuWuxg1dyL3QGntLcKf057TS9MAGi48v2aGLauBJH0J
      Pi7EZOStxnty8HFBNrcOICuqsrV4pRJ4PnGRo27RQUwmySAZkDNHFEUl21ojBuEiO0U7WKlW
      qxXRmLu7uyUpTOYHL+N5Hu7fv1/s3PI8D5cuXSqZI5p0pMm0hhu9I/hIQ2h7JOibzv2UbXLm
      llqMm3OaljWZG6Z+kn2qSX050DT+MFkUixZgZd9LgWiMBeKVmqSHRghZlp7LgaWV0wDVvAxS
      7fGOt+3ZRcvc/DGpVg0+3hbPs7m5CcdxiouZOSwSjsPDQ0RRhDRN4fs+tra2jLa4xJkffc7D
      tmmgWdbM/0/vpJQHLgZmvV7H9vb2HO6cVqZ3HH+t/7UyJmnLaaWV0QYaJW2HnpzXVdFzEW6l
      evjhuFJSVDGwrHxZpKvqorzadkoOn2zbdd3CzUgLQZJBTTjJQaa1n2VZsUGFw++6LuI4xuHh
      YXHBc5qmWFlZmRMMJvwtyypcm3zwcinKL70mmOgZ14KkCaUgkbBUPSP8+QCTWlTCz5Pp/aJ+
      l3WYLAPN9NLq53Xw9xIe1Q0qpfOydhslTYJItSftOg6cCTkNIV43mUCUVw6WZUw5WS/VRcxF
      zz3PKzw9ZHa0222srKyo7VFdpFHIp09SX0o1LXHNKIVBns8uk75//z56vV7Jg1WlzU0SVNPs
      VVJWa4vXrdUnB94i/DVeku8krWSbEv/idGg+2jXGNTGlSUJIaaHNCapUkwk5qfrIPKA25BGK
      ps6SxKiCJ89zBEGA8XgM27ZRq9VwenqK8XiMyWSCVquFtbW1Qk1Lu54OsCKThtNYk/qUSBJL
      G11qBM4QdOk07YMw4a/tha7CX/YB1xIabeVz2f9aP1TVyfNynDW+1Ppf40cA5S2Ry6gzE5Fk
      WqTy5KaMZaSKVr8mXXgeE8xV5fgzDmMQBAjDEEdHR8VRJWEYFusGwEX4Andh8rkAMTPZ9FQ3
      d3ESs3MNQYNK4izpNplMcP/+ffX4EU2CmoQOx1+TzKa5hJZkeU3AScbl70zSu6otyifrkn1f
      OhlOM0U0k0BrlFesMbdWjwbck5hasj7aSWV6T781jbNoMNBC1J07dwBcLDitrq4WZTjjc1xI
      8lM9WhsSfzmZ14495GVJ862uriLPc/T7fXS7XWiJ29ea8KmSqlXJ1H+yXFV9y/S/ScJrdZqE
      eGkAVDVqGkEme1JrVMtnkjimMhoslEzMoW1SNxFehuzy/LSyKy+EDsOwgJFMHpO3iO/fNSUN
      TjkhlXnlc1oJHwwGpfmIrNdEy2Vg0vqf96nkB7m5StMEJhgW4W+Clwtj+Z4PHptnXiTtTXaX
      CSleht5pseEyv9au/M1hMZ0sISfCGqzkZ5fMX0iI85Xdk5MTWJaFS5cuYXt7G5ZllTatcylM
      ZgzhS5Nc13XnJNAiqcrx4785/pI+FAxoCpqTGl7r+0X9L81KXq8sw99z7WNqR8NfE068Da2c
      aSLM4SmdDbpIgmt5eX5JHHomkV6EsKbaquBa5jgOU1s81IC3TQzb7/cxHo8RBAG63S6iKCrC
      mKfTKeI4Lq0+04SX4OXxOqYVWA0uqpMGDz3XcJX/aWtllXCQSZqDT2KKVMHC69NgWdSO7H/p
      Hn2Sftf4x61ClhfgHgkp1ReVlSaFnCuYJBkvY2qLCPukkzLOnFqnua6Lo6Oj4mAt2mPA1bHv
      +7PLpuk2yvNJK/cGSVzoP8ef4+b7Pur1emHOUTwSSTRtp50MipNbJ7VUJbSkENLyVQkyOZh4
      vbwuWY80T2Q5/t5kAi6bCtNUIi1/U6ryq0oAZXyGRjgTgavsRK39wpZbYgBo5pOsj5hnf38f
      cRxjZWWlYH5tbkAb0QkOigGS9XIYyRTSBjyZZEBZs5EpxcOytQkx1UFeJVOcv9Y/iwSN/K+V
      1TSCRmctmUyZqrL/HObP87w8CZYdzCvXVK82GeL1yXeSUTUGMHlJtEQwkplQNZ/QpIaEl/YD
      kL2/vr5eMJ4JV9d1i0sraEWdhzFz3F3XnZPO9E2DZjweF0xOh1zxS7JJ08jdXgQfz7vI3JSp
      Suou6mtTef6uSov8rpK8qvwyZtJSdgMxrglZUxlNGpiY0gS89o7noQHgeZ46oCQMJpuYJrt0
      OtvGxkZhzgD6hJr+yz3IPLSBzCJudpEkl7FCVB/dBUDML2HmF37wxN3AfA8xN8WWnRNw/Hh9
      y5hVmjDSnlfVv6gtrd1lnkn81RtilqmwSk0uI3k0qcLrqeooy5ptfyTpTCYFbYnUToMzwWVZ
      5cluGIZYWVmZ2wxTNSAtyyo8L3KTOz9+nONEz7XQbqrTtK4BoJh803syneTqMYdxUb9U5VnU
      /8uaoTy/nAs8iTYhWKs0jSnxd+oluJq9rv2vQm4ZW0+qWfm+qv7hcAjHcQoPTb/fL25Ar4JR
      s8kPDw+RJElxXKJ2mhzHqyrJM4PoGa+PDw4Nf5L6fKVYo43UBPSfNu/whTk6z4jjr9Wt/a+S
      3Dxx/ExzD23iz/tDmo1SQGi/Nf6U9UhLozBhNVOhyhwxPScJR5JLJpP9uMxE2NTm6ekpsixD
      GIao1+tGc0q2Sd+0+R0Aut0ufN8vSX4paaTU4XWSBJ5OpyVpLGkgaSbryPNcZXwt5fnsitRe
      r4dLly4V9wFTORqMfC+xaUecqf4qODQBUbX2IvGVgkiGb1iWVVz+py2m0W8Z/6X1jwlnVz6g
      /9qIWcamNyUToXkZKWmrOqBer6PT6QAoxxVROHAVEeI4xmAwKCTm6upqMZfgsPAP7xz6lteR
      EpPFcVzsIajan0DtEAOQOWeSlBpNe71eKfiOT5Al0/AFP94+/6/tRjPRUeLB4aoSopxReQCj
      HKwED9dmvG+4dNc0lWxPe2dXmSrSbpVSUI64KiDkgOJSiueR6lPCRm00Gg30er1iLkDvwrB8
      qTWHKcuyYqKbpinCMCyOPtFsbc749J/v0uLmDh8UZIIA814tiQ8PjiN60IS+SpJGUYR79+4h
      z3Ncvny55PoEykxIg4nPD/h6BsHIN/1TkkxGz7T+4X1vmjNIHiJa0Yf6nz6UaM7EDwvQ6Klp
      Gdk2x62kAaTk0UaORoQnSZok4IBrdqhElC6/AFCc8mza/JFlGeI4xnQ6xdHRUTFxvHTpEsIw
      nIvPkZ3IO0Ha24AewkumlMY00uSR5g7BrLkzKU+apjg9PUWtVkOn0ylpGtOquNQo1A6tXPNo
      VlPM0iKTrCov10JcwnP6kEamIyRN/MgHMtVJg8k0/+BwcFobg+GqVN4iBq0iFJfGciVYjlYJ
      MP1O0xSTyaTw/nA4KJG7MUkSDAaD4uz9RqMB13ULJpUTLw4nEZmYVK4c887g5aB1UMUAACAA
      SURBVHhnSLy5VOZah7st6T9nbCp3dHSEXq+HIAhKB+pyU0LrIxpsBBvhR/Tnh/7KhTjJgJoV
      sKjvpbkjJ7dplmGaRHCyi33PMkyFBiunExcYGp150ky9uTnAIvt52bQICMlEUnWZJi2O4+Dk
      5AR5PtsB1e/30W63EcdxKcYeuPCnW5aFdruNtbW10qAxDR4uITkumibUTBpiLJoLyDJculMZ
      EgryHf9PUZ5XrlzBYDAomWJ88kuw8nUGzniEH5euNCi4J8lk3iyT5ADhg4drmTzPMYmmSLJz
      HNMETuLAZecjyQ1PAErxVpqg0fqUa4fCBHz8+HGu+c2XRdakIbSBRO/kM040nkfmI6lwdnaG
      brcL27YxGAwwmUwQhiGm0ynCMMTe3l5xxVAQBKjX68XcQJorAJBmKeI0Rej5qg0pByA3g7hk
      4+/51UV8kYerdxMNyUyjZySdiXkfPXqEnZ2duXySbvSf2uTt8DsPZHnuLdLopbUhn3Fzheok
      2tCzNE0xiSNk+YU2cG0HoR+UYCTY+ECXC4SapjKZcSVaay+XKWjKz/ORRJP2r9Zh2n+pEfI8
      L05WJoZot9sYDocYjUYF49OeW4rZ5xdlSM0SJTGSLEU9qJXO3SQJKmEmhtFuYaHEvRpxHJcO
      vOImH3d7EqPxfQXEhGmaIooi3L9/H1tbW3j66adLElTCwOcWJDQkPkQ/SXc+WIlpielIq9E7
      DXdJE24yEv0AIEpixOnFCRi2bcN3PXjORZwU4c89W0Q3qV2k0KJ82pVRvE/VHWH0m3sKTAg+
      yTMpXRclTogsyxBFUcljwUMXDg4O0Gg0EAQBms3mjKDn921p7cZJgmkyc5n6rgdHmUQDKJkW
      VVqRdwTP53kekiQpfPQ8BIIYX04ItQnp/v4+dnZ25uYucu5AidfJzR/N3NTmNNxUot8P7t/H
      Jx++Bws51i9fw3M3b86ZXZxOnG7StCOpb1kWbMtG6PlzEp94j9zDVaHlPPGB7nleaX8GH0RZ
      ll1MgmXnarNvLWllZX7NvjfVKQchSb80TdHtdjEej4uDqmhArKysYHNzE91ut1gh9jzPyLh5
      nmMSX9yi4rsXefnJEhxeKSXlJFbCzc2JJEmKoxvlcSYm84o0g+u6uH37NjzPKw7corZ5HXme
      YxpHsGwLPjx4rlfqdFpQokHDpTo324Ayc5HkTZIE9279Ft/9yhdgWRa+/9O3MHn66bmjYmQi
      RqM2iXYhgNF0dsgAv4RQ6ys5weeaS3p8uMaj/3IuR7/zPIfLpQK306Q9ySWbNtI5UJoNqA0I
      jXCc4DRSyevx8OFDpGlamBWdTgfdbhee5+Hw8BBnZ2eo1WolonBJxvFxbBspIyq3TbnKle5V
      ssd5AJ62gslpMx6Psb+/j06nU+wm08xJqofaGAwGiKIIYRgW3isOZ5ZlmMQRPNdFnCRIsxQO
      HAAXk1nuIdEksaY9NNMiyzJ4zoV5FPoXcUiakOB8QwOAw+84DkI/hH1eJkkSvPfb32IwOMPN
      5z+D9fX1ubokH3F+0fJK01w+AwBXXgjBC5B6Jd8sPeNb+4i4rutiOByWGIY+/HBYyYiDwQDD
      4RCtVqsYuUdHR/A8r7jpMU1TTKdTuK6LdruNPJ+d3UmTImJyHg6h2Z/8med6SKMpoDCwJCJ/
      x6ULDVRAP+WC6NdqtQrPFU+cGek3d7uenZ1hd3cX165dQ6fTOWf46Qx+x0NuAc3zgTGeTDCe
      jFHzg7lBzSWnaRMQ4SAHMX3CMESwsoEfvfUbOI6NqVtHs9mcY0yp4TntuEYiIUQLfz/98Y/w
      0uU1rD11FT/45c/x8pe+XtynwJNkahPzU+ICgP5zIeKurq7C9/2iY/mpBrS5I0kS9d4pnixr
      FhF5dHQEy7KKO3q5h4kQlycfx3GM/f39kjr2PK+YxHa73dIRgbZto9/vY2VlBbZtYzKZFEcj
      kqnBbVciFA3cOI7h2hcTqdPxEIHno+YHJRud6jFFZPJO5usa3IdP/2kuMJ1Oi43r5NeW5sdo
      NCq8W2tra+h0OjOzLYmQnndcvVbHSrtTtD+ZTuE7F6YcN7X4vIlLdZlHDm4elmHbNl5+5RX0
      ej1kWYbn2YZ7qlNbwZdCgVsEROcsy5BPBrh66bMAgNc++xw+vHcPL7/88twA44NIrpVoVgqA
      uf7jA9MlBidGIcal/9JWpc4iZIiJCYhms1ncfN7pdDAcDjEYDFQG4gCFYVicf08uSz5YyOdN
      8GVZhv39/YLx+Kout785o/LYeMuyELg+sjyD6zhw2ICgNk2dyOGWdqi2gAPMLq97/Pgxjo6O
      cOnSpVIdckJ3dHRUaIHtnR3keY5xNEWaXXTkcDxCo1afnYeaZ4ijCL7rFVJcLjhx3LXBKsO/
      CW++0EdxU9oE1DRH5ANczpsoSjVNU0RwMBiNUQ8DfHjvU2zeeLE0CLU+4ANPMj/1De8Hbs4V
      84pHjx7l3E24aGIq1Rr/ltdzEgHkxW1EWPpoarSKqMR0pAmiKEKj0ZhrRzKslFIcN6qTE7Qq
      ccnHGYJ87poTYTgc4vDwsCTViQZyEN27fx/Ndguu55aknKRPcO4V4tKf7xPgdj9nDGpPDgxO
      cz45ls/5QhmnYRAEJT7geWUYBF/gGg6HeOuNXyCLI+w8fQ03nnuu5GygNriZJl2jfBBznAgO
      uW6T5/lsAJBKrmI8E0NIm48PEPouNajYbaYk7XJNAtPBuLVaDc1mc64dE1waDtoGcw6HBrds
      R/MQ8Xro1pgrV66UJCtPWZYhTpKSp0rib1kWQj9AlmdIkhSNsFbKRzjIjTMSPsLbsqzSwM3z
      vHAS2MIKkGsDsl1pRvHBxxfgONOSiUgwyom67AM5+DTzjsdZ8YFYWifh5oJJ4vIOlB2y6FsD
      uqodbnZp/zWYarXaXFSo5n0yMTB5vyQj8jycuFX4Uz7pTqX3QRDMLVSRKclh9FwXnlO+74DX
      06zV4doOAteH6ziYRNOiPjJrpVDjjE6ajntm+DHwaZZiEk8xjma77LgG4ppUExYcTtkP3BlC
      NJB7nKUm4rTVEtXFtZt0UWsmkuM4sE2VysmEZEqZpGnBn1cBLjtWQ5pPcmS+NE1Rr9eLyTQw
      f2uIrJ8/44QnqcTbkvDwpE246L8pvLrb7SIIAty5c6ck1aS7FQACz4fruCUYbctGq94A8ou2
      As9HmmeIk7jUnoz74R4gblpw/PkBAHRpuOwnabpWJS6Rqez7772Ht3/5RrFmw+HSeItrdU1A
      0ju+3sA1Mp8/cm/mjJ6KnUzf2m8CSMu7rGkj2yJEtOeAPoh4fpo8j0YjdWVVfst2OSNISVfl
      Z+a/JfwmWti2jWazic3NzWJTDnWopCtAg+BCM9WCEHk2D089qGGaxEWoAlA+qJdPiuWCG/2m
      9m3bhmM78D0fnjPbL23Cf9lEc41fvfUmGnd+iZdGn+CXf/Mfi3uZpfDReEPyJH/PNQyFwvB5
      AHk06TcNlkJsy47mMSESednZptEbRRE+/vhjPHz4UJXu0l6U31XagbefprPLsen48qoOknMC
      qtuk8bRJswmXRYlgpTWTyWRSmnvw9ot6AYR+ANuy4Hs+HBaeQuYL2emhH2B8bgqRCcYZi4QD
      x7XE9IxpuGQdj8fIsgx7e3ulcBRJz0UpyzKcPvgYL2y2sdYI8fKKh93d3aI9afdz85zWougi
      EjpihmCQArpKSxFuSZJc3BGm2XR8cqcxuck2puT7PsIwLEwTmUzMrr2XhOQpTVPUarNJIF1L
      WlWf9KhwCSNDKMg8MeGvwbco+b6Pa9euYWNjA/1+H7u7u0Ytlec5LFioBSFCzy9PUs+lHeHk
      WDaatXrBTFJLAigd3EVmAdcS0iuX57O7Efb29pBlGe7evYvDw0McHBwU3p4nwd/prGN/MEGU
      Zrjdm2BjY2NOaHG+Iy1G2osiAUijcbc9p0vJzmeDO4qikomsHouiJU1yah0m60nTFOPxeGkC
      aXVqEpf/pk8QBBgOh1hbWystiJngMzGzZm5pEzOeTPhricyQyWSC4+Nj2LaN9fX1ktSVTEBM
      zeEgxtF83cQINMmW5fjZo1SWrnyi8lS22+1ibW0NeZ5jc3MTe3t7sKyZ25sW+ZbF/7WvfQPv
      /PIXmB6f4trr3y5W+jn9SVNR+/KgAqIhb4+8SNKKocEwGAzwox/9CGmaotls4pvf/OaMDlSp
      JJ5JE8hkGhj0vNFozHUcR4R3nJTGWl4tUUc2Gg0cHx+rCzUaXrxurhZ5rDl3IZrq1CawvC36
      naYpbt/+EMPBEM/dvFk6dpFii0yDm/5zk0Vz2Wq48f4l04E0AdUvN/gTXiQ5uceG7lF+8OAB
      8jwvFjx5aISGPzDTfl/8yteMJi837aTlIPmDfpMDRG7n5Hi/9dZbuHTpEmq1Gg4PD/H+++/j
      hRde0E+G0zw6JnOnalDQez7pqiorpZlWt3zGl8Yp/JmOF5R5tcmxNuBIQsvAwCocNMnN8+R5
      jjff+AXWMMErV7p4+6c/xmg0QqvVguu6ODs7U/G3LGuOWYELd6IMEZZmK8eFGIQvTCVJggcP
      HqDf7xfzE4qmJS1CbU3iaclMXFtbQ6vVwuPHj3F2doYHDx6o7mcpHE19CVwIHD4n0oQraQgu
      fOM4Lj3j5hw/QI3izCzLunCDcklokqC8UzTzRL7PsgxHR0fF5XK8HeowmUyTWI0Q1Ca9y7IM
      9Xq9cK9V1cE/sj4iHI9X4viZ6iX4NTjzPEc06OO5q1ewvtLBZ57ewaNHj1Cv1wGguHOML46R
      1iBJTMKEYJHfJlc09YVkqtPTU/zke/8B1m9+iHf/9v/BwcFBoQX5YMzz2UQ9cP1SGxT2Qidr
      AMCnn36KwWCA6XS60FSWcUE0IPnqLWksWqPg6zVcG1Lf8Ek/1e26Ll588UW8++67uHPnDvb2
      9nDz5s1ZWa1DtUmfqeP5b80E4KNR1qMxiubz12x1nrgElGsCMg+H04QbDUJO7EVwLzLZLMsC
      vBAHJz1Moxh3Hu0VIb9ra2uYTqc4OzsrLt2QbREDm/YgmNolukiPiW3buPvRbXx53cOLWyv4
      1lMr+PBXbyFOEsC6YHref3yQE8PSAtrm5iba7TaCIEC73cbZ2Rk+/vhjHB8fF4ePSX4i+srF
      O2qDx5hJocT7kbQBnwxzmgwGA3zw0x/iG90MtaP7eOnFF4vI4WISLE2cZWx+WZYzGRH8mWee
      mYtl0crIcnJAmdrTmNfzPAyHQ7Tb7bnDrjSbXRvIpsFRhT+vS5pGlmXhtS99GW+/8zai8ad4
      9rMvo9VqAZiFAayvr2M4HBZ04odkSQbkAWaacJCTYpKM/CKPOI4R1GroH8ZYbwQYRDH82ips
      oWXyPEecJPDOXY8EBw8rAC6kNR1WliQJOp1OcewkeXs2NzdLMHGBR/DzwUX9JUMveOSCPFqG
      aEfl73x0G7/XAS6vdPH8Rgffv/VbPHvjxmxOpJkWmi1rsmslI0m7mvbr0sYVnqRa1AacKZng
      ojWBfr9fdAYljqscrFLCSebSBEKVWabBGYYhvvj6l+ZwyfPZ/obV1dUi7JwzlpyE8xVe2a5p
      gPJYGTKrbjx3E28dHeD2vQdIGl28/vtfLAYbmRKu6yJOE2R5VjznjG/bdsnj9vDwBICFeqOF
      OM3gNtpoug4OT4cIwxqyox7WO82SgNFg5h4d7kTh/UX04XSR9AeAWr2Bk0mMS3mOUZTACdsX
      wmSuN1AOJdCeLzIhZIcMh0N1h49p4JmkvaYRZNtZliEIgmJSVJVMjArojgC+mqoxIMdN1s8j
      IblwkThRnBA/voWX4dKZb6LhphJP/BwdCZfjOHj9678/5w0ij1RRh+3AQtm+pjqlkKgFPgaj
      CU5HKa5uryNJU2yvdgDHxSRKMI0TY59SHTykgdPdsqw57S1NQhk9CgBXr13DW3uPcf/eJ0hr
      Hbzy1dfw8OHD2QDXgFgUeiClv0kyArOFqXq9XiLWIpteJpNta0rUkbSdUJp2sk6TqSXrpCQ1
      hlbGNIjl4JFlCW65akueC2JC+uYagg8ELqU1M5CYLMsu7jQDyife0YDj4SVUB9UpB3We5fBc
      ByvNOnaPeqj5HmzLQrvZQBjHlaYtJTn/o4+2z4L/5iYTeb/o+/e+/FWk6Uz7/uyffoTL7RDj
      aaRrAI3h+IiVo1eaFvQhSTIej0s3l/NJ2aI2TUTiyHOYiFBhGGIymRR+dlnvopCJKprw8lJr
      aWYTnUBR90MjTrx+2lNANIvjGB9++CFc18W1a9cAzC+C0W86BSHPL9Y0pHYDZjfR0BVQUuJy
      2IHy6RQkhTnTcXfxWqdZ1BH6F1qkEXjoNGqFR1DSST6jVW458Zc0I/rzbbpJkmA8Hhd7UYhe
      juPg8PAQG3UXX3jhuVk5uaKmEWDRZNSkxtJ0dogVv09Xmg5Vk0Zet2YeaW0Ds04Jw7DwPvDy
      sl0+GE1zEq2DqoQA/bdtG1meFf7zSTxF4Poq/hz2aRLBgV3Y6z/+wX/Gqzeewng6wE9//CN8
      4w++VbzjNCGac7oQg/JJ5K/efQdJ/xCB5+I3sYWvfP0bJY8PwU7lOX5EBx7CzE1jjj/38NAz
      2s2n4c/Nz+l0WoQ9UJiL9GbxSTnhbds23vjHf8Tor/8CaRBi57/5N/js+dZK0nZno1kMVpKm
      cKsksRwE0v7nkpc/42UmkwlarVbJZKhiOvqtDSoNDgkLJR77IpM0ZzTcF+Gv5Zf158gxnk6K
      skmaIs0mqPlhcQ6RbKvoYGsm+Xd3d/HClQ1cu7yNPM+xd/wrnJ6eotFolHCnA75qCOExbw/V
      Scw6Go0Q9w7wh69/HpZl4Z0PPsLDhw/x1FNPFZKc/PFSAxC9pI1NzM5j/bW80kcv6ZhlGc7O
      zorroY6Pj7G5uYmjoyMEQVBseqLjMKVpBwAHBwdI/8P/ic//+l3kloU3LQvXb94sttm2Wi10
      dq7ie//0JjJY+rlA2n/J5PK5lDq2Pdus3ul0EARBSaJo0lybi/DE2+F2pyQknyyRh0J6n0gq
      amU1GKTW4vDw8hL/0XSMnJUn2CfRBJ7rwXc9FffACzCeTuA5LoIgwMnjYfF+OIlKsMdpgmkc
      FTBESQT3fCWX/OhRFJW8QC4zi3zPw1RMZomxyBTj4SGSyXmf0G/5XvIImSk0KO/du1eYKnTi
      NZ0AYlmzaNR+v4/NzU1Mp1Ps7+/j5OSkODSBhzpnWQaXvFJ5Die+WISldOO553DjuedmOHIg
      F9nEXArzZ3L1k4A+Pj7GdDrFxsZGKS+vRzOLNHh4Pg1WqUnIHo7juDiFgdcjO0rTbhr+0uQA
      5ieflmVhEk2R5fqiW5bPDrHK87y064tSlmewLCBDhpWVFTz2m/ibn7yJJM3QvfI0bPdiACTM
      PvYcF6EfFOEExGCWdbFZpF6vY+KEeOM3txAGPm7vHuMb33qlMKm4+1X616Vm4BN6og3vXz5h
      JxoRkx4eHhbhCPV6HVEUYWVlBSsrK0V9dCE5PwJ+PB5jc3MTh4eHSNMUu7u7SJKkCClZW1vD
      B//Vn+GWZSH2fbT/9F+Vrr0i4VeYT48ePcrJUyI7W3aMfC6lOE8HBweF5Nna2lKJxG0+qts0
      75BtmdqmTqENMtPpFGtrayW/smxHc3ma6jfRhadpHCFOy/eM8fKcSULPh+fO4m6SLEWcxMXA
      yfMcgevDo4A8C+c++Rx1P5yZGFmKaRwj9H0EfnCxYpqlSNIU4fk5QcR8JHn39/cRRRGuXLlS
      sv+JhvzOAEpyMaqKBhxfHqlJbT1+/BiOM7uWdn19vbRIJwcYcLFtkhJpNnm3AfXl3bt30ev1
      8NJLLxXRAWSO8UUy6/Hjx3OnQkhJxxvl/myOpGb/W5ZVnNysSWyJsPbfJJkXDUBg1mEnJyfY
      2dkphfnyunl7suOWxb/UZpYWm1J4XaZkWRZCz0d0frKbxDP0A6Tx7GzRKIkRxTFgzfYMU2yO
      3MaZpimyPEOaZQi8i1srafBxdyG1x000yk9mZOFVSlO456ZUkqWq9tKSnFtImphMcG7qERyk
      TahezUP0+PFj3P3x3+GZlosPRxa+8Ed/itXV1WLTPw+xmDsclzqXM5g0U0wqT3asbduFB0jT
      JBriso5FTG4iIicgIczx4m5MXoYzxjL4S1t3Es3bnFWaJM9zTOJ512BR9vz5dDqdHTQWzlZm
      HfsiwpM6kzODbdmwHf1cTGoryzLc+fhjHB8f4eq1ZwpTVQokKktbM7M8QxTHcKzyWoWEn5s9
      nLY0B6jSJpZ1sdDGPUlcegPlvcb07OPfvIs/vLqCwHWwPpzg1x+8jy+89sXiADiuSWyOqJQE
      kgFNDLvoPW+DE9RkZ9O3/Mg5gKl+apsfwcGZVoOH488XW6SbWDIFx30qzrqXePD/WtLe8b6g
      IL/QDxAGQcmmlpLQ5G0hu9yyLLz3298gGB3jS9e3cfc3b+Hk5GTOpNDqcGwHtSCcm/sRgzts
      Es4nu3KgarjKfuHBcBxPMqt4cBwlv97A6WS26HYyitBozmKuSAPw1ew5Pa6NRMkE/MOfacjQ
      x8RIi5ImdavKyraA+ZsP+XNt4EhJqb3ni0FEoyi5MLO0ztRglb/nmWLGiEEQFCdE02nZHA9e
      j2k/B5fIlmXhaO8xPvvsNbSbDbxy8zoePXxYwlluZOJ1OAx/mlTyg4PlDTOAPteT2objIXmM
      lzeF6+R5js9/8Ut4I27jr++d4l7rady4ebPQlLRngP6X7gjjQHAiSnOBfmtzAfomacNDi7nk
      1yS4iRjyPYdZ5uHwUmeR1JOSfpEGMcEr8c+BuUOsNHg1LSiTls91HLUsNxG4a5fb+LxP5Mak
      ZmcVnzzaxVPbG3jv7n1cuvkv5mjE3ddS+3ENQExJeSj6lDQxv4KJD0LO6LJ+TqMqu1+GaViW
      ha9++zvFM3krD+0e833/QgNI06VKOlXZ5hxgboZUmQ5anRqTyjaWSZzo/NkydZjy8AGR5zmS
      NCkOrZVl/zk4WJYF3/fUaFAOC984LsMZtAO6iFE//+qreDDM8P23PsDa1ZvFpXscNorT57H7
      tm2XpD13t5r6nza2SKbXhJ7kCbm6TfXzsGluHmkCiwtHGoBJkiy3J5gDxgcBfUuTgzdMxOMH
      LvG6ZNu887Rkes6lCJdC3J8tJfqyZphsn7dlWdbcgVQavJJuy6TQD+B7PvLsIrKVpBeHRfrr
      uRnEcae+4BL8C6++CuAijEILUyBGy/MZHEQ7HiNEbdKElXvLqF4+uEhjmKJupXeLPEh8Us/P
      QKI+4fMlKifNRQ5D5akQWqf9LqYLX2AxTYBM5o0pX1WbPJH6I5tPDoAqbWDCn7sPszxDJgax
      NqAl7FJKlTrFcVELwuL8fLKvyaygUzaIyXid0itHphE3Y+kYec6gEk/gwn1JPncZvsIZnbcl
      L/WTZpjmutT6n9fB+0Mro+H7+PFj5HmOjY0NdX+3ZVllE2iRjcrtaq2M7HhenkYvj3M3IaEh
      K/ObJLhmWi3Ko2kE02DmEzEAhemzTOfI5zKPZVlohHW06g3Y1vzeZOrYWq02t+cWuNgpxiUy
      mUZ8PsQDx7hWzLLZuT8fffRRoRGkOUQTcGqD++UpD6eHlPKcoU0LkPTN6S1pxvlTHoBAdKON
      /ZqGpN9qODTPvKjDOKLSNODIECJEMNP6gUmjcOlapSFMJpWGX1XeRXY7weG7HpJ0toKrldHs
      Xa3+0A+K60H5hI2bAcRM0ziClZvdiFJCy8kycDFYSGJaloUf/833cPVnf4Ugz/APz38Z3/xv
      /20BQ5IkeOMf/jPws/+ESbOL5/71v8XOpculQcAlN6Usy0rH1ptWmSUe9M1NWLkwJnmM92cU
      Rdjb28Pa2lrpllCiPZUrvECaulo0SdEYXNq8GnJ8EEiCSSDlpEmrmw88/p4kHn8m3Wee5xXb
      EE348/p5eWKe0PNhW1bJDSppZYLdtWw0Gg3Yln6kOrXB3wWeX3QybTaivJyxZVvSHufPBoMB
      wrd+iM8kZ7AAnH74C+zvfwc7OztI0xT7+/tY+eH/i1fTPrLhQ/z13/5/8P/s3yCOY2xubpYG
      0nQ6xT/96B9x1jtBq7OCr//+H8xpCS16lNOM2/KST2jeI120nL4Uht9ut+f6nfNUsRAmGUya
      OlRQk4JVZompDA0E7r6jJG1v2YY2UTOZLyRNOWxSQnH8KY/m55d04t++6yFwvVL7muSn57Zl
      IU8y7D7ehYWLI8t5OxxGLtUpacFppPJ5Hb4/24NAPnBKZA6RlB7W2shhIQfQ8xtoNptFvUmS
      wM2z85VpwDo3h1qtFh49elQSNm/+8pdo12u4+dmX0Gk18cYvfq6erlGVNNOH+pCbNBqtdnd3
      MZ1O0Ww2izBo3rfcbCvOBpUdR/+1uQBPkun5REmqJ40B6T8fBJpNzgkhY1h4Oc50fB2Cv+Mb
      urU8Eg6OC+8IKek915tduC185zJ/nmY42j/Epw8eFPHtcgCbNCjHgbSXPMWBJs1UFw0guTGe
      2+Ku6+KpP/vv8JeXXsFfbb6I+p/+92i1WsW8Y2dnB49f/xP8o7eO77ev4+lvfxeNRgN3794t
      ORoAYDIaoNHuAJaFequNs15PpSk/dkbyB6c7n8fMreSKNYCDg4NigKyurhZ1c9qVwjd4MJw0
      OTjQvBGeuO1vym9aMOP/ZQeZOr9qBVDWl2UZ+v0+jo6O0Gq1cPnyZdh2+RQDafJoiXtDNLOM
      GOrNN36ByaCPWquLFz/3MtJcOfLDdrD78BHG4zGazSauXr06ZzubJFtRB/P5azEyFCbA51oS
      dtkOMZrEj4QTv7kyDEME56EYk8kEZ2dn8DyvMDfu37+P3779Jp56+il8+uBTPP/Sy7j+7LOl
      fiL4qa04SeC6DmzLnsOf5i6cl6RVwQf27u4uVldXCxg1wU7/jQNAK6ClRcyoEboqPX78GIPB
      AFeuXClOTTN12KK24zjG6ekp+v0+nn76aQRBUJxVSkd+c4nAJRAxD9mblS9wswAAIABJREFU
      0jyk/OReffedd3C15eDapW189OAh9iIXz7/wwizuH/nMq5PniMYTHB8dY3t7u3StKw0mPggk
      PiTduSCgbYN0I6fUaJqmkjQlifrBBx/g8acPsLq+gc+++OLcoOLrBNznf3h4iIcPH+KFF14o
      Dqc6OjrC3bt3cOXKU9ja2gKA0gDjptxoOiliqFzHQeiVr3qV57PyyTzVmyQJRqMRer1ecQkh
      r0PySmHq8gfSnpamg4nRZOJmiDY/kO/5862trcrTpBcNIs5QxByWZRXnhg4GA4zH4wIvHh7M
      J448/FZjGmnGnZ32sbO+BsuycGljHaf9HlzHQT0IUfdDhF6APEmxtrqGGzduFPBw2mhCQno+
      SMpxWHzfL+x0spE5Lqa5CF9JvX37Nqz+Pr772ovY8hL86t13SjSVwoJWiIHZLq7V1dXS0fTr
      6+v40pe+jEuXLhXtkObidQEookwty4KF+f6lPiD4uZeMe7lojnNycjKnIWQqDQBJfBODmirh
      HShjRugjTSBuH8t2rly5MmcX8yRdYDzxlULyNkwmE9RqtWJnmAwXoG+ySWkLpcms0549+9xN
      /OCX7+LB7j7+4Ze/wo2bz89J995Jr5gwkmuQ05mvXvJkgkMyFX1MfUN18WAw+uw+/BQv33wG
      ruvguatX0D86nBv4VDePKcrzHI1GA0899RS63W7xjCbofN1BMm5h+rLwBO4dlDTgZeWzLMtw
      cnKCtbU1dLvdObwlPYiHbN6AJuWl+pSdKhlDukNNqTQRYQOPx7fTBQzaHEODV+Yl7wYdQciv
      75QTVKqXSzYe+3Lv3j389J9+jE8+uTvXTp7n2NrawvNf+BIejICXXv9acQQgX4ByXbfY5sdN
      D8K/KiyA28MEVxzHBVPR2f4SLj5vIMbll2TQu82dS3j/zgNkWY5PHu2iudKd85ZxW1w6LXq9
      Hm7duoX9/X0AZSkt5y7kAs3yDNM4wuR8e6ht2XDtskdQG/ycrnk+O3hhf3+/OEBXk/7SEqG6
      5jbEmArxb5nkSNSYW9qyEjk+CGq1Gk5OTnB6elpsqNGShEcimWWzW9fDMMRoNCryaO3Kenjn
      f/LJJxjv3ce3XnoW7354B3csG9evXwdQVsFyTyvBMhqNsLu7izAMi6tcJRNVzWtkEBmf+PKj
      UYixpNlE/cLbkgtXzz77LG7dSvAXP30XrZUuXvn8FwpGk+sT0o9PsJCwkJ4ZokWxKw95sXhI
      lPccF57rqUKA1wWU7y8GgAcPHmB1dRW1Wm0u4pX6gAsQegagHA69qGHOzHJkcgm2yGSqkt7A
      7NjtXq+HXq9XSFINTs4UMg/vJFNb2oRTy/vwwX384cs3EAY+Pv+ZG/j+27dw9epVANXXLRFc
      tHd1dXX1QvUa1Lysi/CiiTid30+mXMmUcJyiLa55ZBt8VZ63+dJLL+HFF19UF+Q4vSnxgUmm
      EB2Bo82X0iyb3Wt8vq+ZbH7f82bHLyr9W+X1y/McJycnsG27pOnpvUZXiYtryqwxg8b8kgkl
      kaSdryGmAbi2tgbbtrG7u4vNzc05Juf1akSiVdFarVY6ZZnDJWHV3gPA9qXL+NXtO3jl+Wfx
      69t3sH3pskpMXo6eZVmG4+NjrK2tlbQZ15h3Pv4Y+3u7uPL0VVy7dq1k01Me3gafBPN6LOvi
      qqAoioqFLKDMrNLdygMVuV+eTBZOP+6T5ydP0AmA7XZ7ZmZlaSGl0zwD8pnk53ziOS5815vr
      O8uaeZHeeePncJChs3kJX3j11aIcXTA4nU6RZRm2trZKuJp4SibLsi6uSdVMFK0A/21qhN5x
      tWNiLlOq1WqFWSGDnWQ7cs8BcLF6eXx8bJRoVIe0C6WH5/r167BWtvD9t24hba7jxo0bJSY3
      aUQAxcJMq9UqtUNlbn/4IZyzQ3zrpevof/ox7t+/X2JweRoCMamc/FL+KIrw0Ucfod/vF7fE
      Ux08nJj6hbQkf0c05eYPtcNXj3lyHAfj8Ri980UvsuVpIBDze46Lmh+iEdRU5qe23n3jZ/iX
      X/08/uwbX0QjGeLRo0cFjr1eDxsbG4jjGK1Wa475eT9UJdu2L45HX1QBn6HzDl6mrMzLTSbO
      DFLCb29vAwDu3LkD3/cL/y7PQ7+lOiZJJ08Q4zBJzcTrljg888x1PPvsDXVOY0rHx8eIoghb
      W1vqQqBt2zjYe4w/fvUFeK6LV55/Fj+5/QBXrlwpJDBfg+DaTjIg5QnDEKurqxiNRnOaRNrQ
      /HZ1SReS3jy0GSjfmcYHiO/7qNVqMw+aZWEaTxGfL8a5tgPXcYsrXk3Cls9JfHt28gUAXN5c
      w72TE2xtbcFxHKyvr+PTTz/F1tZWcRK4pMUiIVv0AS/ECS0Jo7nmtPzEeKZ30kTgSGu2PJ0u
      za/GlAST5gDV3+/3sbe3V8SDyGTSaE+Cv8ZAWTaLn59OpwiCoLingIQIXe0ZxzHWNrfw3sf3
      MI1i/OrDO9jZuRjkWpwUZ+pbtz7AT378Yzx8+LBEg3q9jjAMcXx8XAgaEhLknpS0pDh+2RYf
      JJJZZUxOGIYYj8ezC8stG42ghrofIji/31iLGqDyPArAcRx47VX85vZd7B+f4Ke/vY1nn322
      WIzzPA/b29ulg295WiSc8pydK7pMKAQADMcTDMazazHpggNN9XOkZKN8olwFKGdsy7JwdnaG
      s7MzAEC9Xke73S6tKsqBQGqarufZ3Nws1KTUQlp7JpPGxAg8URguRUnWarXC58+ZlO+S+/ij
      j7C3+xhXnr5ahEZQHinpKf32N79GOxvjuauX8bNfvY+tGy9ie3u7KPvw4UMkSYJLly4VB0Px
      NQJungLl49B5iAK39wGUGFWjkwlmSWvJtKRtaMBlWYZP7t7F2WCAz3zmM4UQW6R9q/pX5smy
      bH4/gKw8z3Ps984QeC42VlrYOzlT8y1CmH5zommmhibhyX6msIZerwfP8/DUU0/NeRwAFMch
      jsfjYhJM7ci4JA0+LVW553gaDAaYTCZwXRf1er102yJvh/vV6axKTpdF7R0f7ONLr70E13Xw
      uZvX8db9TwuT0bIsXL58Gfv7+zg4OMDly5cL/IlJqW2Tl0yGG5DEf/MXP8Pw6BBXP/sSrl69
      ZoRPDg6pyeSCHW8HmJlaz928ObdeQ7ThsEmTWquX5yNNAqB8LIqmzh8f9bDWbqDTqGH3uI/N
      bkvNa3pmSsSMJoaTE9NWq4VLly4VEYoUSsAjO4GLm9Bt28bKygo2NjYK6SdNlkVmURU8Gq62
      PbvwenNzs/BiyYknpUVSUk5uZVpZ28AHn9zHNIrwq9t3scOYnEyKZrOJ8XhcnLZM5hcAdSLL
      GUhLP//hf8GLt/4B3+39Gid//++xt7dXgp3g5qEPZHbxCTRN8uWEnOAmLcSdAbwdaUlQeXpv
      0prA/KkSdqYgTB172D/D1moHruMgSlLUwwB2BZNL9VSVjyOtmRsaTLZtY21tDVevXsX6+nrJ
      N87jeWiTSBRF6PV6qNVqc5teNFj5yQccFgmjhFeGJLRarSIyUhskvF1elvJrpyBI+rz40ks4
      tRv4u3duo/v0c9jZ2SloQW2EYViYLHzxSNZNMGgr01xrpg/vYMvJ4OQ5Pl9L8eCTT1RJTIkG
      mQx7oTbJQ8UvxqYzhQgOEw/RQNNMYCnoNKFFz9zTwQj90QTNMEQ99EsESLNZFCNl1vztvHKN
      WShJO5uXN70zqWbtpAMevclV3enpKdbX14vIS84A3BShd0D5HBmT2QaU7WHqaHkUuyzD5xEE
      I9+0I80OU7IsC5954QVY1mdLwWUcB9u2sb29jfv37yOKolJ8PDeF5B5hoBz3Y1mzsOd9K8SJ
      5WMFMd4Z2ti+chmj6RjNWmNuEFPfxHFcusuAkhwUmuCU/MDfUd8RPfmKuMb4fH7Dk9tpzuzU
      4STC/skpPNdFt1XHcDJFI7wIS/VdByfxvPdAA05jHI6gyYyg/yaPkKxHdhQxEJWlkGcuxcj+
      0yZUVccCEoNwWOTpZ9wEkHMTbdDRRJjH2PD3pkmchEvbBknSPgxDXLp0aeaZsct7gmltgDOO
      3D9Mn5/88Af4r//o66i5Dv793/0Al7/2GlbWVhEGF5NTEk55nuPw8BDv//D7aCLGcOUyvvIH
      31YdFxrz83mapIXEncpI97zWd4RTqc+pcLMWoFkLEMUJ9k5OUfM9dJr1EjArrQaOz4ZYbTVK
      S/AceGrQZMbQe/otJ6VSEi3SJpQ3SZJiXkD10xk2cRwXXgS+GQaYPyiJGIeiQuWZMkRA0xyI
      awJ5Jj1wsZBFzMYHHJfEfDBouNNvrhElTESLwWAAy7IwGo2KYDwZQyTXCjiNp9MpWr6Ntc7s
      woqr16+js7aOVr0B5GWJ7/s+ptMpfvuzH+G719pwLAvv7e3jwYMHuHa+yk31ajgRTLdu3cLD
      hw9x9epVXL9+3Rg8ycvJd5IWJGy4sCiFQuR5jsD3sNVtlyqi94HnIk197PfOsLHSgm1ZSNMM
      UZIg9L25zpEdJ4GUBJedsIhQ8n0cxxiNRmg0GsiyrJgE2raN8Xhc+I25RJb10DuatMkkVazE
      k5iXHwhGeShak++w4hqPtALBwrWDxJ8vZgEovE1UF4d9Z2cHwGwFlS6u3tvbw/PPP1+EMHN7
      WgqvWq2G0yjDUX9mITzuD/CZzS0gLwfk0cAyJS6wNNoR7G+/9RaswTFuXt7B47sfYjwe48UX
      X5zTpJKHTPVyGpKDhOAu9gRTB3BgJdEBoFELsLnSxmHvDAe9AY7PBoiTFAe9M+wd95EuMJEk
      Evw/jyTUzCMiMM8jCRAEAYbDIabTKc7OzmBZs1MK+NEYkvm19jSm43m55uCEprLEjGSLE9zy
      NAQt0pOvtEr8AcxJbAqF5hvrZaJdcLc/vIX85DG+euMS3vvlT3FwcFCSiHme48P33sPf/C//
      M/7T//G/4+z0FJZl4fWvfh1v3jvEP7z/CV5+7UvFpFkemEUm1LV/8QX85Z0T/ODuAe4Gm3jm
      mWfmBpcmfCzLwvGj+2htP4WR5WPtqWvYu393TmhJHOm/NFM57Xh7JFzUYDippiTgtm1ha7VT
      5LEsC+1GDVmWY/e4h7VOC77rGKU+/ZdJy6tNkngekwT2fR/dbrfQBrKs1i7Hv0qbETG5tJa+
      aTJ5uA2rmXZ8PsDNErosWx7rqB0nwkM9TPSy7dldDdlkiC+88DlYloVvvfYyfvCbW6VLzHu9
      Hh79b/8rXr/9PiLHwc/jCN/+H/4darUavvj66xhOxkWIgjx3iNPlmWeewXg8RhiGeOXppwth
      ICerUmrneY7c8eFmMSLbh51EsL35c31kMlkNNNcxhZUYj0bUGE4mTuyZNLPguS48ZQIp69FM
      GNmeNseg0SsvSuB1E5OMRiP0+310u91i26A2oZJtLRIIHC9uU3Ii02DgDG7bduk8S96Ghgs/
      0pGkLM1hqF1pTpnobFkW2u02xlGCaRQj8D3sH/XQEu7awWCAzskRLAB+miJ/9LDAM0kT5MiL
      Uy80mnEX8srKCu7cuQMAuHr1atFvfMBwWtKzL371a/jJf/l75PEUdlDH1779RyU6cfxNlgqH
      S1s4ozrUleCqyYXWCM83Kz9v50uprrVZZfvLuqo0CGc004Z/rZzMx4nIGY3n5VKP2ubE5sFj
      JAVpkHDfvAl/KiMX8jR7ndNIeuuIEV778lfxH3/4MzR8B06jgy995aulgby9vY33vv0duH/7
      VzhrtrD5J98t5gd09ZNt6bE3BBMN5tsfvI/ra03Yw0P80z9+gq998/dLB/RyGvPvTqeDP/5X
      /3quDRPeJhjIEcHpJ/O5/E+9Xsd0Oi28JyZGk0BR6g1G8L2LsAOqu2riYmqDM58EHiirX1mG
      pFCapsVGCdlu1UDQ3pGEl14hssGlB4ebSNJfTbencFOG8nM7ms8LuCdJDlJNW5oCxLa3t/H8
      Sy8Xp6Zx1yQNtj/6d/8j7n7nj7HTbmNjYwO2beNsNJzBILYsjkYj/Prtt5BlGT736u8V3rbx
      eIymk+Gl52a2//7JOxiNRsUiJV9wNGleyTOae5ibieTwCIKg0JxEP043+l1MgvN8tpuHjg3h
      k1GuZqpSlueIkgSdRq0yv4as/M0/gHnFmNfHyxLR6vU6JpOJWj8vK02Hkj2alydePGKSpDjf
      /8oX1jTGBDBnBnEG5BKScNeEkVzfkLhp+FLa3NwsbWbheYkxr1+/jvX1dTiOg9F0XFzg5zrl
      vcA//09/g9fyPXzFOcTP/+57BZye5+FsPEV6PtD7o2lxQh0XChLGsiVRFpJ8giv56O03fo7f
      /vX/jbe/93/h1vvvl0wkEz+WNABJF4ohoehLDRiZ0izD3skp1trl28s1ic/fa6YHz8MT5eeS
      rViiV7b9WdbFziGtnMlm5LDIziCpQSqVTwC5V4bnMdmoxGw0GKgNgpNrA44/r0czy0wCgZsG
      tHWRHzpA9fF1jjyf7d3lbbj2xcV8k8kEnfgMK7XZcTAb+SlOT0/R7XbhOA6e/9yr+N5P3sHZ
      2Smef/HlYpWcmJO0ODfZNJNICjYJ73A4hP3pB/iD6xvI8xx/+/6bmJ5fiyT7XtKkEGej0QjN
      ZrNkm0qCmlTVYX+AnbUV8C7WGF6+02xVql8ia2pbJp4/DGcXuU2n02I7YpVpJ1WkCX9yoQHz
      xytS4kcFSkHAN5nIQ5+IAaW5peHPA8+kmtdoJ00ucp/SAqLcakmwBV6AaRKVBlKez2KN+n4H
      R6MpHMvCPmp4odksmHprawtbW9/BYDDA8fFxsUNN9j9f/9AGukZD7jWb0YzTprwbUQparqFd
      yhjHccEopMLkqqkpWbCAPAes8gSFGuMIUQcnaQbHtmHb+oqqSRVKacDtQkk8Cn2Qpy9IYkpb
      eg4/BX9iYMs6DxN+801YloVXXnmltObApTqtRvJDaonZqS6+4d00CKgc1zoa7KaQEokzl/oc
      Zqo/OTd/HHvetf3lP/oTvPPO28jzHK9/53Olc0JJO9brdYxGo2LuwzVNHMfFIbsmKyNNU9y7
      dw+O4+Dy5csIgqBkRrZaLVjXXsLf3/0NktzC9itfUdcDeN2Fx+7g4CDvdrvFaKLOGw6HiM7v
      vJUElFJ4PI1wfDrERrcFn934rSFD7x4d9VALfERxch6GEZbec+kg2+SdCKC4NYWfQ58kCYbD
      IY6OjrC6uoqVlZUSDFUmkMwjBwtPWZbhr//yL3Dzxg3keY6P7tzBn3z3T0uuTzIhZCwKH6hc
      ivf7/dJBXgSDPOWCq3gaNKZBLHHj8UdRFBVHRnKTgWAdTmcn6dX8AK5zcTQjhx240DB8NZxr
      TS7tXdfF/Xv3cOe9X6FdD3CWOvjqN745h2Oe5/jxD3+A5zY7SJIUn55FeP6zL2J3dxdXrlwp
      nQQxnU6LUHlumkotzuF1/vzP//x/SpmdN5lMMJlM1H20PPHR6jo2aoGPs9EE9eAi3KDKbJlE
      MdY7LTRrIQbjCaI4QeBd3DzOtUdV28Bs4/nu7i663W6JqUhK0OZpqf6qzDRevwl/y7Lw6NEj
      JNMJ6u0VWI6LLI7gBWFxOhlnFt6OlMKfPniA9z/4AO+88w4++eQT3Lp1qzhJQqpzLrnpI3HQ
      zDyOvylRnuhcSyXZxeUfgTe7wEPb3MLb5vFN1N50Oi3WBBqNBvI8x1s//wn+5ddexTOXdzAd
      DdCPZnu4XSZET09P///KvqNJjiRL7wsdqXUpVBUKBVXQqiG6gVaYnuEMbWdnSRqNNKORRx72
      sJf9A3vhgX+CV/KwNFtyd2Z3ena6tyW6IRooaC0KKF2VWakzpPMQ6ZEvPCNrlw6DVVVmhIvn
      T7/nz2FX13Hu6CGMFfN4/vIVqmsr2F/JYnHxLpK5QlhDliP/bgyAqp+KogQqEBenVEekVES9
      HBRQtCmyBNf1hp4ZRQgMAyO4kEmh2elhrVqHaejIpxIRwPI58T5EKWEYBsbHxyMbyzlNs9kc
      upYpTiUAgJWVFTx7eA9gDPMLxzAzMzOkNoh9ZLNZtJpNlMeDfJt2u4VisRjJjxEJWfTyPHny
      BNbmO7y3fw5PkiZkzQjVql/84heROcbBPu5zUYXc7X1d18PykXws13fhMx+e388OleTQxuN4
      QRP8aONSgTMhIMgnymaz4RiMMYAN9tPzfajEOOaSwDRN7LQ6cD0Pvs+w02ji3372EQxdQy6T
      xg8vnoeRbFF1puvnc93a2sKjB/ehahpOnjwVvSWS/p5KpSBJgReiXq9DfI5uiiRJsPvlrcXP
      aaOf51JJbNVbKOeCs7qZpAmfsdikOnFRtCmKgu3tbTDGwkMonKB5xQAuJndTfVzXxYsHi/jT
      y+cgSRJ++91NjI+Ph667uNwgSQqiq1N79+HZ44cAgPmDh5FKpYYqSkuyDNd14HgebCfIn9FU
      FaZmYGXpNf70/SA9Id9jqPeicRjGWCS7lK6Fj0G9KNQWEhE/bv2SFBjmrVYLrusim81CloKr
      mMLngCFiFiUq9eiIp7kYC/K0eO6Q7/s4fOIU/vbbm0ibOmw1gYsnp8L5cceCaZqYP34af3dt
      EQCgZUvYqNYwPV7BysY2srl8ZL3cA0fTuvl4vV4Pd69fw2fnT6BrWfj+2nfxZVGomOSGpOiu
      ExfHGEIO0bVs6JoahszjmqGp8AwdtVYHhXQgwizbQb7/e7Tv3SPQ2WwWtVot5ByU6tPp9MjT
      WcDAk+K6LpLGoLZkJhFsllh5gK6fz+vo0aM4cuRIVLfsczBZlmG7DqzewJ7qOXaIsKZmQVI1
      7DRbKGQzML0efnz8DABw+fLlyDyp/so/442ee45D/rj18/542sjy8jJyuRzS6TRURY0QACSh
      oC3xwvBxdzv3DATG6suXL+H7PlrNJiBJuPTJZ2HdJDFdgSPz7OwspqamwrXdvHEdPz1bQqpQ
      wpmzhyIEyN+lxbw4MdTrdcxU8kgnE0glTJiSH6hAccYmBSI/UihuBn3G0NRQjdEUBc1ODwlD
      RyY5urZn0tTRqduDjRGkEG9xriwOZEmSYBgGNE3Dzs4OisVi+C7VCUfpvUGOSyBqXS2J24+e
      Q1ZktHw1rCQRp/79SzirLMvo9evj0M9NTQ8CRH5wxeqx06fwxY3r0HwPWiqLq1evIplMhuum
      0U7eeJYp71PM76dN9O1T2PHvM5kMkslkWJqe2hmSFNxt4PkedE2PcHjex7t37/DswV0ADPsO
      HcXM7OwQESaTSRQKBdz55kuc2H4CBuD6zBlc+eWfRCLtIrypS9n3fVy4eCkCe/o8Vc8o8kuS
      hGKxiEd3bmG+0US3Z6HL5OFL8ngnVCdUFCV0ZY3afEmSUMkPLHIAWK81kDL1CNeiiAAEmaWe
      50OWpcjxy7gNi/ude0fK5TIMwxgaQ5ICI5iH4EX7wXYdOF6grpw8dxbra+sBZzo+HZknHyvu
      9zji8rygJKAT40zgYlnj/SgKLly+AlmSkEqkwIQoqbhm/jlHbMqZKSemUpz2QTktzVPi5VO6
      3S6SySSShgnHdeF4wRosxwnzgDiSMRa4Mp/fv4Nf99XHr2/dw9ulN7hw6f0htcwwDJTXX2Ah
      p4AxYO3NfXQ6V0MvFE0opL9zaSDGPESY8895X7Tpuo5zH3yIr27dhG3bmJicGpwHEIFE74MF
      Bsf/4vTzUcZXIZ1EvT36sgvGGLLJBN6sb8Pz/+W5OaJXhZ9CqtVq4edPHj/GP/3+t/jpx2vY
      3t6OtSWsPvKHQPN9lMcqKFbK6DlRF7AIJ9d1cfunW/jum6+wuroaPksRtmv1dl37sLQdcHz6
      TJwEoo0iGf2MN37GgGaNcp88MCCQQqGAbreLzc3NAOH6tTtVuZ+053vhTZh0Lr7vh+qjLMv4
      5PwpnJmt4N7duyGBAsG+pdNpbECH6zO4jKFhZCNxE464ojTg7uS4susiXnKnh2jbdrtd3Ll1
      A6zXgaZqKBQK8WVROMXt7Oyg2WxGYgJ0UAo8cWMCw0qB5ezuTgWAdMKAqsiDisExhBb3kwKN
      MYZSKQjJ12o1WNsr+PXlc/jNlbN4+uBuxIiVZRkdqwvXi6omtF8z5gANHfvGjz9goZzCz08f
      wqsHd9BoNCJ9WYSA4ox3sUmShIRuQEK0SC1V5/jGiglhfBzqY6efxcFUlBK835mZGei6jq2t
      rfAdldhVXGJyxOdV7lwtiduPn4cSr5jLottpR+bBjfnZT36F/9FI4X9jEgu/+ncjK9LR+Y+C
      I8VDWZYj57pphJ4xhsXbP+H9w7P4s48vYGEiB6vXi94QQ//zTniEeBQXEg+b0P5kSUImaWK9
      WofvD7/vM4bNnSZKuXQAYMRz/VGckDdFUdDpdML6N51OB8VsEFnUNQ2aHAR7ooAc9pGHBmT/
      H++b/ufN7bYwNVaGqes4MjeNtbU1siuIGpAY5tq0yZKERN/HTiUuLxvCGAu5H9/kuEZ1czFx
      jKsPomFK4UqRqNfrodFoBGtmURXMcuzg7jM2KP1+8f0P4GfH8LvvbuHZm3f4x+uLOLRwBMCA
      QXECbjcamB/LoZyQsb66HFl3XOUGrq6OgidVw0WpwaPuruui025B1U3Uew6KuSyW1zYGuUBU
      ZIwy6uL0/zj9nj8PACnTgKGpWK/VUcykYOgatuqtYLN8H2OFTKzuTzmb43qwXTesUiEuXpZl
      NJvNsKL0xMQEvnv8EIr8GrVmG0a2GOa8eJ4Hx3PDS9nEJstBMVfqFKDA54SQzBXx4u0KxkoF
      3HuxhHNXPgnnZjl2BPn+uWbo0Uvh6GZSDsYRgX9O1Vb6LoAhjwqNRlME4/3Q/nlB4Xa7HQTi
      5OE1cBiamhHq5/v378f4+DjW19dx7sNPI3EFrpdblgX/7WP8Yn9w78Mfnt+DdeRYWLaG23TU
      NqH7zH/ne8FVc3oQicL8xYsXmJ2dhaZp6PRsPN5sQZZlLC+9xuGjxwM3KO1UBKRofPKfoudI
      FLG0D1VRMFHMYa1aRyWfge260FUFiqyi3bOQNk1IEgAJ2NgZZKG5oL+uAAAgAElEQVQCAXdU
      FQWO60JTVehq1LDhrVKpoNfrhYC5/MlVLC8vY2rPfuyRgro2iWQiDOvHzXMw5uC0lWhvcMPz
      zLn38PjxI7x4voITFz4Ia98oihKOEYf84ti6pkFXtUguEA3jLy0twbKs8JZLul+hpO1zbbov
      cbYZVSfoflLiAIID9ul0GtVqFdVqFZVKBUnDRM+2wDDwAvqMoWP3kNAHnr50Oh16z8SbJXnz
      yUV4PqKFzWiGLYU5Vfs83wfAIHkDQ3nxzm20q5vwZRXnLr4P3/extbWFRCKBdruNTCYDh/Tr
      sn7/q6urjBZz+pdwLGA48CK+SwmEt2anB4Ygaty1bBTSKfRsGx3LCQNiIvHR/mqtDlyvfyGD
      oiCbMqH2kfThw4eYnZ1FLpeLzEeW5VA9KlcqaHZaEW7Cx6TjJvSgXzFDUVw/5cL8Mx8M7e7g
      OqY4qUmbqenQNT2EJU3yun3rJgqKi3wmjbuvVnD5059FClCJcKe5RlT3p89x6cHdjlSVpaoR
      EOTWrK6uolKphGer3b4hTJFSlmUk9WgFbprwJs7lwb17qD68AQAoHTsfqkpxjDbucxFHlpaW
      4G29w+mFA2i0O/j81iMcOLwAy7IwPz+PVs+B63t4/ewJtjY3w2S6sUplWAUSVRH6Pf1c/C6O
      24gbnkmaqDU7kBC4PDd2GlAVBbI8PI74rizLKGUHFyH4jKHaaMH3GTKmjlwuN1IVMAwDrVYL
      HikzIiJilPCjKgddH0dA6kHhBpuiKLAdC3FtlESQ5QGiiNcfdetVXP3gLCRJQqvTxcbGBqan
      p0cm1NG98/3gcM3W1hby+Xzo4uQw4c+LCXSUGXS7XZRKJei6jnq9DlmWkU6noasaeo4Fl6gp
      nu+FiXKc0Hh/fAwezT585AicAwcABPcZxB2Up3MRGSnfA77OdquFPflg/1MJE8xzkclkkSno
      qLV7yKeTMDQV5XPnsLm5GVbJu3vt60EkWMy7Ebmi+Lu4ufSZ3d4pZKKRXvrdbpxSRCBZklDO
      ZWA7LpqdHvbt2xfhOPQ9fnlzt9uFkTTRI7dFxtk9VNemOig9W0r1aDpXxxl9QCXuM42E7aka
      xBiDJylod4OA4lp1B4fnFobSiXmjnFuWg/uQr3/7FebHi7h1v4b5Y6fD+qFxhjDl0nz8YrEI
      xoKq3Ovr6zAMI1RvkkYiNIZ934fredBUbQimEccBSQ/RdR2O4+DmjevotFrYf+hwpLo1xQn6
      e1wVvPGJCVz/4Tu0uz0srW8iMzENXw1yylQlWg2Q10jq9XrwGBucB+CLF4MrtIn68Ch1KQ6h
      xWcpkOLepe/F2Sm8P8/3oSpRnTeuT9M00ev1kM5mIgQQJ259n0ETEug40oufRYgWbKRxTefF
      f8oESSh35tzy9HsX8MVPN+G7Lmb3HwwzWnlklEoiOoYsy3j86CGunjmKQi6DE56Hv712JyQA
      PmdRTRFPt9EUhm63C8dx0Gq1QntHVzXYfYPf86PZAbxP0RjnGaKMMdz48QecmR1D6eAU/nj9
      DlKpy5H0Zg5j3qeY48Nd9Wtrazhx4RKevVpCYfYgpiYqSJkmNCVaaZquUdd1lKf3DVeGo2Jo
      lAEc947YdjMAdyOMuBY3Bu9rp93BRCFao0gkLM/zwjC/7+6eMx+8H0+IQLTKg/hdnKv3X7I2
      EVn4RmUyGVz5+NPY9dOUY84RI99JUhjkC4hq4DES8/dFO0fkvowxVCoVLC8vR1QhANBUDbbr
      QNVUMEQZm6gWi2M6nRYmKwuQJAmH9+7B2toaVEODqRmRfeS2Fq1jyh0Eru9DT2XRdTycOHoo
      hFPPtmCk9aFTcHxsRVFweGFh4AWK2zhxAaNEU5waIb5P34nzIO02j1FEUmt2kEslRxInbVwN
      6vV6UDU1qHEjqHnhuP2fFFF4n/SUHEUcSZJ25f50TYPxBvMViSpO2sV9z2MDVIowxnD8+Al8
      +/U/oZI2sNXo4Ni5C+FagEG0lO6bmDrA++Jj7dmzB69evcLy8jLm5uag9a83tZjdl2YDtUSM
      5HIHgaEbMAwDsiyhMDaB50vLGCvmcf/lWxy7+EGYc8SrT/B1cZzxvKDC3YuXr6AmUsjnihgv
      5eF6Lnp21P5qd7tIGmYsPnBGIK2srDBaMzNuo3ZDxFGcknqJdutj1OTodyKBSZKERqcL5jNk
      kma4eRQBxP4URUGj0YBlWSgUi2h125G+6bOmZkAhSDXKRqGiGABkhXOpfgJa/0JokTBCzibJ
      SJmJIWQXOaioVsTBBojWB+UIU6/XkUwmI4dM4oh+lIoqrtmyLGxtbcFxHJTLZaRSqdDta+oG
      NEXtw5anRwdqKh97ZnJPhLF8+9232Nmp4dix40hnMtCU6KEoutZ6vd4/fdhCMmFivJgPYz+y
      IqNnW7CdaKpGOpEMg5pAtHyl7/sDG4AuUgSCuAniBMWN5QPFcVgq8uMAHjcPkcO3exZc10Mh
      kxo5d7FRNQiIl1iDPgZrGNW3qH9LktT3bsmABOj9XBtdZbBdJ5JDIwZr6PpFL5VInHEEy+dK
      EZ8Tg+gWHqWyRlTG/tWmqjJIqeD9JRIJFIvFMFINAAndQM+20LMtWJLdh15gDzFBLezZFnRN
      h+PYaHc62H/wAFRFhaaoQ3EXPmfP87C2sYmtnQayqRSmyoWwqC8ArK+t4entm5BUBftPnQmr
      3THG0LUspBPJEOdoVu329vYgG1REOAqoUQZvHGLz38V3qGSgkUexn90an1ez08NEMTeElOK4
      4vf8cEu304VuaBFuEX02eF+s3yNuEE8oi7M76NoMTYemqPAFvTgUwwLjEA1HEUZxaiPdXEmS
      IvrybsxGZGq+78Px3MhNQPxzTpj0mCav9JAwEvB9D54fZMAyCG7afnCxWqvC9xkkmaSbkIi2
      7/uwLAue5wVJeUxCz3HBPBfN7U2M5fejXC6HUteyLDz7/G/wS70ODxJ+98UG3vvTfxfC1WfB
      elRZicBEkiQ8uXNrOA5AgT6KK4tSYlSEMa5R71JcHlHcfMSmyPFnhYMMTgZJCkQvFX0cGKlU
      Cu12G6V0ChZJ8NttPN44EoT99X3tNO+G6tE0pC/LMhSi2nBEH1X1gapBIjzF9Oe43B66Fvqd
      GKCkyWPc2Ez1OWac+krtBdd1oWkaLMsKqm/IChRZge958DwGxgb2htKXjNQLBEkCyDiu66HZ
      bmNrYwPvlpbgtOvo+RJOnDqN14+f4L2Febx99xwP6js4cuQoGGPY3t7GXtYKzlIAqNg1yCyK
      P67rQjMG0owzBVlVo0bwbgbsqA2iwByF+HEEI+r1IvHESaS436PjBAdMgPjS5pZjI5NMBUf/
      bCeiv8fNPS6YJyZriZFg2sRShvwZSjB0TXEMRzRU+ecUBpT701gFnZftudCU3csR0izK3TQA
      Trj8c+7T5+5GXdehqVrE7uBj+b4flt6k6292erD7HrqNWgNTGQ3nL11Gp9fD//g/f8BvPr6E
      6fEKpiol/O33t3HkyFFIkoRyuYzvtQL2SVU4kLCVncTxZApMArpWL5gfuZGerv/omfeGbQDa
      RP2fRkVFVWM3/TIOgXfTwcVNF4HIhH7IQMAILh5yAz/YoHa7jXQ2g06vu+uc6U/P80JdOE7F
      G2Vc0u/C8wSeC8/3YfYT4bh3aTc1chR8+L70ej14nhdWXaAIzH32Bik1PiqRUVxTnKQWiZZL
      R13XsbKyglwuF1bpcBwH9Xod2Ww28BwRwuAZwemEiWIuUFEb2ymUpCDOYRoGspk0ltY2sGe8
      jGq9AdVMhu8bhoGzf/Lv8e3iHciKgktnzoYMxtD08ACPqC5y+yiSV0vFc9yGikhPufk/10Zt
      5G5qE/2+aztBYEOO54LUBx3X+HeWZSGVTqFWrUGRh0uEBKJ59zWIOvtuyBpn8AbrCVx2uqqN
      JJw4lVP8m3N/SZJQrVbR7XYxNzc37NJkLOSEu6m4NDs0TgqL+88JjzGGdDqNzc1N+L4fXsfk
      OA6++OKLMBB59epVZLNZMMbQsWw0Oz1U8hno5Dqq+fl5fPPFH9C1bKxt13Ds9Dm4joPf/rAI
      VTdx9r3zkaUVCgW8/9HHQzAy+sc3+T5wo53GUMJkOFEkisgdJzLFjaLviW033/9uumaz00W7
      ayNhaIGP2PORSyehKgKRSkCr29lFPRrMMZNMobpdDVJw1aAGDp2DqelhXgudLxBNJ6ZuUrGu
      pqiaMMYiWY9duwefMWSSqdBTwt+lt1SKa6GER+fSbrdRq9WQSqUiHpJR79F0CE6k9O+lpSW8
      efEMsqrizLnzSKfTkQp2fE9t24brukgkEuH31WoVtm2HSYr8ls5ut4tms4krV64EKSxdC+N9
      Z4Y4D8uysLKygmw2G6n3JHregNG3elJC5vDnzIL/PXSyIg4ZxTyhUe/EvT+qjbIx6Fiu66HT
      s4MzAyNcknHj7SYJgMAVl0wmA2O4XI54gwLkjVcNGBskdtGx+bxFY5RmXtJmuw78/qa7nhfx
      fQfrHlz2TddDVSjeP2/b29vwPC9SkEuEF5fs1BVIc4D4POv1OrbfPMOvL51C17Lw+bXv8PHP
      fh7J/mRscA0qL0zFxywWi7AsKzxgz5GTHm5vd3uQ+2sQ85g4t56dnQ3nH3dQho8pXn7H26ic
      J86EPM+Ld4PSzygljbIJxD7E30WdVXyXbhL93XZdpBNmOGmqZgxz+OhG70YEjuuGxjDNECW9
      RbgkELj7rl/7HrLbA9MSuNi/WEKciyjdaMpxOL43uG7WcRwo0mC+nU4HP/7ub5Csr8Oe2o9L
      n/0qcg6AShk+Hv9OPIASR6iUgOm66frX1tZwaHYPFEVGOplAQhkQM+eivHACP8jCpREfV9M0
      6LqOK1eu4KuvvsLy8jIcx8GhQ4fw9MkTLP90DUmnjc38DK5c/Swsh0PXU6/XQ8mQz+eHarxS
      XBGdGeL6Q4Qnlb0BDEsAcQA6SBwRjNJdObCoqOa3tXPgx00yslm+D98friW/G3enbTf7wusb
      bO12G6lMGp0ePbw/PJeHD+7jzN5xTI2VsLq5jcU7d3Dm7NkIcYvrF4mft5SRQM+xIold/N3b
      332Nz3pvkDZ9rG08wIPFSZw5fyFW9AOBH9z3fRSLRZimORI+tJQ6n0+cnu/7Pqanp7F47RuU
      81nUW23Ykh7Rnzny03gA3RuqBicSCfzyl79EpxOckdjZ2cHDr/+AP8MaJMXD87aHNy9fYEnT
      Ye1sY2p2FlNTe/DTzRvQ7BaUjXfQ1t/iXmYc53/zH8OCbbRRAozDAZERcFWt0WhA5QhKXxil
      vuymt8c1WvGXny0WiUbkmLz5vo90wkSj3cXmThOZpImEsUvdRym6sbyPuIg0YwxdqxcawzlZ
      6XsMAvVHFubHGEOn3UZutgxJkpDLpNFb2orlwowx1Ot1SFJQNU6cg7gh3CvDN89tN5GQgr4y
      CtBpBoftaW4NTSUwTRPNZjMsb0/H4anTInzjvDqUoaXTaSycvYAvHzyCmUjg0uUrkWf5rZvU
      zRvXuOriui663S7u3roOTQakdgOS4UECUFAY/uba97ist3HR9HDn8Y+onf85pG4DH506DPb5
      T0AG2O+s4va9RZy79MEQQ44rqMthFHrd+pKeqmG9Xg8q9enyTYkzYuM2kA/AuZ3o3+UXNNPq
      anTytI2SLNlUAtlUIiy6NdG/nVIkQE1RkU2m0bG6YWWCOIKlHFnpG7q8Dk5cajF/Z+HoMfzx
      +vc4MD2O5+/WcfLi5XDdFH4/3bwBrVMLor6ZCk6fPRsmq4V1dDy3H68YXv/c6fP48h+XcFC1
      cc9P48iJUxF1Sgycra2toVwuh54VsT/uuuXEEBdlFo1HACiXyyhf+TDsw7KssDYUl+5xkob2
      QQt63f3pJn514SRUTcWtcgVvmhvQV1/gy4aMmVIOl5waZN/D+6aP//noASrFXODWVjQwZqHn
      Ayq5YYZyc6r+0EAlLySgqmrEAOawqNATYaIOLgKFE0acUTEqPZiXUuEegd10eBGI4jOZpAlb
      sPTF+fq+j6SRgKt56Fq9kdJMkqR+tiELjeF0Oj3ERWgrFAo4/9FVbG9v4+KBE0gmk0MqRa1W
      g7r9Dh9OJMAkCV8sv0a7fRjZbDY09rj3h7eu3UPKTIbEsW9+HsX/8F+xsrKCczMzSCaTkf1Q
      VRVrq6tYXV1FqV8U1nXdsCiYSCDU6KP7JXr44lQFAFhfX8fD2zeRNlS0fQVnz18YqpgXV7lu
      yGj1Pei6htVGD0hksGGmcW+tjav/5iqePnyA9TfvMAEfq56CPQf2IZlK4+9+vItuKwFzp4F3
      Wha/PnwknKtlWaFtJOIEVcP496Ltw4N2qphKS4FHf/KOaMlrUd0QjV2KoP9c0CWu0YUFCB6f
      oUg/8zwPsiQhbSZhOTbc/t+KHBy9lCQ5TKVg/oAAeG15cf20JRIJzPbvvI07Sliv11HWGOAH
      4r2k+mg2m0GxWVnGm9ev8fLFUxjJFI4ePw5V00Ibh7ZcLodMJhMxoDmCPX/2DO21JRyencIP
      d29hz8GjIZFwzsZVJXqmWbTNeJ8cGeLUUFmW8fDOT/j1lXNQFQVLq+t49eolTp48FYETJzBq
      y1AEBIDZ/Yfw5fU7SOcLYGZw6EVVg/KT5y5ewk3XwY21JciVPRjL5rB37168e3wfRyZymDx/
      AnaqgB+ufYeLlz/E9e++QUqV0GUKLl6+MvIm0Djblbqrt7e3oyrQbrYA7YwGEqgeJurCHBjc
      IyDLQfmSUeoP/TvOQKPf0XnFJXsxFgRCEsbw1T8UURRFgaZpaLVaKJVKYUSWjhknRcTPVFXF
      nj178NXN77GvECDkyzbDx5UKJEnC1tYWtpee408unMRGtYY7i3dx8txZAAjP08atgcOaey+W
      l17jl+8dhaaq+PDMcdx+tz3kGeL7QXOX+PeckKhtMAq2ACDDD5PVcuk0uhurkf44AVD3LNUK
      OIM9cPAgqqUSXr58ibePHwMAFhYWwnvDjpw+C0k6h06ng1KphMXFRVwe0zCZ1IBuFdLEJCop
      HV9/+QV+/f4ppJMJbFR3cGdxEecvXBi5L7z5vo9Wq4U3r16iWCpjcmoqGgnmwKaiUqRokbNz
      wuGGTtwzyWQycj+XaZrodrt4u1GFqsjIpZJImvoQV+fjioYNn2cc0tN58DlTcU9dfnTe6XQ6
      rC7Nmyj5+FxG2Ur87zOf/it8eW8RjAHnf3Yl5Labm5s4NDsFXVMxVSnh+pPXQf9g8BEldFH9
      pJuazuaxsrGN6fEKXq+soVicCL+TZXmIgClcRyUfUiYiInZxcgY/3H2EmfEKbjx6gXNXPo6s
      lxIYnwPVySnRlUollMtlnDhxAsCgovVPN29Cd4JqHZ6ZQ3VzA+17PyC3rwwwFZAkuJ6P7WYH
      qqrA7F/CkkkmYAvlJ0epcs1GA/f+8H9xtmzg1atFdI5ewoGDh4JIcNytGgNDUYkgHTU06ICi
      KOXPcTHH8z9arVZwO6EkYa1aR7J/TRIApBMmEoY2chHb9RZKMeVTKALQzaaERHVh3jiX1DQN
      a2trSCaTYZFWkTtSScf/ppxXjCVwjwNnJI1GA4vXvsEHJw/j3foWNlwZh44EOq2pG1CkaCW3
      SLiezMHzPPzh9/8AeC5m5w/g8MLC0BzjjERKyDSiS/cqTnUBgKWlJezs7ODAgQNh0Ivjhmg3
      iUYpXQs90M6f7/V6eHj9W3x28QwYY/jdtzegLT3Bz8zAbdoujCPRa6Nm+/gnfQ8Wzl/C8tMH
      OH/sEK4tPsTskVPYu3dv2F8cHCRJwr3FOzhQe4rxTAKu7+PvNxg+/NWfBqURuV5IgU2JIM5z
      QDkG/09L9lHANhqN8OolXqJQAjBeyKJr2ShmUijn0nA9D5s7TWzVW7AcNzIXxoLTVRSpaaOZ
      jJzri2uhUo1/zwmcZzTGZbfy52jJEtHwp/U8qZrFv0un0zh+4QPcWd6BnSrhxIlT4bOO60Dq
      z43uAUUe7sGo1+s4cuw4Dh07gcMLC+F8qXSjeyLabSJMxf0Us0WBgHMfP348DLQBUV2a98Vv
      g6R9Uq8Mh4UIY9vlBAr0bBtpKbChJACpxjaUbgslt4Pi5mvk8wV0HQ9JTcXHB6bw+vYP2NzY
      CMcUJRJfc75YxOudTnClb7OHRD6oIyutra0xehkb1R1FHVjMbxcRJY5Q+Pej/vYZw0atgbFC
      NvS/MwbU2x3YrodiJgVVCcba2GlgLJ8daWiLngfxPl9KpGK9Sl72I5/Ph4RAOZht23jx4jkY
      Yzhw4GB4xlhcFzUKxQPrHLZB/SAbHSK+Tc2A2kd+2i9VPxVFwcuXL5HJZDA+Pj50Y4zYqJuW
      2msisoj+fLr3PHYjrpcWB2CMYfHObcidOmRJQk9N4L0LFyNSV4zHUMn09MkTbL17DQCYmDuA
      5WePsVB9hgOFJCTTBFtbQc/18L92dBSOn8NYQsYHZQNoVuFCwt+t2Lj66387pOJxhsfh9PTx
      Y6y/fAIzX8Lp8xeDNa2vrzMxb50Cjm4uzTykLlHKSUTOLIpYuqmhnu772NxpYryYG6oTWm12
      4Ps+skkTtVYXlXw6coKINkqIov1AGzWALctCs9mE53nI5XJh/VBFVdDp9ZDQA1fbN19+gROz
      Y5AALC6t48NPrg45DeLGpM/Qepc9145w6YRhxp6Hparl27dvYRhGeNdWHNLHqX0iQlCViH/O
      f/d8Hz3HgtlPJW6322H0VdxjvmbbtnHnu3/CLy6dgSRJ+OOPt3H04oeRyLSoOtO5UEeMYQT3
      o331xR9xJdVFUZewttPGPzzfwL/+1S+gayqu3XmAqxMmTN8GJAn37ATcyhz27dsXwYW4sxui
      HSiLXgLq4lQIR+KN37vr+4ODDXQjRLHIf8Z5mELJIsuo5DNYr9bheQPklWUZ5VwaxWwans+Q
      MLTIUT0RAUQJRPV0+rdt21CU4AI927aRz+eh63pwKzo/6AEJar8yQbfbRUZl2LdnAvumJ5HT
      gpwd0aYABo6BkLiFwyVAcHLNE9Q5mayZp5BQrs2N9FarFV6fKo7N18cdAXFrp9KJVowOYch8
      gDEoshJeERVna9F3FEWB4w6IyvaitTwpLtG94lFZ7omjatiHn3yK373r4Hmti42ug/NnT2Gy
      UkIpn8OBvdP468XX8FN5SGOz2Dc/j62NjcgcRccMVdk4PkqSFD0Syf/HBQ04BYsuLtHwoKKO
      9i02MRDDiWBjpxFKAt5URYaaMIb6oOOKa6Dilm8+191dz0Ot2UKz1UEqnUbbbgGQUN3eQTKV
      hK6qKOUy0PpGm67rqHct9GwbEiTstKN5MCI35XoulZBc4rj9qsqikU+RlCMIXSM/nzwzMzO0
      mbyPdruNn67/AA0eJDON9y5cjCA5vxkeiF54QvN8dDUo1gsE6g9PrxAZIcUPABjfdxC//f6n
      wLab2w9ab5bikCRJeHD/PrbXV1GojOPosWPh+KKKnVeB/XkTspRAU7bhOC5UiSGfSePgwgJe
      sBQOFSdQX9+MwGt7exsvnj9DoVDEgYMHh9S1iIFMzwPQctO8ibqj6GoDBvogpS7+M5VKhQvj
      9fspQOkGMhbcIL9Vb2KiGF/rkyKFSAScAEUDVZZl2I6L7Z0GVlZXkctloTAf6VRyqG9FUQBZ
      Qc9lqOQzYdW5arWKh/cWAQYcOXECpVIZcU1cP0csijg+Y/CYB5ukjpi6AbV/E3ucK9HzPLTb
      7fDuMPodH/f7b77GB4dnkEun8OT1W9TlFA4eOhQiOWVkFG6cQGi/7XYbS0tLmJ6eDkuPMBbc
      svLu3TuMj4+Hd/pyHZsTqWEYkfnT9Tx+/AhZt42FfbN4+PINOno29GRFjH7Pwx//5q/xb2YT
      UGUJ15e2MCH7mGUdSPuOQD50CpbjwOh7MH//w22c+/AqdnZ28PLeLXxw8giWVjew4Sg4febM
      0D6FajzdeOr+o0al53lwHCcUW1SdochP8134INy7pGlaGA+gGydyFU1VUMqmsV5rRDiiqFbR
      PsSYAOVsPcfF0tom3q2uI53QcfrYAsaLeYyPVUJk4vPioXXPsaHBxcrGFqrNNiRJQqlUwoef
      XMXljz9BsVgaQnreRKkYp/opsgxZkqGrGhKGCVM3wuoFXbsX9kOll6IoyGazQ3CjXi/Pc5Ew
      giOW2VQSvV4vwthoX5HD6f3GVSTXdbG6uop8Ph+x3TY3N3Hr9/8H5dX7ePTlb3H34RNUG61Q
      XdN1PUR+qn7Q9W9vbuLA3j1QVQUH9+7B1uZGFDb9edXbPZz84CP89d0lvHzxBmvrW5jtbEJq
      N4Bni2CuDb0vZXzG4PRh8PrVK1w6sYBMKomj+/eisUUuLhHww/f9QAWiFjlVI0JxzILLLDRp
      cJKGIq4YaOLN84LrN7kRxY/FiUgjcnddU1HIpLC500Qln4lIIBHp4j7nm/56eQ3Mc5DQNWjZ
      FIy+gUvvpMrlcnAcB6VSKRTbvAYmmAWr08LbThcT5SI0Jcp5RekhzkWcJ/1J068lKbA3VFWF
      oekhLN+9ewdJCm43TCQSQ3EO/i7/ff+hw/jHG4uYLhfwaqOGSx99GisRKXem1y5xpN3e3g4v
      FEmn0yExPrh7B/96Ngdd8rE3a+Jv3z7HoQPzWN2qIZ0wkc2kwJiPxdu30a1twvYZTpw9j1K5
      HMJm7755/HD3EU4enMfi05fYO3conIvterAcC4oshWrfEbeGeVvGbEaCpRgwmA+pPAkoA6/U
      vacvYebK0DQNxWIRr96t4tTh/dhptiDr0VtKRamsisjPN43qr0EFYAbH7d8KwgyYfe8IDbfT
      DebNtm2YphkGQUQEoUhC39dVBdlUApv1Jsby2aHn6Lt0TNcNDptYrg8mSRgvl+D7Pl6+eAHD
      NDA3ty+i1gGD+j60DlA+H1zAvLW1Bc33sbK2jmQ6E9yESdYRNyex0fkFat5wGUTHc8PbKlVF
      BXO9sNICr81PW9y+TU5OIZvNBccOj783VC2PG6Jiagh1p0fepdkAAA89SURBVNq2jWq1ilQq
      FcLA87xAEioqLN+GrgCOzyApGkxdg1nMoWu7eLO2gXajhoTbxicfnIXtuPiHm7fx8c9+HjKN
      mZkZqKqK2++WMXXwGMbGx1FrdYNjlYYOVZHh+gz1dhetnTr2yAySBMjMx1/XFExPH8BH730E
      OBbYyhsgX8SxA3P4u2uL8DwPc/v24cH9Fv7vt7cg6ybOXRhcqcrnQJMYlb/8y7/8KzFIQs+u
      2q4zFIDyfT9yiJlKDXHD+fOMsfDwBge8GEsQuaqqBIlrO60OkoY+NAZ9h6tpfHH1dhfTYwHy
      X/vqjzgxXYbbauDZ0jKm9gRXoNLoJ503VT0455XB4DkWNneaME0Dvjeo0Bw3L/o7Dbrxvm3X
      GVovb6amo9frod1uY2pqKsz0jDNC6RhcDeEXg4sEQ1Ug6g3i+yFJUniWIZ1Oh+N2eoG7cXZ6
      Gl/fe4qtZhuLdYYzH3wEVdPAwMCYD12TsbGxhaIuYaxYgCzLePLmHfbOH4jAIZPJQEtmAUWF
      7bjIJk1kUwkYmgpFlpAwdBiqirrl4cHqFrx2E/ddE/t+8WfYaFsYz6dh3P0O7PFtOPfvQZ7e
      B09Vcf/xM8zNz2NichKz8/sxOzc3ZIxTJs8Yg3T//n02MTERMXJDzuC56Dk2cpksXM9Fq92G
      rgYFkLg6wTvmiB2XEsFbnNpCbQ7RGOPvd3o2OpaNUjZ6Gohzbb6Z1M1n+cH9AW/fLkFvbeHo
      /r1gjOG339/C5Z/9MgIUUWeP010lKfB3t9ttrG1uw3I9HNg7jWz/hnOqpoleE74u7onxPA+t
      XieCoCGsWFBWsbFTh6qqYY1+TkBxAUq6oXQ8vh46vpj5SwnJ9/3Q0OafO66HaqOFyXIh9Nnz
      02CyLA9dOSUx4Ob332FvKYONWgOF6X04ePBg2L8kSVivNVBIJ6Frg+tMqQeI/247Lp6+W0NG
      BUqFPHK5HLrdLr78w+/xq+4reN/cQPP+K2izM5j47/8Nd1c3YU7MYWJiYkirELNkgX70/s//
      /M//Kp1OhxtGJ9Il1XZ1TQfzgwxLClTe2W7GH90g0YMhGrVxXE5TFTAEJRGTpg7XdWFZVqiz
      9no9aJoG27aRyWRQqVSws1OD5fpImgZePHuK2YkxNFodvNlqYm5+fgjhI0g4ooV5TYoMq9vG
      Vr0FWVGRTaciCBmXhiFGg11/+AxF+B9Apx1UuOC1+HmLS3UQ5x9np/HP6POiitRsNrGysgLD
      MEI7aWOngfFSPrzBk9tyQOCp8fyg+G/PCSpEm4aJuX37Ycs6xmfmoCXTcFwPph7o7Bt95Df0
      gDM/fvQQj258jzdLb1CZmIrEA1QlcIiUyyUkE4nwTO/45BS+vf8UuR9vQu724DeaSL5/ETVF
      xf0Hj+AxKTwrwdvq6iokKTicRQOlyl/8xV/8lW3bYVkLjvxB5YJBHorneqF/mIsz0Vag/lb+
      +SixPQrZ4iRGAAwZ7W4XvZ4FMD9ySmlychK5XA6e56HZbKJUKkFVFDSaTUiqBjOVwc37j7Gy
      08bp985HxKKo+nHEiNPtOSKHN9J7Lur1OtardeRzmbAgrrg++jf/zI05FcafdWwbW5ubSCQS
      kRytOCObNvGsBj1CyXV/Pj+K/HxdtVotNLoVRcFWvYVC/2ZPkTvzPVZkGYqsQFMUSJIMTdGg
      KgpSqRQSiURY1GBzp4lW1wr7Y4xhZWUFvYc/4tOpBKZUB98+XcK+A4ciKrgiR8vfMBbcNp+b
      mcONR48x61hInT+HzK/+FUpeC8eTPlbfLqGhJFAoFOA4Dj7//HNsbW3hyZMnSKfTyOVyA7zq
      drshQtMvaDM0PVLAiQMs7rIIzmV246R8EykljvKe8GNtnuchoanYaXextdPF3NQEKpUKWq0W
      1tfXI/YIT7zTlWCjjXQOlz78JPTpU2SjY3M1inJwyr2ptKpUKsjlctjY2AhuKbz/EDMzs9gz
      Vho6HRXfokRB56UoCnq9Hh79dB0p0wBLZPDehYvY3NzEnTt3oGkazp07F9kvOnd6viPOO8el
      NkXmra0tuK6LTCYDVVXRaHdh6Cp0TY0gn2jj0ENEYuPjJgwd48WAQamEuayuruJ0OQUZQFqT
      IXfqkfckKShktra2hkwmg3Lfm+T7QRGAyf/0nyEngPKeScBzoNQ3AcZwspzAPy69xv79+/H8
      +XMUCgWUSsG+PHjwANPT0+Ec5UqlEoq/N2/ehAs0dQMpMwFd1aAp0dryFIGpzsv9vxyxR13o
      HA4ux1dm4/8tywrTLQJOKCOb0JFOJpHL51Gv16EoSqiPUs6XSqWgaCp0XUY2ZaDaaGK91oDr
      xReRFVUKMfrN//P5ckkwPj4OwzAwWS6iVa/h2Zt3cDw2JEXEeABN6RDXL8kSmpur+M3HF/Hz
      S2dQ1hlevnyJ77//HlNTUygUCvj2228j9ThHSSz6O4/H8PUN4geBu3psbAyFQgGW48JyXGRI
      SRouSSjD43YFjXZzKcNxgsNNVQK7kZ/PVRQFCwsL+GGlgZbL8GqnB70yHbpjZVlGt9vF57//
      Byy/XcKNH67h4cOHEQZ16NBh/PRqGZbroW17aHgyGIA39S4K5eAeYl3Xw4veXdcFT/3n/1VZ
      lrFnzx6srKyEJ6K4iiBBinB+ytn575SL0yiy6B4dtTHi5nOA8xIqXG9zHAfVajW879XqdVEu
      l7G6ugpd14MDzkRdYCwoxc2rviUTwTo263VIkozxfDaStgAg1DEp8lNi4IhMObYsyxgfH0e3
      GxiDjUYDr5eWkM3lMVUpwfOiDEGE2RDySxIc14UqD2yCdDKBV9vbSCQSYW1NLhm5Okb925RD
      U4cCRx4q0TzPQ6PRCL1IgIRqo42JYtSTRPvi4/Cfo4xuOq4o4RhjyGazOPzRL/Htk8fIVPJ4
      78iRyHhPnz7FzPQ0kukMypUxPH/2FAsLC+EaTdPEwpnz+Pz2/UDa+QbcRg2Zyb04czSoHj03
      N4e1tTU8efIkrFNE5xeWRZmZmQGA0MDk6RGix4FStmhEUmDv1qgqIerKtCoaD1rxjZ6cnITn
      eah3rNBQ44chxCZJEqYmp/DqzWsYCZMgsARD1eAxHzLkCEKKEonOTVSDaJUBSZLCQ/IcIXut
      Ol5aFiYqJeiqAtZnCDzmQLNe6fo5gijZAn68/wSVYh6PV7Zx/v3L+Oqrr7CzswPXdVEoFML8
      fI7IdO3ikchR9gO/NpSfQd7caaCST4fwEImFelEGRDNAdJGoRRyi3ijXdVEul1GpfDiEB0Bw
      her25gaSqTRc14HaN5Cp5jE2NoZK5dOIm5efOXFdF81mE8eOHUMqlQI9+BXaqGtra4yKBQ4o
      HgmkbkmKABzAFGnEhCMRgCJg6LN84hyg3LPDk7na7XZ4TWeja2OqUuyP6cNyHFi2A9txg5gF
      ECAcA1zbQr3dRMLQ0bUdVLJZJM34xDo6L94oZ6XwEU9D0dZsNrG5uQnXdZFKp+HJGirFAhK6
      GhK25/th2gPvk+rYsiRja30DkiRheno6hNHOzg4kSUI+n48gNSVgjmS7SdparRZcGuj74SH8
      zZ0mCpkkNHWQlh1ySiHlhRrFooeLr4ESJZ0ndUmK648YwIqCe3fv4u3SGximCdM04fa6KE9M
      YaEvLcSkQ97a7TZ+/MPf45S1iq4v4fX4YVz+9LMI01UUZTQB0EWJCDuqUVVCJAAKCJEbcY8O
      z1HhgDMMI6w8PD4+HqpmyxtVaKoC23GgqgoMTYOhazA0DYoyINa17RoShoHt7U24vgfTMJAy
      BtJgFMeKW6MYRKEqktiHbdvo9XohghmGgY1qDWYyjfnpKfi+F7pCbccOTwSLRqbTs+F7HorF
      Yjg3USJRI5R6oEY5IqrVKnRdx9bWVpBxmc8jk8mg0e5CUWSkE+YQklNDnSMpPVwv7jd/RnSQ
      UHtKPLhExxIJijGG+/fuYcLwMT89ifvPX6Pm62DMR7FUDjNkqU336tUrJH/8LQ77QWGxr1ke
      87/5L2H9pFAS0D8owLg3R1yE2CiCi7qtKD3i9F7HcdDr9WAYwe2B3EjjBnSn0wmNN940VUY+
      k8L0eBkTpQIK2TSSphFBfgCYKBXQbHcwNT4BeB4SpHwGRTb6nzZxLdzAE/3nYuPR2PHxcUxP
      B4adCgZmd7G8sQ23X95FVzWkEsnwgI9IZHrCQC6XQ7vdjjAmnstPUzrEogRx9kW73Ua9Xg+D
      hxMTE8hms7AcF47nIZ0YJCtGpJGg44tq1f8PE6EMla5VluWhK6c43AGgXqtibmocqqJg//Qk
      qu9e4eRkHn51BQ/u3x/KZWs2GmGFPSZJsCQt1mMlU4Sg+q0kSSHSdbtdWJaFTqeDbreLdrsd
      /qeeGooQFAC8byqmGGNh4SyeMs0/54TDWHBbuVhxbqyYh67t7mHibbJSxGa9iXKxhFa7HYsg
      4vpFaRf3fAjAmIAf/em6LnK5HHK5HJKJBHyrjfWtbTg+6/vRFSR0Eya/uKI/P1VW4Fo21tfX
      wzKE3IPCvS00BZ3Omf7n0rXb7UJRFOzZsweKomB+fj5EuFqzjSK5cFA870thIiL9qPVTBKaw
      pftLG/VKUY8b72dm7xyu3X2EzdoOvrq5iEsnj6JcyOH04f2obawN7U/tzTNMo1+dWtXRKu4Z
      CioCGFSHpjokrU1PfcmcKEROxVMSAEQikHEShNoY9F4CCggOAN6HpmloNBoj4xS7NUWWkU6a
      odHZdSwk+hcx0zlR4I1qono4Ss0Q+5Kk4CqfRqMRlDHvdLDU7WF+ZgqmaQbGsapB13R4vgcJ
      UighGvVGoC4Rg1uMn1COzMflzgQuMYx+mjTntHxuPOOWwnsUDOKkStyzcWqYJEXvPaD2kxiQ
      oyomV7Fm9+7Fumni4foaKnOH8OztMsZKeaxv12Ck0pFEPwCAZsDpKTDgoskUpHKD1G6K29L6
      +jrjnJ6LIs5ZKABpgEs0XsRF86xKHpmkjccJ6FE72gc9hE1bq9XC7Ozsrgi3W3u7voVyLo2l
      d0tBlJKkycYhMoeFyF1F8U45Ytzn9G8gkKZbW1vouj4k18b4+DhyuVyozojenKdPnyKTyWBy
      cjJCAOJmAohIBg5/eiE2EKQvtHsWLNsFA5BLJaCr0UoUcUTG1y+esxXzk2ikmb8XlxEQF1wU
      +6b2BlWdXNfFq1cvsfzmNcxkGidOnQq9b1xCVqtVLP7x75HvVrGT34Nzn3yGTCYT2QtZlvH/
      AEAZX0n4sI5xAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tableau Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      uhVGN6mmCgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Pie' width='192'>
      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
      LP8PHkqpoXrUgF0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map Best' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
