<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0330.1916                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='45' min='1' />
      </column>
      <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
        <calculation class='tableau' formula='100' />
      </column>
    </datasource>
    <datasource caption='EstablishmentDetail+ (dat)' inline='true' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' version='9.2'>
      <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\dat.xlsx' interpretationMode='1' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
              <expression op='[Scores].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
                <expression op='[Geocode].[EstablishmentDetail_Id]' />
              </expression>
            </clause>
            <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
              <columns gridOrigin='A1:U1374:no:A1:U1374:1' header='yes' lost='0' outcome='1' processed='8177'>
                <column datatype='integer' name='FHRSID' ordinal='0' />
                <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
                <column datatype='string' name='BusinessName' ordinal='2' />
                <column datatype='string' name='BusinessType' ordinal='3' />
                <column datatype='integer' name='BusinessTypeID' ordinal='4' />
                <column datatype='string' name='AddressLine1' ordinal='5' />
                <column datatype='string' name='AddressLine2' ordinal='6' />
                <column datatype='string' name='AddressLine3' ordinal='7' />
                <column datatype='string' name='AddressLine4' ordinal='8' />
                <column datatype='string' name='PostCode' ordinal='9' />
                <column datatype='string' name='RatingValue' ordinal='10' />
                <column datatype='string' name='RatingKey' ordinal='11' />
                <column datatype='string' name='RatingDate' ordinal='12' />
                <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
                <column datatype='string' name='LocalAuthorityName' ordinal='14' />
                <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
                <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
                <column datatype='string' name='SchemeType' ordinal='18' />
                <column datatype='string' name='NewRatingPending' ordinal='19' />
                <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
              </columns>
            </relation>
            <relation name='Geocode' table='[Geocode$]' type='table'>
              <columns gridOrigin='A1:C1374:no:A1:C1374:1' header='yes' lost='0' outcome='1' processed='4041'>
                <column datatype='real' name='Longitude' ordinal='0' />
                <column datatype='real' name='Latitude' ordinal='1' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation name='Scores' table='[Scores$]' type='table'>
            <columns gridOrigin='A1:D1374:no:A1:D1374:1' header='yes' lost='0' outcome='1' processed='5297'>
              <column datatype='integer' name='Hygiene' ordinal='0' />
              <column datatype='integer' name='Structural' ordinal='1' />
              <column datatype='integer' name='ConfidenceInManagement' ordinal='2' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[ConfidenceInManagement]' value='[Scores].[ConfidenceInManagement]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (Geocode)]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id (Scores)]' value='[Scores].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Hygiene]' value='[Scores].[Hygiene]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
          <map key='[Structural]' value='[Scores].[Structural]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8177</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Geocode)]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4041</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hygiene</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hygiene]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Hygiene</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Structural</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Structural]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Structural</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfidenceInManagement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfidenceInManagement]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>ConfidenceInManagement</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Scores)]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Scores]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1374:no:A1:D1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5297</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
      <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
      </column>
      <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
      </column>
      <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
      </column>
      <column caption='Confidence In Management' datatype='integer' name='[ConfidenceInManagement]' role='dimension' type='ordinal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Geocode)' datatype='integer' name='[EstablishmentDetail_Id (Geocode)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Scores)' datatype='integer' name='[EstablishmentDetail_Id (Scores)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='integer' name='[FHRSID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code numeric' datatype='string' name='[Post Code (copy)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='tableau' formula='[PostCode]' />
      </column>
      <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating (string)' datatype='string' name='[Rating (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([RatingValue])' />
        <aliases>
          <alias key='%null%' value='Exempt' />
        </aliases>
      </column>
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
        </aliases>
      </column>
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
      <group caption='Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)' hidden='true' name='[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[AddressLine1]' />
          <groupfilter function='level-members' level='[AddressLine2]' />
          <groupfilter function='level-members' level='[BusinessName]' />
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type)' hidden='true' name='[Action (Business Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type,Rating Value)' hidden='true' name='[Action (Business Type,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating Value)' hidden='true' name='[Action (Latitude,Longitude,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating)' hidden='true' name='[Action (Latitude,Longitude,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating Value)' hidden='true' name='[Action (Post Code,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating)' hidden='true' name='[Action (Post Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.67828' measure-ordering='alphabetic' measure-percentage='0.274277' parameter-percentage='0.0474426' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BusinessType:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Takeaway/sandwich shop&quot;</bucket>
            </map>
            <map to='#2a2a2a'>
              <bucket>&quot;School/college/university&quot;</bucket>
            </map>
            <map to='#373737'>
              <bucket>&quot;Retailers - supermarkets/hypermarkets&quot;</bucket>
            </map>
            <map to='#464646'>
              <bucket>&quot;Retailers - other&quot;</bucket>
            </map>
            <map to='#555555'>
              <bucket>&quot;Restaurant/Cafe/Canteen&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;Pub/bar/nightclub&quot;</bucket>
            </map>
            <map to='#777777'>
              <bucket>&quot;Other catering premises&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;Mobile caterer&quot;</bucket>
            </map>
            <map to='#9b9b9b'>
              <bucket>&quot;Manufacturers/packers&quot;</bucket>
            </map>
            <map to='#aeaeae'>
              <bucket>&quot;Hotel/bed &amp; breakfast/guest house&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;Hospitals/Childcare/Caring Premises&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:RatingValue:nk]' type='palette'>
            <map to='#5a5a5a'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#a50f15'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#a50f15'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#b7b7b7'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>&quot;5&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Geocode (VisCWdata)' inline='true' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\VisCWdata.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Geocode].[EstablishmentDetail_Id]' />
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation name='Geocode' table='[Geocode$]' type='table'>
            <columns gridOrigin='A1:C1374:no:A1:C1374:0' header='yes' outcome='2'>
              <column datatype='real' name='Longitude' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
            </columns>
          </relation>
          <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
            <columns gridOrigin='A1:U1374:no:A1:U1374:0' header='yes' outcome='2'>
              <column datatype='string' name='FHRSID' ordinal='0' />
              <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
              <column datatype='string' name='BusinessName' ordinal='2' />
              <column datatype='string' name='BusinessType' ordinal='3' />
              <column datatype='integer' name='BusinessTypeID' ordinal='4' />
              <column datatype='string' name='AddressLine1' ordinal='5' />
              <column datatype='string' name='AddressLine2' ordinal='6' />
              <column datatype='string' name='AddressLine3' ordinal='7' />
              <column datatype='string' name='AddressLine4' ordinal='8' />
              <column datatype='string' name='PostCode' ordinal='9' />
              <column datatype='integer' name='RatingValue' ordinal='10' />
              <column datatype='string' name='RatingKey' ordinal='11' />
              <column datatype='string' name='RatingDate' ordinal='12' />
              <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
              <column datatype='string' name='LocalAuthorityName' ordinal='14' />
              <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
              <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
              <column datatype='string' name='SchemeType' ordinal='18' />
              <column datatype='string' name='NewRatingPending' ordinal='19' />
              <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (EstablishmentDetail)]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (EstablishmentDetail)]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (EstablishmentDetail)' datatype='integer' name='[EstablishmentDetail_Id (EstablishmentDetail)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='string' name='[FHRSID]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
          <groupfilter function='level-members' level='[none:Latitude:qk]' />
          <groupfilter function='level-members' level='[none:Longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.728688' measure-ordering='alphabetic' measure-percentage='0.135656' parameter-percentage='0.135656' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:RatingValue:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>1</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>2</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>3</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>4</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>5</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' included-values='in-range'>
        <min>3</min>
        <max>45</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 4 (generated)' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Map Final' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action11]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Filter Business 1' name='[Action17]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q3' />
      <link caption='Filter Business 1' delimiter=',' escape='\' expression='tsl:Dashboard%20Final?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='FilterSum' name='[Action1]'>
      <source type='sheet' worksheet='Q2' />
      <link caption='FilterSum' delimiter=',' escape='\' expression='tsl:Q2?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter Quality' name='[Action3]'>
      <source datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' type='datasource'>
        <exclude-sheet name='Q2' />
      </source>
      <link caption='Filter Quality' delimiter=',' escape='\' expression='tsl:Q3?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BRatingValue%5D~s0=&lt;[RatingValue]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter Business' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q3' />
      <link caption='Filter Business' delimiter=',' escape='\' expression='tsl:Dashboard%20Pie?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q3' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='FilterSum 1' name='[Action7]'>
      <source type='sheet' worksheet='Q2Bar' />
      <link caption='FilterSum 1' delimiter=',' escape='\' expression='tsl:Q2Bar?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2Bar' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q2Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <datasources>
      <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
    </datasources>
    <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
        </aliases>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Map Final'>
      <table>
        <view>
          <datasources>
            <datasource caption='Geocode (VisCWdata)' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0axvv590qlybpc1amcgp80da5hh6'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
            <column-instance column='[AddressLine1]' derivation='None' name='[none:AddressLine1:nk]' pivot='key' type='nominal' />
            <column-instance column='[AddressLine2]' derivation='None' name='[none:AddressLine2:nk]' pivot='key' type='nominal' />
            <column-instance column='[BusinessName]' derivation='None' name='[none:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
                <groupfilter function='level-members' level='[none:Latitude:qk]' />
                <groupfilter function='level-members' level='[none:Longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='701' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='51.000307999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.388382' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='741' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='50.962072999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.303348' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='1227' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='50.923679999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.305723' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]'>
            <groupfilter from='1' function='range' level='[none:RatingValue:ok]' to='5' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]' field-type='quantitative' max='-145519.9296799188' min='-166521.41315847091' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]' field-type='quantitative' max='6613913.9250568906' min='6599874.5407174304' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Business Name:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;AddressLine1:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;AddressLine2:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Post Code:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Rating Value:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#820000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]</rows>
        <cols>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='84' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:13]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AddressLine1]' />
              <groupfilter function='level-members' level='[AddressLine2]' />
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='153' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='108' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='10692' />
                <format attr='maxwidth' value='10692' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AddressLine1]' />
              <groupfilter function='level-members' level='[AddressLine2]' />
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' direction='ASC' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='104' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' value='348' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='68' />
            <format attr='width-header' value='28' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='-90' />
            <format attr='text-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='right' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='10' />
            <format attr='wrap' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='on' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <text column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk] / [excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk])</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
    </worksheet>
    <worksheet name='Temporary Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting  Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessName]' derivation='Attribute' name='[attr:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='Attribute' name='[attr:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]' field-type='quantitative' max='-139885.93866856361' min='-171664.63317812566' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]' field-type='quantitative' max='6618372.6836745748' min='6596110.3991865171' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:BusinessName:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:PostCode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard Final'>
      <style />
      <datasources>
        <datasource caption='Geocode (VisCWdata)' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' />
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.0axvv590qlybpc1amcgp80da5hh6'>
        <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
        <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='11' param='horz' type='layout-flow' w='93520' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='93520' x='0' y='0'>
                <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='93520' x='0' y='0'>
                  <zone h='74984' id='1' name='Q3' w='31604' x='61916' y='0' />
                  <zone h='25016' id='9' name='Q2Bar' w='84431' x='0' y='74984' />
                  <zone h='7448' id='13' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='9089' x='84431' y='74984' />
                  <zone h='17568' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='9089' x='84431' y='82432' />
                  <zone h='74984' id='14' name='Map Final' show-title='true' w='61916' x='0' y='0' />
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='15' is-fixed='true' param='vert' type='layout-flow' w='6322' x='93520' y='0'>
              <zone h='14960' id='17' name='Map Final' param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='filter' w='6322' x='93520' y='0' />
              <zone h='9103' id='18' name='Map Final' pane-specification-id='0' param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='color' w='6322' x='93520' y='14960' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Pie'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='83705' id='1' name='Q3' w='34466' x='65534' y='0' />
              <zone h='16295' id='7' name='Q2' show-title='true' w='100000' x='0' y='83705' />
              <zone h='83705' id='8' name='Temporary Map' w='65534' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='16550' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='8627' x='1089' y='64799' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='76'>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='86'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temporary Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map Final'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine3:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine4:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessType:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:EstablishmentDetail_Id:ok]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard Final'>
      <viewpoints>
        <viewpoint name='Map Final'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Q2Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
    </window>
    <window class='dashboard' name='Dashboard Pie'>
      <viewpoints>
        <viewpoint name='Q2'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q3' width='192'>
      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
      /wNLI079dTQc8AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2Bar' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Temporary Map' width='192'>
      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
      FI//Hw7nitHRtCnbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Final' width='192'>
      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
      DENcXFy49QE+Nny1XOJ97q1q2xZ1mGH7nT+AdjRz7efjwec7WmvE81eIHz5zV5JqrWGsxXy9
      xdlkv1rP3dDU/4uLCyc4kvGlMpTWS+aXdFaqO/VvuVxiPp8fKPgeFXxL+lprZFnW2+Pqw1/0
      +fJkiuv5sleObOT9aoMsjnC/2mC9LQ/K4+3gzMsHjTady0soOOHkX6mFeb/zaonR7mx/Eh45
      UJRXCrQvyaNOpDXidKPvr169wocffojNZuMm+tZa51ruCa+1uwny3loo1UXJVlWF6+trLJdL
      aK2RKIPYVGjF1lNrLUJYZKYEYAG7t4pQCiadAOrwiEquJIzpNq2H8yuE8yskuxAFYyxu5iuc
      TXL3nlz8ozZnWYYvfOELmM1mB/R5LPlgkLQCdbU/xIC/p5TnXCBZWNu2WK/XWK1WWC6XbrOC
      9DC4ArXCJEuxLSsMpSyJYAE8OZmgahq8upujNYeTFanReSKmKsuyp4GlGQTgArNk2jNx53Wx
      2C+Y8fP5adBJq7ZNg8hUzmJIeMXnFPwYDlm3TKQJAUAHAaqmdod2BWovRGSVZKKwifF4jLu7
      O2chQ1MjartTrw98+6ZB1JYIbYtJ+YDQ7p0cvohQvoLuQicALJ59Cdt3v7cLASkrXD0scDEd
      I9q1VY4L0Yj6c3t7i9evX7uxHUpSefC/Q/mtNbi7u8NoNOrVD6C/DsALHCqULm3OsqyXl2uJ
      bVW52CHZWACYZCkeVt3E7nQyglYKge5DF9kGrn3o+/PnzxHvNM4QkTJTImu3h0LBvhtjsQ5y
      rMORY1zHwKbFpixwt5xjvlmhbmpEtsGoWkC3lYNnwIDPnSVJX9lHrTXSNMVms+l2hCnlzixV
      qh94RzQn5uIb2q21br8EAGyDDNt46jw/fDW3CROsdrvjymiEFv0bJDlscsedmBbjeolgd+RI
      XddQQYgWCjfzJaq6weVsDK33sI3je+5QoH9RFPVOeOM0Oza+krb8N+Kjum6gdOA8mfydR71A
      EkJQoXEcH0ABauwkS3EzX+HV3Ry3i9VBOVprXJ5MHFTynQ0kO8c1BiUKj+Xw5ABeKAWrDj1E
      chmfEmk1pTU25RabYoum7aBIUZWYr1dYNgar5ASN7l8EwS0BaWmyltyC+PoaBIHb//rw8IDt
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Pie' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABnWAAAZ1gEY0crt
      AAAgAElEQVR4nOy9W8wtyXUe9lVV3/be/+VcZg6HwxlyhuTwKlIUI9EKKdGRoEQWIkcIDCeO
      Azkx8pAEiF4SIU9+CZAgLwESP8hCEiMxAsiAEtuI4NiGdYku1oWELMXU6DK8aWbEIWfOnDmX
      /7L37ltV5aF39b967VXdvc85Q+pWMwd/7+6qVau+WrXWqu6qVcp77/Hn6c/Tn9GUAMCfj4E/
      T39WUxIuXn/9dSRJ/xPee3jvobUe3KNJKbVH0DnX3w/lvff9vfCclqXPeR7+jPPCn1OenXMD
      /mk5iSbPR/NO5ed10bKxOv8cq2E9IX0z5Ur5LuHOnTswxvQM0MLhOsYovd8TFmhIz/hfSo/W
      Scty0AMYc9OcDp0qw3n8s4YV5XGqzNuJFSAL9lysEl4BBYszIDWCMs0thlSxBMyYBqA06f3Q
      YOfcHn1Jm40lWj8XnPCXd9SfBaykgfKnDStNH441ODDnnBs8C8/DfXqP0wjXkrmS6qOAxPiT
      Oo8CzulRIeC8xRLvnD8pWHHascERw0q6z3F5O7Ciz+diFfJOYUXrBIgFGGsUgIHPNcfs8bK0
      Yt4BsSRpA55458dcgnAvJhxzTfmUVgGw559yfqaw4vzG+Jn7TOJ/SjApVvT+oOzult/9V9b1
      rt2BFpAlKRLiWvN65sqVxC+VK/p7DA/eLwMXSGwkIzKVh9LjDabmUaJF81IaUh1coCS/keel
      QAdtMWUBYnxKbYkJ/Bz60mAb82F5W+dgRYVJokfzjmFlnUNjW3jv0N3yYSwMBgYANLbtBwDn
      IdZmKXGZmIOVJFM8/8AC0AJ8YhHTXlPmJpZvShPFaPH83vs9C8PzSsIhaWnKZ4wnSWAfN1Y8
      7xytLSkWnp/6+zFhC3hSl4Rj1bYNWtuO8nz1O+6mxBSg9JviMFbvHCtL84mzH2l0ThGMVSJZ
      FnrNfb9DE3cZeP0xTTOmKSXfPdb+mOk+NFGsuKamvE25amPKZAyrcE9SMHMVFM/b/d6n/6jp
      ccrVwALQd62SfxnT4rH8c/1lnrjvyctxv5D+HQNYAonTohpQshLcHeDYTJlwiQ/+nNMLnRkT
      2rcTK4k/rTVgZddjzxKqoVxJtHl6HFjNlavBADDEV6OZxpLkd83xq8foSgDE6Maec7CmNAQf
      kFT4JTy4KzHH9D4MVrSuGE3arvD3cWEFYG8A8t8xdyXcN2wO8KhYjeF2KFaaZwiZ5piQIMgx
      k/Mw5i7mslB6c83blPtC66O0Y9qdf73844gVp/e4sXLeo3W2L0P5oPz0fyFjNbdPHtVF5jRp
      8t7vvwYND4IGnJqExrTA3JFO64zllcxsTCtI2oz7pQD22ie1g7czNgGlvvXY3OJxYxXLP4UV
      z3MIVlVT9dPaMaz6+4S9h5Er/uX6YbDi+FNaCf0RA4tqE8kni10fotXoaB/zP8N9fm/Mrx0T
      mFgbQrk5k2yJPzqH4OA/LqwkOnOwCvcPxcp7D+c9gPiryDF+xrAa64c9q/IYseptejD9EjBz
      fL6xJI14fi8I21incDM6pb258MUGTuxerL1jWI3xNCc9Klacj6lJO6U/hZVSCsusQKLNoE+m
      sKrbZg+rKZ7mpMchV4OlELyxIcU+oT9sipkj2oAAEBW0KaBiEyNaZkpwDqElWQaJx28mVuE5
      F2RJUGIphlWoq0hzFGm+R0tqp1Jq99FsmCcIJi/3OLCSrFhMrqJzAOl3zKzFyse0o1THVGMk
      HiiIPMVM/xTvIfEJ7yGDTvKvY/U9DqymaE75zIdgdTU44u6O6DrNWG49Fyv+nGM1ZRlpe6Nv
      gWIVjXVG7LmkwcK/mIDTvDF3Ywx4WoZrR5pnqi0xQOcM4G8WVrytbxdWlEbVNGK7YlZg6vXk
      t0quBpNgPuEbG1lzTRVlRNIAsXp4A6T6JX9vig+aYponJkQ0D/dhpbbweqbSHKyke99srJq2
      gXV20O6xlCXpHi+PghVvT2wjEm+ThJWmGca0v8T8XDeGaoBYZ3EfTeLjYVwBCkhMk09pS17v
      GFZSB8f4lgb+FFb07zcLq72+EuqT2hRSoo3IYwwricZcrCSeaV2cj4EF4NdUOAKB2CIyTmPM
      BI0JHb/mSdLW4b602ynQ4q/COI+x9se0FO+Qh8EqNtDmYDVlpSg9zvOhWO2VVQpQwzKxAZdo
      M+p2PipWvL2HYjWwAJwYJyJ1+hxLENIhXyXDXwk8yd+Vli6MWZa5bokEnESH+5+Su3EoVnN4
      /JZgNcIXz+tG6DxOrKYSpUexEi0A/4gTnnOtIC1tjfl2XEPOYZj7mDHafCeQpJWm3AVJ+87h
      kwsq1zacl0OwimlEKT8tN0b7UbECdsrfA/7KEIzweUXn7cRqnAd5gCul4suhpUpjzMRGqqQ9
      KSPSKB/TBnSkUzCpH8gF+VCB5rxMaSRaD19GTcuNme5Q/lGw4jy/XVgFd2WZF9AYCrPUZo8r
      KzAlV4diJVk5zouEFc03GAC8E2IaaExb8mdjFoTS40xTl4IDFzpBahxvj6TJJEGL+Z683VJ7
      5mogfv0nFSutNLTS/SpPKVEho5tn5li2uVjF+i3GC21T+Lf3IUwaOWMdPOVacLoxU8bpT/nA
      Y/7hofVzAaP3pjQN5+mbhRVN3yqsEm32doZJyrF1FhnSvXxvN1ZjLmBIex/CaEVKqf5zOB+V
      4XcwtZL5j6UpmlPaIeY30msupHO0KsdCchNi65DmtIuX5dcSbzGa0jICic4YVjGXYy5WRuvB
      uiCev6cHwGMo8I8LK5okmuE+b0f/bIxxniR/NFR4SBweSo//piZySgNyQYkJpVSfJPRT/AXa
      FOQYHYoT3aU0x2zH6PHfj4oV5+VhsMrTbLAuiNcZ6NvdAsIprMLzuVhJ6RCsBpHhQmhEicDU
      smDa6DnPQmPndJ5Ed069Y75m7P5Y22N+JxeWP4lYHUqP8+W8x7baDqJDDBQFAK0UFmk+UB6P
      Ayv6nJcZU+ZKqfiXYO77SgRiKeYj88qnLE6svph7MuavSvdjLoBUd+gs+pu2RXIfJd5j7fpW
      YxVLU1iF51oppEna7wDjWIX7zu/vuIvxHhP6MeGfazFCvsF3AN7RU26N1Dlc8/Jnkh8qNXgM
      CHqPmzZafkpzS+2gnUP55R+PprCKmeE/CVhNLVyLYZUlKYzWqNsGbkcn0QZaqcm3RlIdlHZM
      QW/rEkabfr0Rx20KKzEu0JyRxM0Xp8M1pMSAJCQSPxL9kMJHOx7hgXbi1NLmh9WKMXo8cY3I
      af1pwspog0VmxDaPtY/ei2HFt542tu2CdLUt6rbBUbEUy41hJU6COWg8DxV+Pmjov7GGSuZt
      rm9KR3Zshh8zs5ImmUpj/riEFdeSXFH8aceKtp23NdBzziFJEpyenvYT3hhWtG7Kg8KVdS7S
      LNqGMYwTnjkwJ1VIn0m+4KMIFmdYoj3H7HPAYgDyzpXql+rh7ZbMNaX/ZxUrni/8pYrTWov1
      ej3YYiphJf0GgMQYZD6F8x6JuRJlCSt+vkDIJ+4Io2kw4mZ0FK0glJnb2VwD8GCnY508xVsw
      /5zOFD8xdyfW2XMxojRp2W8mVrE2PA6sYvXwOq21o+5brGx4Fnz/KRoDt4e6fHMaMtc3ppXG
      GOIfOMa0SywP1RYxl4FqYH5vjMepQSXxIdU7Rpff/2ZixYVIwioWumSsTQ+L1Rhdyf0+FCvJ
      ktA8e5PgKQ0We85B5I0LGmsOHdoxc0JmcEHn+WIDWhrssbZKnTmlKMY04rcSK/5cKjOnbVOu
      Fedxqg2cvkTzcWIFCOcDTHWMlG+scklbcy08Vg/PM0e7cvNPr6l2mXIFKL2YZZyDFeeF8sxp
      jGEV443SfNxYTQ1WiZ8prGL1Uh4lGXk7sBLXAjnnopsMYhoiEJR8rtjJHTGweF2xUIJ8NAea
      U+YYiH/2j/FB283bFluMFtOKFCueL0ZrqnPfTqymvAKpLn4deJuSK6l+ycIHehKOh2AlvgaV
      GhL+TplQmo/+lcpyl4CncE+K5UPLjH24maMNpLUxY5plTEC4IphKMax4nm8lVjF+D8FKkpWY
      XM2pW5IriS8pUSxGN8TwAnNMKk/S24RAiwvhGNOh7JglCXm4ZuNlJDqxThhrswR2DKsY7zSN
      YcUPrKB1xKzPFFbh9zcDK4nPx4EVp82xovclmqNrHeb4e+GvpJliPi+/R5NkCrmGGeMr1jG8
      06fKxGiP0ZnigdKYsir8nqS599bbqH2feG7baJ1vN1Zz5Ir/Ax4NK4oNxWf0OwD1lSR/LqYJ
      lFJ7k0yuLSW/jdfHY/DTxsY0y9igogBMlZHKT+WhtOdixdsz1lYpT7iOvQl5VKxiz2NpDlaU
      N4nfqTKPU66iA4B2phQwS/JTaYVSZOQ5O5d4AyVgpDj9hwgp5ZPXH+NrLt9SuzlmSimUdQWt
      NVKTAKpbTgznANW9mTikTs7748Qq5mY9ClaBXix69pggP265GpwSSdPcfaSUgbnvocdMVBjR
      Y3UeqsF5O2LaNnaP3+d5xrAKv0Me5xxaa/uIyXW7H2IwT7N+p9UhWHHc/jhixTW2VCfF6lHk
      irqFMbnaC4vCRz6vSCJOlwTHTgCRLIjkWvGRH8pKWoHTo3zFaMf8SZp3LN8YVh4ebdvCkuND
      u7wKJixEg0LV1lFL6r1HWVcw2iBP04Ox4gLzuLDi1uBhseLPOY+SXEl10Pz8/hhW/Fp0gShQ
      sYEQG72SRphzjGgsZowEulQv9wdjqwr5day9kpaRklIKrW3RWouGbRBXSsHvFEJr5bIx8++8
      w7auUCQZjDHfNKzGhPlxYDUlVzGe58jV2Fw1RndWeHSJgZilkCqTRqPUgeEe12BSaO0Y37zj
      xrSRpOVinTeWtNJoXb1XD69jjjsScFBKwew2kYxhxdv3uLCivDxOrHiaGqhj+SSZPBirQ5nk
      71glv0vSttyNGWOca6QY0JJ2iM0dAu9jVuFhO1QphTzJRP7GOnHgPu2uzS7o1CLNUWT7m83H
      XJVDsAoCEEsxrMb68ZAkaerYM1ov5ydcz1W8HKuoC0Qr4ZOJOZMLzmTMYkhJ8vclWpyuxIek
      cXknTmmaqdQpgnkTxKkUgk55vL1Y0fI0L7+eUlyHJt5H32q5iloASatImlaaC8TcJfqb5qf/
      JNpTWpT7s/y5pIklcznGw1jy3veCO5Znzj3rHKpm353iPB6CFXfJQnoYrKjAPSxWEi/Sc36f
      t4e7Yg+D1cHBfCSzIjFF71EhnTNipzZlc34k8x7Titxa0IEjaZ1DtFxGwspIOEnCRJ8bbZAY
      g9QkjxUrbgE4DxJWU9b/UbGiPEoKaUyueFn6/FCsJifBMZMl5R2jw4WUJu6PxjRW7B5vPP9N
      O4+X566TZOXmukqJSZA61x8KJ/EupdQkXUgRpYAJDTkXq5DvYbGSyvP+fBSsKOa8D3h5nnh/
      jtUxhdXklkhOjI5UCbSYhpa0LmVq6oPP2L2xBtL7oZ7Ya8RYu6XrWMrTDM53H7vGsKL50yQB
      PHYhBPe1Lq9/LlZTh05ICoHyK2E1hsOhWIV8MbnivErpUbHa2xQfE6IASEwDx7So9FxqBM8f
      S2P+Zuwep0c/sNDXhpLrMjY4wnOex7nx9+Qh5Ul2Fc8GV3kfBiupjj9uWElpTK5CvTHr/Chy
      1Q+QqQyUmBQYljMYG8WU5lyBj9HgdMI96T717acAluqcY5Y53TzNRk24UgppknSaf6Sd0rMY
      Vvy1ZcgbU0bfCqximDyMXMWsFudXStR1is6gYsBRIjToK68gxgAHidLheaY2b/A14dyCBdrc
      x6XPx1LQTpxviReaEmOwyIu99gBAmiRYZDmKNJu0EpJAPSxWY9p6DlZTaQ5WYwOL8yK16WGw
      4m3mdCdPiOFMSj7mHM1Dy8R8yrGGWWvFuqRoAJxvKU+s3VIdkrnndfFnqU76t0IAoKCQJymK
      NIfRBsD+Wxiexgb4mHbjghzSw2IVczMOxYrWQ5P0+2HlSuJ7TK7EARATlMDUmHkb0xa0/BzX
      gjYixJWcM3i4SZz6Ws3rk9o1xhunp5SCh0eWZH30sjzLkJL4lWO0KY+HYkXb+ziwAjrlI6U5
      WEkWfw+rGXI19tU6Vn5O3w2WQ/N1JLHRNmZKD01jtGKagSceyIl2pkRTMosxTRHTHnO0MQBk
      aQp4j9QkB0Wi4Dxw/rhm5rzMxSqkGFYAeuXzMFjROmPlpPISL1Plx2jFnml6M5hA7o/FRteY
      uZN8yVinUB6mBEPq4PC6LuYfSxNEyh8XyjFzT8tIPiYvm5oEiUkeCiveDomnQwQK2MeK1/vN
      wGpK48ew4rzMlSsJj5BmBcaKaRrOTCgfAyemNaXrqY4dsxaSJuEdN+ZDUzqxd9TSPcqbVMch
      WEntpTR5nVNl/zRjxeVqjG9+b+AChX/ch4zNpmMaLWayaRqLFTTX7RjbChfTLjFeaaLtlkLA
      08HPJ6oxqxALV3IIVpyHsbXuMaGQ0hhWkhvC+Qg8Pg6sQplD5IKmMUxGLUB4yA+CGLMKfN1+
      zKxJ2oHWGWuMRIfmk/jjplfSlJxP2tZYGyQac7GSYvI/ClZTmpnzGf4+LFac7qFYBQzmYAXI
      0cmDaxY2HSmldosPPfTuEA6pXqkNNO25QNQX5OaEX0taKaZtYgBLTMY2dQQa0g4mWn+4P8cv
      lPzJ8Jt3Ar1H+YthFdPwlNeHwYrmmYuVJMgPg5XkYkxhFX4DD4cV0OHdtG2/zoqmRJt+78SY
      XEm0B2eESVpKcoNiYEnCOKbxaaJ5x9waChw1qZIgz9GQVKA5r2PuBV9kxQewVD7m5jwMVlP5
      3i6sJFdmCiuq8R8FK+uv9pvTf62z2NYlrLOjA11Ke2+BeIP7jDNej1JmY76iZIalfJKgBT5i
      Gk0qH6uLds4U77yOwIfUrjHAOd2HwWrMpeMBCf64YUWfxQZEeC5h5Zz8MRQAnPcomzp6HGsM
      q+g5wWNaZk6jY6ZdSvzVW0zQxgZeLM3xUekrwbEPLjE+uGadwmFOnjmaneebq6Ri6e3GisqV
      ZH3GFEKobwqrbV328wT6Rby1tou9tEt9JBNOjPt59D4HfkxrSG8EYiOTh/jjZWI8cg0yVn5M
      EGlYF97RnA79KjpGW8Iq9vwQrLgmi9Gk9w7FKkYr8Br+HorVIXIl5fGQv1Rzd6+xbd9e5x3K
      psK2LrGtS5RNPTiqdXZUCNoIei3NG2hjptJYp8WStOhqymrRdIi/G6ub1svLSh3IFcbDYtV3
      rBs/b5fzy7Hi0f4oH5zPqfY+ClZchmJYBf9/qr0A4Hx3cmTrLNqdNQh1t87C1haLLIdRRt4P
      wIEZ0wxSMKwp0GKCMMcUSr8l8Hg+PmB5PsoDv6YCIz2X2hUTCK4tD8EqSRIcHR0BAM7OzvY0
      +uPAiuZ/u7CS+B2TK0B+vx/DSu2Cj3E3y3sP7CyJgrAWiDeeF5ZAlUYvB0nqqDlacipJ4I51
      KP3L643RnLIqtOOlvPReLMTfXKyC1i/Lcpb25+2k/NJ7Upsk2o+KlVSHpAy5XAGdVud1Smls
      G6dUf3Q16BwigBx8lZaJMUxHd0xzSh1A/0n8BSGi/3g+KgRjcealv7GJWCzFXBXeBs4fpxH+
      np2doaqqqAtF+f/jhtXUoKB5+XcWx9oyZUEkHkMb6YsV8TWoRET6J5mtUNmczSx8Qw0tJ3Ue
      B1/iVxIsAHtuWoyvWD1UIKRlDTE6dOUlLRML/S7RktzMGFbSIJIEnJbj6RCspDoeFitafsCX
      iiuHmFcScE2TBEabAW7B/fE+EhZlCjCuvSUhpSM1pqn4a7tAO2YWDzXZMaCoNqA80n9Sfqk9
      FC+e3m6sKK+UhxhWc7XxIVjF8ksKLOSdgxXl1wofy6T29W7NbtAdpQluuS1uGgezi7ZNnwPY
      PyRvjnnnr+1iwhIzrTGzzPNKgs2FJYz4GP8x2pIrwMtJroi072As8XXwj4IVvZ4b/5OWowNj
      DlaSuxHDSqr7YbGidQHz9jtLMlXAwfgWWbtFstvTAGCwbmg0MlzsQ0dMS3FGptYT0b+U3hhg
      fDPH2IpQvuadX/N7XAjn+rDUcsVoS4MghhUX1rHB83ZiFWtr4MV7j7KpUDbVY8WKlldK7cLN
      x+eXNNFyF16jTJZYp0eDNUR0AIzGBZryU2OamXcY71gpX0xLSuDQMtK1xPNY58Q0mmSNYolq
      zZC3bpsu4BXGsZJox96u8d/fCqy871ZlVk33qjFEsouV4UnCij8HAAUV1f68vbwt3eBsUEEB
      ykYxSziRmEaRmHDOoXX2qlEAlNJw3kMzv3HQsAnNxTtjLB4RpUM1N387JQEntY37uxybqboB
      oLUWVVMjT7M94adlDTHLsUF5KFZzLSvHSgHIXI1GJwhBw2NyYJ1FWXdvooo0H7gXh2IVa09r
      WzTWdsHCvPxShStVer+/RjfpDXm00p08uY7mYD+A5BPSBkk+Wt02e4woAFlKgj6xEUobFNNW
      sUETrqdAHOsASneObxqjRxPFoGwqAENTS5PkGlI6c7Giv51zgALKuobRpo9IIWElaevCblE0
      a7Q6xUV2uudmUH47+ikSY/o3LPTN0SFYxdwy5z1aEmJyDKu5rpdSCnmaAv4q354LFCMwEH4F
      NLZFsxP+Wzef3FXicHZxgZpENw5lgavN1W17dZIKrS9NUxwdHcE5h7qusd1uZ/HGGxrySp0Y
      fk+ZVeme5HtK5bIkRd02aJ3tDsETeIul2BKFWLmyqZCaBHlRIEkS1GdnyJJktA5JcJwy8ACc
      HkbfiLU5T7vzEBZ2i7Qtsc2O0aj9tk5hFWvvXKykFCuTaAOthq9lB/sB6D/OPCXsnEe1W3q6
      K41FUWC5WOKJ6zcGJjHQSZIEx8fHA7PP6wqnoRhj9ja9xPiLmfwpEzxGm9cjYcExos9Tk8Bo
      jaZpgOkxO8sKUV7LuoJ1DmVdobUW1jscLVddtDkSwSGGlUhTpTgvbmKTHO19vIthBQBpW8J4
      i5SckBNrz5QbNweHmFsmtYmmxJiBRxL+7u0IC4mvA6GAaHS+lEM3AM4uzrEoFgA6LX7r5pO4
      e/8egE7rJ0mCxWLRaY48R5ZdnabSti222y201sjzvGcsaP+Yi0T5nONOcfdNWq8Sq0MaTGNY
      AV3cT53tr4Pn6dBOd76bd7X11eaPqq5x+603oZRGRizOIVgBgPUA0Cmi0CZjDNpWjnYNANvs
      GKmrUZrFHl0JW2njPHXz+jZj3LenacozSE2y546Hv6MnxPB7dBAopbCL5wrO1/n6sm/YcrlE
      mqZXzJDr8DtJEiRJIk5cp1LwI6VYN2NaT2pvKC+F8IiBPMd1mpNig4xrYq008iRFRY5XLbIc
      qUlQt010iySnG3Db1iXyNIeJ7BhrmmaPBuW58hq1Xuxk4TCsxtycse4/zOfvjpyN8T8YANJm
      5HDtfffO1+hOO9DtZ541PDEGzUwhUEoNLIL3HpvNZvBeOjZJ5JPzOZNj3iaaqDbiwZy4JRwb
      RLwunl+ahI7R40sTEpPAeo+mbZAlaT/PSE2Cqq2Rq6u4oxwrPgiW+ULkN4aVaUosvvqbcMUx
      Nu/5ONRjwIqnLn98gSFXSt1fD6BTysZ0p/WESXooI/X5YADwCGA0tc52a6nZp30AaJoGZxfn
      KPICaZL0GyGu5gzjBx3T5JxDVVWz8tLnvHFcsHj9sfUu4XdskwoddPQev55KsQ6J5eM85rvv
      C8G0h/uZSeG8hxmxTHuWElfrY2i+cE2xMpsHMJsz6PIS+t3fBhdeK0awAuave6LJuSG9Ymel
      QrLOIUkM6qZ7EZMY0x9RNT6whkn5LuHNN99Esnt7QEdYcHXKpoL1rn+/r6B2hzm4fq1GqMR7
      jzxJke3ChAc6XENL98MbIJqH+66Sz8gbyN0Hni88i7ldc10nWRvJKeST5gwSv3MGSIwv2s65
      WMXy0kWLyjvkd16Gy5aoTp+Ktpm7onR/slIKt2/fxi/+4i/iu7/7u/H888/vlW9ti21dAfBY
      ZIuB8If6rl+/jrOzs8mtmWN87c0BKBBUUDLyUYeb0m1T4aknbnXvocsSdx/cBwR/fKwzJXNN
      74+Zc35Paii/jrlVMbBizylWvAwtOzZIJOEvXIW82aBMV6j08AjWKU0awwoAdFsDWqPF0Ofn
      3yZoWwYDCgrlrfeJGj+GFR9g3nv8/M//PD7/+c/jrbfewo/92I8N+O40eoI0sdBK9/MT+twY
      A2st7O4kniksYpZ08CGMC97gGeTP8957wHusNxscrVZYFAsYfXaQuQt18DcEU/4xB5dbGAoC
      LxvTuBJfY5YkRp/iE/Nlx+pObQXtLRJb7w2Ah8UqqS6xfOlX4ZMMlx/6Xjh19b0gFluIYjDl
      xk5hdUUH+EsfeRbvsfdx/LFPR93IPMmiWDnncH5+PiljFCtOZ2AB6DJkPtroWxapoXmSIazZ
      9t7vlkIMG88rlpiJvb3g2l5qEO+gmEYaC8cnlY3xE8rEsOK8zU0h7zY9QqZLVKYQ8XsorGwL
      WAuFZvB5orVtP1mk7XkcWEmvPU29xXtxifd97HlsPvg8gsPLsZoS7jF+5mK1FxqR/h7TkEop
      tNZ2X4PhkWTpqCblKdbYmAmWNITUoKm65ywj5rTGtdm+L8/LHGIJQ2qh0ZrlnkBTerH6Y1i1
      y2vYfPh74HUCZ9J+EPDzjcesgpSm3DvOq0sXaJ94Fso2UMUSOVrUSMXyh6SHwWp2VAjJpCvV
      ReUK2qKbDCP68TPml0uJDwjRHx0R+Jjmjfno0r2YSZ/SgLG5yJh7Rp81tkXCdjFJeRPl4XYv
      I8Zo0t/t4rR3W6mgPw6seNulpJSC8x6bd38cCTyOyrtdufw6auxPdGP8xPpgTK64knDOTW+I
      CRU5151gvq1LrKst6qZG3Tb98/Vmgzfu3Mbrb95Ga+0es1yA+L2xvDH/nt6bes7bE3tO78f8
      WSAOtCT4c5P3XQCnum2wqcuB+xDobusK3nvkrsZxeQ9HzXlfr0e3BBsChgtX4YamzgAAACAA
      SURBVKS8h8w3bxtWMeEP9+u/+5O4+Ot/Bf73XgQAOKhuDZLScGqetRnjeY5cKaVQuAon5V0U
      vhnuCY5FFvPeY1OXqNum/w5Q2xbWkcBH6Pzf8EqqtW0/EIJvPOa6cC0X+8v5C2Wlf5Q+jRIW
      q5/6zbFBN4YVtzqSWyK1OSTr3GBzSdlUaMgXX6UUEmPQ2hYKvnsr5ztcrbPYVNtujZZwpFGY
      VKe2/pZgpZRC9f/+AuzXv472t/9l117vcZFfw3l+A62/yh/DKlW+E1oy4KTYolIf0HuJraC9
      Q2rr/e8AlHFK5LLc9GYj1liuBRSARV6IHyi4hZDWqcT8OYnGnDRGT6pzbMByujSFtkxhNSjj
      Pcq67MP30TJFmkEr3a3A3S0RPl4skXqLrXXw6NbsVE2DLEmglUbrLIzWPfaJt8hcjcoUvbBx
      fiTL+zix8r/7O3C/8ctI//2/AX967SCslFI4re5Be4dtdoxS52Ld3EWX5CpVHpmtUOl8aAHG
      mE+M2fNt+Ugr8gLXT69dfVEGsKm6TqVmUmKcL4sdG2CSdnrY+QAHjNYfq2uKL+q2zU10dS2v
      u9y5njWxBs4DNQysx+6tm+4HCgAYpQfRD1plsNYFPACjhP7e/a7aBpiB1VWxcaxo3uWtI9z4
      zvdhcf61nuYcrMIzq1P44DaxQXiIXLXQ2JgFWqh4YCz+OzMp2t1HB0kglFK4dnKCLM1wtFzh
      crNG0zSdZqsqLHbx22ObxPlgkp5LppYDwUc9b1PMCsXSlBBLWNEvp5LQcLpN27mTUlt7XkkZ
      1b1zhtIaWbL/9i2muVPlcFQ+gFcK5/l1gGClduVyYRMTpxnDZUyJKqW6tz7wULuBPBerkNbp
      MVSKbg0yk5fYrkHuAvHBK26I4R+8AoOJSYZ+/8BCJN3XYtWZ49PjEwDd8t3bd+5g21RYpPls
      zci1A9U0PE/su0CMbshD802ZcinxumPajLsK9No5h6odbiCifIj8sFtc4KNuRHcF5TsSYVAd
      gtUctydGa/vUC2hPbqFdnkRpjGIV4XOuFZEs9J4LxAWOPk+NgWcv3XoB2nvSJa00bl673i29
      bapZ7gQffIHxWKxI6a8E7FytNfWMYxXuUf74oIi5UjRagWRNePLw/SvSmMbjdQWsGmVwmV/H
      RXEdTjioeww/iT8Jk7H7XmnUq+vwOhHbybEaq0up7jvU2NwBkBfiUbnaOx8gZvbKuuo2QmN/
      oABdKOy79+7urR8HujX/N69dh9G630McaNCG0r+8Y+jvYPJ4GvMFaRulezEAKU/87QgXQmlh
      XUyLhmet2w8hHm2TB4qk22sdw4rXRd0DAGig0fp4wIKpJClHymcMK1qe1xfDivc5L5OYK0XA
      6XjvB687uTcR6pl8+Xql4THQ8IFIog0WWY5FlqOqK9x9cE9s9NHqCDeu3UDrrBjqgv+WQgFK
      f6WVgLxM7PmcxM3wmLvDLYAEOE8hpMiYZVRQyJIUq2KBxAy9Vg8Mlp9LtKirCADJ+V2s/vZ/
      jdXf+++hd+HD06/8Dhb/6H9BcveNQRvGXCqO0xhWvKzUXglfKQ+3vBJfSikktt697rxaXr+3
      tyJWmP8t0gy1Uv3pGyEyAA1/kiVdRARr7eCVakhZmkLr7nVeLizwkhIHgWtZOnmSjgSKadUY
      wFMu2lhEB4pXkiRodmvVY4MY2A0AqC7GjuBEGm1QpPKiMKCLPOEiAz6Glb79GvSdb8DfvQ29
      Poc9vYns5/4vmG+8AuQLbP/tH71q7+YCxZc/hzZdwn7wu4EDdu3FsBpTCJx2rC+l5zyV2RFc
      m6Ay+V6+8Fs8JVIaYUp1WigsmgpvDmie8IFiU25xcnQsN8p7tN4h83KYFamh3PRJAPLXXeGa
      L1WmdDktfi9WF6cR7gWBc84NXMFYG0PKE4MjpbH2GltSzmiNIs3FMpxHzvsY/+37vg3VD/11
      +NUJ7OlNeO/RfPqHgN/+FTSf+J5BWb05R2Er2LbC2jbwOh/Q9+hewR6KVczVpom3cdJSBjkE
      sKofAFC4zE667T5Klqv+Q9idO3d6rS1pSKlyqWPqtoH1Du988h17ESDunz3AxeYSgEJGNiof
      kmLATYETozOHBhcwSci879ao53mOsiz3XLOYW6aUwlFzgdRWqE2Be8jgfBcOPOyCksrMaWsM
      K60Ucleh0SksZMXRJ+eg3/gqXLaAevLZQd5qtxwmS9K9vpzCaqwtHCulFJbtGqmtsMlO0ZDv
      AFI7UzgcV/fhAVwWN9D4uKXZC4vCGyExNma6siSFdx4Pzs8Gmvdys+4iP2Q5FDDYWjk3cW0S
      c0OmfPxDhJ/WxXel8bpXq1W/nzmGleQbdx94AKs7pVCkOZZZ0QfWivm5c9vI+S3sFov6Aqv6
      fJKuMgb+XR/YE37v/d4XftrfY1gdKldKqd1SDofENaPtV0qhVab7WpydoJ2Y5u5FhqPMc8ak
      AUI79KqhwOVmjbptsFosu3fddY1bN5/AKbowKhfrSzjvBktx6QQnNsL5vZhvzOcEYwNDMrF8
      siWdd8WxKstyUJbnN0rhqH4AvzPN4dCHrSlQmiJs6xY1sqQVHxYrqxJ4KFh99dGLz6ViGDnn
      4OHRtC3qtkGiTT8xPwQrqU28rr4t3qM1OZR3qEwBMAw4DkopVKborDB5JmElxgWKCQwlEAMK
      6CZudre3t65rHK+O8OSNmz290+MTrBZL3D8/Q20bwGPv1R7lhyd6P7aWhPI2ta491hHSPUkb
      h3tN04g8B6w0LIxru+UI3sGBhA8X6I9ZZI7VVNuAK6xKGDSLm0GOoosgaV3Wuc4128WDVbiK
      CxrKGG/3XCpOZ8pCB1eStit3NdJ2Cw8FnwHSByda56q9RGJrrLNTNBg/r0w8J5iDxvNwgt4P
      D2kOr+yyXeSCNE0HNJVSSNMUT964iXc8cQtp2i2ziDVqrLFcU08NorEw3jHtSXfD8bolrLhF
      CX9bGGyyY2yzE7TKiDSkNmewOK3uYWU3o/5/THglrJzb//4itcf7LhL0ti77lamLLMcyL/oI
      gEopLGyJ4+o+Vu1aXNTILWwMq0wDJ+U9rJrLPp9VprNYJkWk6QMM0nbnLvnuI2O6eYDlK/8f
      0u35oE5AOCCDMsdBpYIuATz4vXt3vcgKnF+c4/Zbb+Ls/GywVDcI1/XTa7Be3pQd03QxP5ya
      RJ6P88mf8d9jbQz/xsIISliVKkOp0gGNKZ82cW3/PlsSJqUUDDw0Hj9WjW3hnEORZljmC+Rp
      Noi1c/V3tzwbMs2AB1WyElaJa3bLtqs+CINTGuvFDazTk2Hb6hr2n/wM8NLvDdq0zk9Rpkfd
      ak+tkb/xZaT3vo789lcGbhMwcj6ABNiY6eJle7NoDArdLc+9XK9xsVnj9PgYRifAzus1xmC5
      WGC73SLfhVIJ9UnakWt9DqiUpOhxMXPMXUEJj5h7MhcjWk4SCkqnMgUAoCVLCKjfnsDhqLoH
      rzQu8uuweDiskvUZfJqhTYseq9QkgBniQlO4t9UF2jxFy1ZqUmz4tUSv0hlUegSrk37l6nHZ
      hdnkSzjaf/aPsf4f/wfo4yOc/OOf6z2jRiVoyAfD+tbzgHOon3wOwNDlE8OijPm5vPFj5pg+
      S7RBknVR5TabLay1/es+7z2M1kjN1as0Sfj4Mw5mTJBi+cf4jg0OzpckWHOwivmktJ4g5NZ3
      E2UJi93Njk7Ees3BKrv3OhY/+3/A5wus//J/BquyPVqxNimlut1oMAP//GGwch7Y7gIBeOfI
      dze/d9aCefez0EWO/NmnoJoSPi322g4A9dETaD9wq7PWLCbT3iR4SoPx59zUcfPMwdBaw+w0
      i4cHPPoDNWi+QIN/uo7Vz3+PWS6qRcc049QAjGEVe07pScGxYuWn+GjRLXLzULsAt3K7Y+1T
      SkHZFso5wLawtgWEkCSxAfx2YaWU2u0auw5ja2Svvoh0dQpzehNVsoD7to/j6f/2v4LSCuuI
      RQ6J493Lle9S/yEspnkl/3xsMzUHT9oSOdeCTOWT6o/RoD5gzMXidLmvzOnFyo/9pmUeFau5
      +WJYaaVwUt2Duv8mNqsnsFleHwTLLV7/EtK3XkX53CfQHD/Zl+N0A+9vB1bF3T9C8UcvAlpD
      ffC7YJMcl9kpVHkJBaDNlg+FVXQSPAVizKzy52NuwZjfTMvEFrzx0czLSXWFRAfvWHtpXfw6
      0JX4m+rwx4kVvR/DKoNF7mpQH8WfnwO330BP8toT8EfX9sIQJme3oZsKycXdXhnwtHjt93D8
      hX+O7OLOQVjFLCB9rpRCc/oOtNeeQvPOF2BN3lkA52Cz5UD4D8VKXAsUiEi7bKZcHUqHarOY
      yYxFgaYNkWLa0+ux9/xzNC+NBk3byMvza84Hv3+Ixp6DVaB5KFZaAavyDICHz05R6xQoS1z+
      p38T7q07OP6f/g4uP/pRONfCq6SfUwQ65XOfQHJ+B/XNZ0U+u0HyJlRbI7m8h/r4yQHPU1jR
      ugJd3dbIHryO5vQdsGkBlxZYv/c7GVZy/4bnvH4Jq1lHJEkmbSw/fcYbT10QLoSxzpXqig0G
      SYtKPIzRpmms0+ZgNUWfPn9YrGJCcMVTt9xC+/Yq/Ij38E0DWAtvW5RtF/m7yAShKpZIzJNw
      GqgZr0CnxLbPfweSi7uobz4r8nGoXBVf/32kd1+DOX0T6/d91wCXgAGvh1r0uViJb4Gkaylx
      sy1VMuYKSHMInpdrkpiwr1YrtG2LsixHrdYYT2N5aD5Jox2KFW/Do2AV2sd3P/V0AVxmJ4Da
      hR33HmqxwPH//L/DX5zDPftsd6pl0r2C1q5Ffv91tCdPwGZL5G3Zh1Wps2sir83iFM3iNIKV
      R1KuYfNlF8hrBlZudR3+/utwR9cfG1ZUofQD03dpMAnmAEubzGONoGW4maRlY+aP0o6ZUV5e
      a41r17qOGQuXzd27WOIaeMo6SLzFOoemx4GVFHtzDCuJVtl0Z44ts+79/+IbLyF74yuwq2u4
      /OD3IPEWi3aN2hRipGqpTTQVb3wZ2Te+iPbmM9i85xN7Qhx1heDhuxeFj4RV4Ev6ENdLwdnm
      Eueby36LnvdXXzmljSY8cc0vacmxyWagzye0FKyQ+KIq76/OFJM24ki8Snzwe1LdUqIBwcbO
      4KL1D7CyDbyzD4UVF3Zet4QV50XvlmWEvHZ1Dd4ksEe7vQLQuEhPxCjVXOC0AhJ0/nmfz3fv
      8MFOfOdY5fdew+rl30bSdlbcdZL/yHIV8khKqbcAr3ztVejdSXr81BHJ7aDMzAluFCod075c
      844lWsdisehPmCzLUtyXTOnH6EgaU8oruWOx/JNYVWtc81tsWofm5KmBEHOsvPd46623cHx8
      3B8oeAhWvB/dTjA3dYlEm/7oUwCd9sV+34eUuQaL+hx1usTWLHpMjutzGFejTpZw2qDWefdF
      d3sGWxzDQZ6zaK1x/IWfhWor1E9/ENunXnhkueL9JNZLGeCNjAFJwaQVU0vh/HBU8lEPyCOX
      m2vJsnAeN5sNLi8vcXFx0a39yHPRYkmuAM1H6+M8SHRi9+l1Bovj9hLpbmEWx0rtXkty1EOU
      jWBZjpoLHG3u4M7rr+GLX/ziYIHeXKw439ZaVG0tu7jCkUkUq8TV0PBILA/p0g2qrN1gUV8g
      t1t4AO3itF/GEAQzVQ4LX/c7CeunP4D29B1obrwrKlc8cR6BYbhG3naO1d5rUH66eUxrShXT
      Ssu66vcNU18v5idLsX14A6XByf3Jouj82LZtBwdy87xSe2Ltkn5LiQ94pRTydrvblO3RpCd7
      z31xjPt1Cp8l0Du3prZNHyS3bS1OVytcszWU0bi2XKBOChHHQ7EyRqOqOgFWe0NwX/CCUCrb
      ol1v4I+O0JgrSwQA6+wU2lvktkTalrB63yUNeVfVObS3UGm31KN68jngyed2imHIt9Qebhkk
      S0H3JUtY9dwZbZBnmbhBRTIvXJgHjfMei6yA8+MH0cVo8KjIkoaSUvCLjTFYLpe4uLiImnBe
      fyzPVBL9StUFq7XWoTQFFHznErir0xQHOGRFvxGmahu0u8ADiTYwqUbdtrjIjpHC4V3vf2J3
      Ntv+t4NDsdJKIzUJmraLOUo/gCUKOCrvwymz21d7lZa/8g9hvvEVVN/1g2he+NcG/r5Dd+p8
      m6yg0qOo+wwArUmRtq4bJGWJi//yv4DfbHD8t/8O3PFJdJ93DHsuVwOMBcvoHAmPHja8SwLA
      3ZbYM8JZp2F29ELwJ84kZYaOzthm+ViitDabTX+wMweMm0YOyJQvLaXUt92eXt/2dMIBb2Vd
      4UHd4LbLsHFqr0OX7RrLdtNrO+tsHyIx8BlcnbOmxQWSvY0zkmKai5X3vjtHdxdxmsYeNb6F
      9hbG1Vg1Q0UCv3NmJvCawtNDo0mKbpXrvbuwL70E98rLcK9/Y/IVefhNlQBv3/HxcT83jJUf
      PSibm0zpb8jP3Qt6j4ZOmQQlYqpi5bgWb5oGZ2dne23hdcQGwqEpuDhq5+J471GTk9W99/DK
      99o13Eu9Rd52/nFtcjTQqJpGNOMeHplJkZIDnylW9Df9S+uTsAp/jdZoLPqQN1mSolEpqmSB
      vN0CGK6haj/+GeiTE9jnPvxQFtN7j0R5ZLvBX5sc7ul3YfXf/HdAVUF/4EN7vMcsQUx5ee9h
      rcXp6SnKsoS1dnD66J4LxJM0yZUYkjqBa6XEyN8XYgDF4m3GJmWUnqQ5xvx6CeBDUpUsgJ2L
      07TtLvDXcHdbEH7Ka6sM6qQ7pNoq0y8Pp+0N/JhdEFzqa3C/N4YVvR/DymgDozWc991p896h
      SHNs06NOQ2O4xj978w+htUf61tfQvuvDIi5dHM/OzUpgkbgWlc4Qjv+9c+8Bfv23Po8iS/HE
      +z6Mdz3zLMz3fLbjSwHL5hKtTrq90hNuuLUWn/vc5/Dud78b7373u/tnwRtYLpedJ9I0ewPp
      oGM5pMkrTzFBDb8lLRQTQj6p5LzE6uPXEi0uaHwd0Fx3qFEJLtMTVDshaW07EFTgaoI5mOd4
      j0uzxDpZdW9J3HCnHG2bIbFAO+vR4mT7lrj9kGMj/ebXWmsssqI7lRHoN7x771F7ved2VU9/
      AO21p1DffDaKlVYKWnXu27I6x6K+QGHL/vlqtcK/+MIf4Gd++XN4apngtLyLDB0GmauR2hJF
      c9lDOSZXn//85/HTP/3T+Mmf/Mk95VjXNR48eIDz8/PB+qCQJs8Io4ISc2PmCMuUZpXCCko0
      YkuFpfKSlZI+iMxx53g7JdcjSQzqdljf2CCm9/hWUZr2Vmfapn8FySeaIaXKo2gu0ZgcpdqP
      2SNh1Z22XmDbVGhti9Qke98hlFKoTt+J9to7kbkKUB6tH/9QZU0G3ZZo1ZW4ZVmGH//xH4dS
      Cifl3V3Ikxa1Nqh1hsTk8MKbKZ6UUnj22WexWq3woQ99aK9tfFEctYRJkswLjHW+XSMxBplJ
      B1EAuIBxQaJvPbhZ553BNXJsUEnCG7seG0SxvQyS+0CTpE1p/m1dwe6+6gbhyUyKlGHL67nc
      bhD6m7sqq3wx4LcLbFWiVcMtiJTnpd0gbzZwyuC8uLH31XgMq6ZtUbU1lnkBBSW+lFi2a+Tt
      Fq1O8SA56rW9hFXVdscaNW2LPL2KLhhoJd4i8Q2q3QEeALBsN8jaDZqkwDo5mpSrsX6KydXp
      6am8HwC40sjOuS7+pOvOr9rWZTdZIphLws//xl7NSYOJ06W/ucmlLotkjqXfks/M64lNrnhe
      XmdqhuftSu2VLI4xpnd1BrxgyBfQuU9b1U2cJZ6Bbh9xY3KU6WrP3ZzCKkR7aG23QrTZnQdX
      NhVMmuD09BQ+LeCh0JpM7DvKU6pNP7com3qv/1plUJnFXrQTJdCimAW5ivUT5YnLldYaxhg5
      LhCtpLbNgIB1DmpnHkPniG8uRrQr13AxYRlorS7C456PxzuedqykGWI8xfzlmJWJ4ZaYBNh1
      sqQUJKw6Hzzv81dtfXXSptqvawyrQNdC4zI9HrSJYuK9749j5VgpKORp1r8WDVGLvOtOsazq
      ChuvcZldg9FXQhTbz7C4/YdYVCXOnn4BrbNobDtYbpPdew3FH/0u6qc/gPLWewEA23SJ2uSw
      OsHy1X+F5P4b2L7/U2hW1wfYGXgsmku0JkOpruKWzsHq4uIi/hZIqW6tSCv4pjSIlaTdJTeB
      PuMCxV2S3tQPzP7+GwDJ7Enamecb086cv9jiNuvc7rRGhd3/ALo3Nok2g0ktcLUGaAorpbqA
      U0jllY9TWEkYxJRASiIn8LJZkiLdnQjUfdDsJrXeWlxerhFejYaUeIsEDZxPkDVb1EmBWqUw
      m3MUv/wPoJyD/YH/EA9OnkTLBkByeRfKtTDnbwG33rvjBfDKQAEwZ3egbAOzeQCvDRZf/hzs
      8RPYPP9JZLZCaisktka1GH4hn8KqaZrx7wBKdUB0IPj+dBIqjJKwj2ndsQVLY4JprRXXK8Ua
      SctKS4bp8zE3Sfq9uzk4JznQSE2CLE3RVlcftDxka8CvpXY7f/Wqbi5W1HJ2R1p1x6uOzX2k
      skC3QsBg/wMpxVtrjWV1DuNtH94x7B3w+QLuxjuhqg1w8kQ3l2SBdMunPwy3OEVz+o5B20Id
      2/d/CmZ9H/XNZ5Hd+3q38+z8rf4bgnFN74pRvuZgNTs6dABTKTUIiirljXWq974/50kLAhZj
      lDPNaUruC3eRuN/JaUltGGtTY1uUdQWeFBRWxaI/6BrolAiNdzTWHsqjh8emKrHMij2rORcr
      jkmMzlSUihdffBE/9VM/hc9+9rP44R/+4T1slu0GabtFna5gXNNbAJontl9ZUlpX/KGzBuG3
      d8juvQa7OEG7vDbgUcJwCqvBKZGSb06TYV8iYxWPpXXZfVk8Xqz26ggABR8x5kLxxINeSS4U
      bxMfNHP8e8oDP4yazlXanW9dh9AbbBXknP0VAGBtt3TDeodE0Qny+EpXyie/plhlvsGyPEed
      LLBJlqNYvfzyy9hut/jSl77U8YHBexBskiXUbsKtksWoRZZSf/g14TctL7D48ufgjm9i/fwn
      d3Mijermu6PtlOqJLbQEWHRoClAgHBs9U34+pRvodJOq7rqbW/jBkT9ad8sBgmuRmXR0EsgF
      KsaHBEB4C0DXDXGzGWsTbxfP09gWRZqjaZswfezzZnBYbu/BmhyXkcViQdCVunL/Em1gthdY
      /vO/B6Q51j/4H8GabFS7Sc8oVonrji1NXA1gKWIV2vWDP/iDuHHjBj7ykY9g8Vs/i+QrX0D5
      mR+BO74Bnxfw+RL53a/D3/k6qvd+O3wy3DwzJlfp2R0sfuHvwz35Lqy/96/A+453sz2HamuY
      nbvjMZQ7ipXEN8UhhsdkYKzoCkbmZkjmhmsg6xwSY5DuvidY57q9qOlVR1rXLSqrmm6dOD8T
      izee18HbEHxU+hsAlssl0jRFWZb9bjLO89j8wWgDs/Orw/1QfxdJ2aPI8sH7ce89DNouhqet
      oTLqonQL61p1teDN6G4SmO02quj1GdT6HFAKqtxAHQ2XIktprD+2ZtGt3NRXroqElVIKi8UC
      3/+9n0HRrqFf/0OopkL+u78GdfcbwOII9od+FMmv/gxwcR+oS5Qf++ygPMePypV58CZUuYa5
      /UdQ3sPveK6uPw14D7s43n0Uk61KzHoDXWhOrXW/SYrn23OB6PlesdHFGya5ThJT3YrTKy3Q
      XZt+YAC716y7cpuqxNFidWUeCU2JL4lHChC9d3FxEfUP6b2YdTFao0gyNLZb/0MHWveiQEFr
      0/Md3I4KOZChE/QwYAGs/vA3YS7uonnfJ7E5ugWgWx7hAdQ7JdHcfBf0Z34EPklhj6735RNv
      4ZRB8LDnYuU8UOocmW9Q+AalzkWsQsptidTWKD/xWXzjq1/FU+//IPJf+gfwSsGaDMnNW0C5
      gX/imUF/cAw4T/bWM8A7n4W78RT8TmEEHsobO1qQB3psMHjvkSQJjo+PoZTC5eUl6rqODwBa
      aGouQPPz32NLDWi0sVDGaNOF3d5tfevrVt07df4xhDY6pvG5mYyVN8YgyzJUVXewH7dqsWUX
      APp9B1prZLsQj50wq73D7ui2Pg/0gkbjVOqLe/C2BcoNcNTtADO2xnl6jHXrQuWonvu2QRsK
      V2FRX6DVKS6y0z0+x3xw77uI0svqDAqAyzQqleyVDzQqUwDO4stbDf3+T6J6+mm4H/nP4dIC
      pryEXxRQH/o4imsnSNpLpG2FTX6C0pu9GFPKe2TlBeziGLpaA6fXUW7XuHf3LVwjZ0lw1zwm
      8JK8Hh0d9df0uC6aBv4Fj5YmaXV+zcGVhE7qDNpAY7r35i0RwtQkvWvEeYj557yumG8c8q5W
      q37Ar9frvYk07wR6b9AZfjgJjrmHMaw8gO0LfwFme47qxjPdu29bQ6E778o6238IpHyEslIr
      Yz7ynvVWQGsyGGdhtZGJ7VIDjTY7wbMvnMJ7j9zVWBiL5vIOzC/9w257p0ngVzeQPPNeKHgY
      10KbdE+uFq9/EdkbX0Fz4xncvfUC/u9/9QpeuXMff/X93yMqXDqAuDvOcbbOwXuHqqr6vdPU
      zaVp4AJZa/vTOQLBUDGfxHCgpQ6Ycw/oPnI1tkHrdmfWmhRFJkcnpq6GtFCLa4SxQXBxcYGi
      KFCW5UBDjPnU1PrwTuHaSmp/jJ9meQ0Nea23Ka7BuBaXTgPook5os/8dpNI5bNEddsf5HMOK
      cIXL9KQfJDQlcJ17A3nOZcIk+v4b8Nt1f9995Xfh3vNhpK+9BOMB9e5vB/hHN7VbZaoUFssV
      vvff+4/x6d36/SmsJG1P84ZlO+VuHqlUUFbd8myqWAcuUKxDpUolQGILrngZmsK9LM36+C+p
      2Y+DzwekRIPzOebPhkG92WyimkQCnltBadBJyTrbbTuFRd5sUCbLLpy4gBWA3TLkFI2toFQ3
      NzJaxrTB1avRuVg572Cd6z9KcQuReotVdX935sANtILWLZMlnE7QPv8dStSj9wAAH6dJREFU
      SOsW6etfgtqskXzgY8DmAfy912EAFDfeie3p0wO+y3e+gPb607B59+r0+Ph4wB+fw3H+pb65
      ur7Ka72HUleyZNEpp0R3btnoGWHc1HCGOLj8i2zMf+YpgE/DcgQ6VHNJLkmM7pjm52Wo5ZtK
      sQFMXR4+CAH0b4OyZoPE1sihUCdHAxo8VW29xxN/K0X7KWCVegurNBzkgbprSf9B85B2O+eQ
      acCpLhT7VnXa1H74u2FUC7O9AFbHQJJCPfEueNsiyYu9Qem9R1sc7TgZYiXNWw6Tq2kl3L+w
      4A2Nac3AtMfVFsfY2yEAe5Me+jxmWaTnUoPpxxz6Wyov+b5ANyk6OjpC0zRYr9cDnilNzoe0
      PidmYbiQeu9RJUsAareTLI4V0L0161ZR+t0/tye0HKuFrweTYtqOwL/WunOYWD9k529C11tU
      N59FDQ1X3NidOXDVvlw5rMoH8ErjPL/R8bV7IQDngPU5/K/+0+5V7V/8d6CXx1BdkJXurN+2
      xCY/6b8S83Y8DrniwRj4vCfRV27+5IYYnvhBFlJHU1CnkjTQpspKcxE+R2ltK365DrTDl1x+
      sHXMysR4k9obczu892h0gma3ShMTWCl0E7rwZqlqmn49fRhQe2V9mMeqgaaLYRXKa9ug+Oq/
      hPIOLitQHd9C44BMOeSuQWXyLq4PEw2qDGztYF796tXDy3P4YgWb5ABUP7E3rgVGTgN6GLmi
      +a2LH7jIVxgkPJOkLUcHxO4VH80fc5loY6TGUTClemO+HwfPOouqbeB9DbPb7hfyUg2+2WxQ
      FMUgQFes/eFaCtWhlELhSiRtjW16hDYSAFaKcjYHK6idBYaHcwm0in903KoMTX4dLrJRJubm
      em3gTp6AKi/R5kewrnv7dM1vYFwL5R02u3lLsAweQ6Xgs25Di3vHe2CeeR7uC7+B+hu3kf67
      Pwp96xib/BSJa1Dp/XVRkjsd5CqBA7zrzzWWylxZBtnqh98pi3+bSMQkn5YLbUixYKVTQj2m
      JedYDp4o3bptcePadZydn3XLKSAPzrquUVXVgEdJuHk5oAM8yzJYa9G2LfJ6DQ0Pq2u0On8s
      WAEYHJwNYC9+j4RVCz26mVDqAweFy/d9qlMM1RZ1uYExBk2aQXmH1qS95bA76hrovtruaFUf
      +dfRPPMC/PENJJszVP/r38X5b72E5WsXuPG3/hYui2toVLbb13HFyxhWiQKOfun/hL/9NZR/
      8a+ifur5PbmkKZw5F+5SbBe7L/ODgcNB4dfSb6oxY5vJ+V/uNvAguDFrw8tJ9dAytW1gncXZ
      +TmKNB/EhaE0Kf9jVo//TZIER0dH/VuL1WoFpRTK7Ai1KVCb4aYMbl0Owar7vf96Muwr4EqL
      a/gprKjg9f6zc7sl3V2QtK1Z4ry4iQrJoK+T6hJHv/NzWH3p1/vwjs572JMn4JRGvbqO5uOf
      6eYCroV+6fNYfflz0ABefvll/MRP/ARefPHFKFZ9XQD83dtQbQN9//YEVoCzbiD8SnWT/SLJ
      Bifa9/MBCmpM80oCRCuV7seWEFhnoZUeuAP0zQD3Wfk+gCk/PNEJvPHI2OHcUwFWKc1YPYvF
      AkmS4PLyEt77/ttB3TSolYExKZQf0ou5HHOwUkpBaQWNK6zSJMFRcw5jG9z1Bb7yta/j+vXr
      ePLJJ2djxXnhdWqlUaRmMCh40uUaaCvoTQtlLZRJ4Ost8maNSufA4hj53/hPcPrpTyFbauD2
      K9DrB1Dw+LVf+zW89NJLsNbiYx/72ECjBx5Dsh7Yfv9fg7n7DVTPf2zPmwhlqraGUhrK+72+
      LjL5bOPBAOAgSIkWlt6QcO3DnwNXMYKC4NM6pcgOvEN5x3HXySgFzb4g8zZxN4vzK+XXWqOq
      KhRFgdVqhTS9cq3yIsf5RbdITSuFLMlgIoN6DCsusGpHz4G8DvYexnYfoO7fuY0HDx5gs9ng
      1q1bs7GidcQGwRRW9cktqOc/CZcVcDvNmrcllgZQbYlKnXT7iV/4NnhbA4trsMUKTml83/d9
      H9q2xac//ek9upJcNdefQnP9qau+UAoJWTjofdi5aGHIrjulujc+Sgj022Pku4Tbt28DuvsI
      NTUAOMDcJ5P+xsCmTHVvPPY1J9WS0hsM6QPcmKafsiL8mdZdxOksy8Q1Jc45vPHWm2jbtne7
      8Jiwqpq6j9jmfbee6iRLkcDjsgW+9tpruHbtGm7cuPHYsZLcpTGsfFMibzZodQpdrGCVhvdD
      vNM7X0P+O7+C5oPfieqZD4r0aD3SnGnVrpG13bbLEDEiPHfeYVN18YfyNOvlWbK8zrmhC0Q7
      VxqR/BklKAFE38+Hhkg7j658tas8MdqBx0BnbB24FDNSAnvMVTDG4OTkJBrVAuiwu3FyDfce
      3O9XtXpG5xCsQh7nHLKdNQuDwHmPs7rBKl8gzRSef/75AS+PEyspjbpVSY42zXFS3gPKClW6
      glf6apUpgOz3fgPmjVcAZ/sBIKUYVkqpqzdQQsQMrTRW+QJQChAUDB1Ie1+CY0xwMxiejXVk
      FKQITck80xQTXO5D88EV7o1peF4fF8K2bZFF1iaFVOQFiqKAbfe/PxyKVXgW7mVJt3+ibttB
      nNVYehSspPJzservKQXlPfJmDQXA5gY1DPT6DOYb3XeC5r0fj/I/pSA2yRJ1UvTrn7js9OWZ
      5ZDS4DUoHSVSY2NMht9BY1Ka1rn+4xlfazTlEvFOkzpCMm/8S/FUe/hg4YN0s9kgTeUtmlcF
      gdPjE7x+5zbyZHjOwhyseOJYdRPTbECD/pUEXMo7B6sxxTeFVescLvLr3Zff+hLKW3htAAe4
      Ygl361moeovmmQ/suTiHYNWCRAzZtTlRHpntziRoVNrvPw/JaNXHJg1YDTbFSx0y8E+16m37
      mE8YnoetjUbJAMc0tXSf1hOrO+bmjFmAMW1HrdbR0VG/tHYsbbZbVFUJ72RFEsMqpNiCwseJ
      1Rg/jwOrkIxWOKoeQHmHy/waWs9et7oGxatfgFtdw/apF+D9w2EV6j1uL3eHkQB1sujiru6e
      LWyJvLlEmR2h1MWV2y1VwP8BJO4MhhoipsWB3QEPu1V3vAHcZEnald+P5ZNSrOPHBo+kfYJ2
      tNaOtjWk5WKB05NT8dmYAIXEsVIA0u0ZtG32sIphU7z+JRy9/FtIdkHNtFKDD2Nj7aBaWSmF
      9P4bWP3C30f+yu/KbgapP2DV5/PdkavKO+hd5GuFbutnojyKz/0TJL//m0hf+yI0CTFzCFaU
      19Zk3TGsuJofpMojgdst3QaMbQe7y/a2RNIKORPhK5pkuiQgYxNH3tCYmZU0HOePP6dlqYmk
      E2ul9jeIxFLIH84fLopi1HUJ9YWdZmOJ1p35BnmzQZWuUKurz/X5vddQvPoF2OUp1h/+rNjW
      cK2UgnYtsttfgXIOyfV3AtefxlF5D151kdysUJ66pHy5Rvryi0jeeBmq2qB8z0dH8eKWwkJh
      nV+D8h6NSmDgUDSbzk25PAde/YOu3PoCqz/6Q2z+0t+EXZ6ItLlMDOsFclcBULhYPgHtLFpo
      GDgclfcAAOviOlqToaobLKvbKJ2CPbkVD43I39aM+WgxZmNJmnRxrcbNG+8syqe04Ivzxn1j
      aYdRLIXBU5Yl2rbF8fFx9wpt5EjWMAC4luapF/R2i8Q18O0WdVgsB3RuJxDdFx34C+1wOkH1
      zEdhthdoTt4B4y2Ud90/Zr07usCquYBTGpudy0CXhtcf+E6oukL73EdHMeLtCfXUMIDqQhge
      l/f7DaP25Em4j30G5vVXYN76OvT2Eovz21gvTwbnAku0eUq8w6K+gALQquu7mKm+GxkhfCc0
      Gp3DoEZqdBenVB3wIWyOoIwxPEeYaRm+tyCWgjYfszZca+xZNmFyzt288Ntai7IsUVVVF104
      Um+aptEvvDx5320uyaFRkmXSSinYa09Bvf8TUEkGAwc7EZXPe4/y5tUhEQ7ANu9OaGw94P0Q
      q9S3SG0FD6BKlmhJm9PyAr5YwP2Ffwt5W8LBodVGxIpbkcJVSNsK22yFxu8UlOrmkJv8FI1K
      4D/+byA/fhH6ra9DpRmS42MkvkWjRl9O9nUm6FyrcFKl1QnsLpyi9x4WCufFje6ZBwCPNlvh
      vFGweQLQ7wAUUA6q5HPOyS9pLO99vxxCoknzTVmdkC+2nn6Mfzr4+N/gBhhjsFgs+k3zgafg
      2tR1jSzLotsf8zzHdrvdG+gSVrU3qJNdsDBy3yoDVxzBQ8EJ55lQdy6WqhChTcCqQXcUklcG
      jswVss0DLL74a/BJBv3+74DWCpmt0JiFiFUXCsZ1X16VQt5soL1FZhPUqkDrsXs7hH4xHQDU
      7/lIZyGWR9DZCkWzRmIylMkCiRuGiaFyFdwb2mqrr9789NbxartNh5X3sNmqL7P3GpR30FiS
      NCvXuHuDBl28+OVuiXKMbowPXicfDPy+RCsITawOQF66HFLYQbZer/dCyNCUZRnKshT5nu1+
      QeEivz4614q1YQ5WddvCJd0RQt4Ry6w1oA1gUpTZMRK0qJMCxrZw+kooA1Zt2x3tGvYqbNMj
      pK5CbQqYLhLSbnsikwdtUD33MQBdhIti+wCmqaBzh6zdojG5GOXa77bZdNfYuVZXkfO0beDM
      /vLpPWXqu4Q333yzOzFDMG1jiU9OYi4OFcjuGFDVHxoxRjdc8/U0sS/UfcNIfWOT7NhmcaW6
      aBUh9In3vhfmkLTWSNMUbdvi9PRUrOf8/LzffBN4kb6GS1jNTbG5zxyseFhJWrdpKnhjYFU3
      6S9e/T3kn/+naN//HVh/8gcG9fG6vPdId7vHnE5wmZ12J9MrYGErWG0GsUMBIGlKrP7Z/wZv
      W9gf+GtI025Z9zY77r8mA4BR6ALxatMFxtU5lO8mvgBQ/MHnkH3hl1F/4vtQfuhTUay89/KW
      SO4Dc3AlTc9TrEOV6qK92V0YFBMBP1anxIOUhzeUt5EO7ljd4V7YNSZp7HAAW4zvPM+x2WxG
      reKhwj+GlcTDGFb8BQJtX5sMP7zpB292y5LvvS5iwfvAOHu1A2y3ab/wLYrmEh4KTXFz4LL4
      uoJfnwHOoSkrJMkSUH6w5EFrjaPyHswuGJiqt2gcsCab7vW9N6BsC33vjT3M6EI6BxYVImaS
      Y0Il+dRzXCmluoBYrW3RWIfMpHuaMVYvpxvqHVvuLJWPdSBN9IRByWVyzuH8/Bx5nmOxWEBK
      WZYNIk9I/Et1j6UprHjfaKWQ27Jbl6PSg7AKtL33qD76GbjTJ9Dees8kz0oRF0V1b2OU6iLi
      WWX63V20H+zqFNvv/w+Q3n4VxS/+NHDjSbTf85dR62yQ1ysN7y2c0tCv/j6SukT+vEd1/V0o
      bn8V+vQE9Se/H9V7PwGAvtEElvUlMlv2H8p620ijsnFQ+XrwWMPDNjoJVAnYsDQ6HKQ95XJR
      s03vSeVCnVN0Jb5o2aAh27ZFmqbI83xAl0eJ5imsJJ2bJKz4vak2UaHy3iPxLRbNJRb1ORK1
      48k3WLQbaLjZWNkkQ/ncx2BXVx/6KG+8nIOGI8IOAK1XuChuYJ122y55qm+9B+2TzwK2BW6/
      BvPr/w+Kr//BIM9ldoqL/AYu81O0x0/A5Uu4rFNU6ZsvQ9cbuHc8C5cv+j5MlMdJeQ+pLeGg
      u9Pp4eU5AG2c1LCx1E1I2D1hHsA1MNf2U88pndhcg/Izpe14uwPt5XLZ7xsOvvLl5WX/JijP
      835XWCy1bYuzs7PZ7g1vR8xFnIuVVgqLdgOvNLamgIbHSXkXCt05x+H9P8dBqitptlC2Qbs4
      HWCltQYCDxGspT6Opez2Kyh+/qegADSf+jexeeFTe3l4/3vvkVZr6O05mmvv3FmeLnXfIe7B
      A7gsbqD1HS6zokLEhEtqhBppoOSXjwHONZnEQ0ywve/ON2utRZ6kSJNhGI6xuoGrJQnB2tCv
      v+FaKTUp/CF/kiSitTgEq7mJ03TeY20WUKpbn5VojZacrDJFJ9DStsHqpX8BtC02H/pMf0CF
      1hq+LnFUn6HxCn51Ha1OB5vmpXZ476FVF8eoUaZfqAYA7RPvgnvqPUDbonzu431+o8JShysa
      lG6Tr4B8v0/oNwG3CyTmvI9/B6ANlyZIU4DFaITftAzVcFLesVCDtF6luogQddsMzGvrLBKf
      7NEfm0yGPCGsNk3hTIGiiL/K5XzmeY71eh2d19C8h2JF2zH2URDojnDyAC7TY7E8xXKv75WC
      NymUc90rUsKX9hap0ciUAuozbNMjlGYcH7WzTHm7QaszbLIjtF4hsTWSB2+g/fbvRfXke3rD
      ksFiVZ7B6hRlukSjEui2gqnWaJbXB5ZHspyWGKggV2JoRKkjpEnvnEQ/0/OOkVyhmOaX6pd8
      47Ku9wIj0c3WNMUsGhUw59wgZLz3Hnmew1qLLNvfehlLYTI8lmh7YlhJ9w7FKljp2CCMYeVU
      gvWHPws42x3OQXnIljirgRUaJL7t3Y9uMuxBPxwMAv3uNHriahxVD3CxuInlS5+D3l4AANrl
      Nfgkw+LVL0AtVsDNp3Z5a5QWSF55Ebpao37u49je6L6AJ7sT51sMB6mEVXQxXGCeXlNtPMeP
      o0LP/XTeWfQtS4yPMY0NdBHBgvDTRu6G/L4gEGHfM/e7NtIvvdvtttullWUoiqKfGM9JSilk
      WYa6rgf88bbFNL70ewor+nsq8fbHsHI6gVf7gYQ9AOQrrAFoONjdRn7nHEohxOMy6xYVhkM6
      FvU5fIh6l2T4/4u7uh9JbiL+s9v9MZ97y+YQBBEixAVFAYGEEIoiUPgXEA/8lUg8guAJiBA8
      QC7AA9GhXES4fNxm93Z2+ts2Dx73umts98zuRtTL7nS77XK5XFW2y1WaMaj5A6h8geziIySb
      59DbC1Qvv4asr5DUW2RP/rZbd9zcvzAnxBcAgE1xhm6CVnspkigR6YDEnMh8C2ifSvUx8qHa
      xSet7fOEJ0g4H8wfxkyEg9Te0XWkEsXRbXM+nw+7PXYQLQNrrYdQK9vtNnhPmIL93o1D5MPD
      R8fb0orW6bYTuzgTu0oasgTsuGoAmnFIKVF1jYkA4gogtW/q1iyFKk5RtNcoui3Kb/0IrG8g
      U7O13J6+DF5dQS5O0fAcbZZDsByzRAAaaB/9EO389MZM81yVDNFqbxeIEsslChDOmBJbxNn3
      sXunIansk4CxCaq0Rtd34IxDeGICufj4pP5yuTSpj7TG5eUltnUJzjgenr00CrWilMKLFy9Q
      FEXwDICC3tVJafP/opXbjk+gxWjl6xut30S0Ht9v8PFV2pp1QJYwgHG8mJ1BqX1hQGmVqB4M
      xtXa7Su3cYqcsO6p7s2WLAn1PmDnNkRvJdkPfBdb3I5RSRYi0CFqmQ4sbd8F9wwj4Sb+e0q2
      dL2zn5gcy+VySJhxeXmBsi4Hb5Pnn5+PdnE45zg5OTl4IWzbc88RbD9DfQ/h7Svvfncordz6
      XTx8MaLoZIppf/tbEM1Iz2+01hDK7Cyl//oz+l6iypYj5o/RSnIBmWQDvsXzpyieP4UCc5zg
      gGK3vlg0l6N6GfPcCHM7MyV5YoNIieY+G9Slh5Dub7d+a45YcCcp9RMK9SGmDew2pdYam80G
      0MA8n2Gez6AB9LLH+eXnIxxiwcRCEDoUuyut3Gd3pdVyucRisYAPQv2l/BCzEkYahXHoJIVO
      UlT5CWqWHcxXHMBMVsh0B1FvkH34HrIP34OoN6O+KcaGZBxu2xw6nB8ghoDPVqWTYkptMsZ2
      obVvPAgpkWibI+QDTmy0jUMk1Xw+R5ZlQ6j0rru5fqj0zQ5SVdf4/PICX3pwGt1qjAHnHOv1
      GtfX18GFf2gi2L5+0bTqug5FUUTN3VA9vnao6eNqIMkFtm+8DQZtTow9awytNRJoJJCj23KF
      blF0W2gwbIpTqOUZAA2VzYfvlVJomADPVijaDRbt1eBdmsva7wxHf8fUMSVGt0sSPaU9ALMd
      Z0OI0PJTPu6xAfCpddp+kiTD9UbLIEIIVFWFumtNGHKW7BbRYrjgv62MY5udBMdqAMYY0jTF
      yckJyrIc7QqFcA31z8J908pGwHPduX1tu3jSeqbWFa65JgDkXYlWzIbI0XQCL3YOcDxboWYZ
      MkhoZjxV+ySDBMf1a2+OcKDrEgaT1okzE3a+46n/IMxl+BDT2/J7qXU8eX0p+Pa4bb208762
      3fZdzePGGHXrpv3gnGM2m6GqqlGegLZtUTW1SUqn01GfrL+S1hplU6N7/ilOTx6g2GU/ORY4
      51gsFsP5gLu+CElvSiv6bEwnk8rVDQNCaUV9vNwyVgtYl4+pNcu4bebljRBfpX0NoTqgZ2iy
      DBwarGshhWMOOQ5wue6GbdPN7CVThjA9bbNhJj1t0W6w3DzD9fwhOkbCoggndrpvUGNMSd8f
      Ir2m1Ctj8VSlbj0+Nev+b/+maTrsx3ddB6UUqrYB4zfMMcvywSwbCNh3u90lk8qplyaH74PV
      OuoSfQgopbDdbve0wW1pxRjDvC+R9SXqnS/9sbSyEfE2mw26rtuTphSopUD5KGbiCS2Ryxpt
      kqNFguUffonkv09Q/eTn6L76TTNhGTPh58GQ6R7z5hKSp2g//Rjp49+j/c5baF95fbzeYcBM
      1pAsQaJ7cKUgPnof+k+/gfzyK6i///a+CURteYt8aAco1rmYbWvboKrSZ7b42qTvp/By7VvX
      xjeecmPbuut7JFkyYog0EVBKIk9zJJwPpltd1+YObHE7TQBg2H5t2xbb7XaP2Y6lFQAk2oT/
      4EoCfJpWbh1aa/R9b2Kd7g78QuUpXi7/UF5wv7H/c85N+tXddVDOGPjlZ+beweYC+iu7sri5
      StkyAVmcQTOG2ZNfI7n4BOmTd9G+8vqozUI2yLub7JUAoMoNIHskz/6N+SdP90+C3Vk85Tce
      GvCYGaO02iVIiEs3H+GoNKHmTYjosTo540MuLsCEfsk8p7sMZlfIHUDbx7quj9oODeGU5zmE
      ECjLcvBB8k2GWB22zDZdIU06tDzdY1RfvT5omgaLxQKc86CJFuINao66E8THV+678qe/QHLx
      MbqvPdqr19bTmwdovvtj6HyG7tEP9trpmxLgQK80xC66Bnv120CSQL37DsDF2ASyUj60wxFS
      m/Q9nUjuu6o1aT9zke3tMoQGOmbyuH9dcF026OD78O1kD874cEPNp73cdujBYFEUdzaFXLza
      tkVZlt7Y/BYf2g/63L67Da1s305OTtA0zciPiY7pMbQK9ZfWcwxfsZ15VMgKkglzgYYxzK6e
      IRMJGqlRCA7Fdi7bjGGLPL4NOjWQ7iyn4JvZgJH+vex3JoUGI98eoqYpoezg0ZNTl9i+bUCq
      KfJ0P29VDCitmqbBbDa7lwngagO7LUvhGFpZOJRWQoghgXhVVRBCDJPbJhS8C61i4JrbtI1Q
      qBytNTLdIO9Ks9+frdFqBvaX30Exhuqtn0EKcwlmZ39AwawP9iYARdIXY95l/pg63EeWocjM
      gixJOEYegp4JFSKY1hrbpgLDzclvSPKFntP+xMAnjXx4XV9fY7Va3cskAMw9gtVqNUhgaju7
      +MRoZelApaevDGB8oYQQSNObvGD2XZ7naJpmcAykcCitaOh8t18+l24Xdx+P9Dwzd4S1hGYM
      yYtziGcfGE/T6grN+uHAbzY2UpPk/uC4UwuYQwY4xliuapTa+IvYdcEhCRy01qjbBr2S6GWP
      PM0x200sn61L+0CJ5+Lrfk9tWB9QetynKeSClBLb7Xa4ixCjVWwN5j730epQ/JVSw0Sw307x
      RsxquA++cneKmNYo/vFHgHHUb7wJqfyet5MTICTVY+BjLLcDtKw9ZLLp66c0isuc9c7j0GoW
      usCKSU3aBn0e24INSV5rvnwRk0BrPZglh2rfkN0P+LPOx6Ld+UAphbquh9ipLhxCK4pvDGJ8
      xTkD04BvxRSj1d4ECJkIPgkag5AkcqVALyU62e98+Jm5HidSiECCa1/97u9QZ314+Bgj9N43
      sD6J55YVQiDLMqRp6s1UeVvQWg/awI1WF6s/NPi0f4eGgPeBUgpVVaFpGi8dv0i+YoxhtUsc
      WOYnI3cJ+t1ePe4E8AV7nTIB3HK+gXAJ4Er3umshlfRKLsETkxoI01IjJuFiuB4yAeg3tF++
      en3v7cnzMTfIpkBrbdw2nMhzd6GVEOJe1i9SSlRVhbZto7wTozUtN8VXSZJgXZ+Da4UqW6FF
      ArE5R786G4J6ue2MTF06AUKzMrT4OAT27FUAbd9CSgUaQkJrc7HFzYYyVTf93oczlRyuHeiT
      PlPq+VgJxhi794mgtTmwstrAxSuEA/3ePl+v19Fo18fiZYMIhyYCHReK5yEaweWrlGlwJdEl
      GeYf/BXi/D/ozr6O8hvfi9JjZOzZgvYWVOgj2hn7my7CLFBbkzM2BMOi7aeJGJg/xlxuW8dK
      Z+AwD0lffW4/bN9Czmh0wKWUgxfooSp/Ci/rWGcP4kI7M5ZWvhhPh+Q8OBYvIQQWiwXW6/WQ
      X+0QvgrhPsVXnWbouECmWui0MLFDs1mQzpYWowkQGujQwiM2GajKdb+15lBBEs9lIkUmbk5h
      bXmf16XL+FP2r+//8QJqnMmS1k/bob99dItJsbIscXV1dS+TwLY5n88HKR6jFV3g3tWNYwov
      IQSWyyXW6/UozxrlL2pd2Oe0vhBfMcYw77eYXX+G5Le/gnr8GPXDV4O4aRgejF6IoQhNmQo+
      cAOvuuW11oDGECY9Fyana4wpXOai+PlMHQpuGVpPiGGnBoZOihCt3DbtwZZ1MrsPsNpgvV4j
      z/ODaTWbzW59t+E2uK1Wq2GzZYpWMXCF4mC5sAQ4/wzs/b+DPfknkvNPvEIr6VukuwiG/wO/
      Dzo9YjlsLwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
