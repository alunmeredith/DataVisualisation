<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0330.1916                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='45' min='1' />
      </column>
      <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
        <calculation class='tableau' formula='100' />
      </column>
    </datasource>
    <datasource caption='EstablishmentDetail+ (dat)' inline='true' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' version='9.2'>
      <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\DV-TableauCW\dat.xlsx' interpretationMode='1' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
              <expression op='[Scores].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
                <expression op='[Geocode].[EstablishmentDetail_Id]' />
              </expression>
            </clause>
            <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
              <columns gridOrigin='A1:U1374:no:A1:U1374:1' header='yes' lost='0' outcome='1' processed='8177'>
                <column datatype='integer' name='FHRSID' ordinal='0' />
                <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
                <column datatype='string' name='BusinessName' ordinal='2' />
                <column datatype='string' name='BusinessType' ordinal='3' />
                <column datatype='integer' name='BusinessTypeID' ordinal='4' />
                <column datatype='string' name='AddressLine1' ordinal='5' />
                <column datatype='string' name='AddressLine2' ordinal='6' />
                <column datatype='string' name='AddressLine3' ordinal='7' />
                <column datatype='string' name='AddressLine4' ordinal='8' />
                <column datatype='string' name='PostCode' ordinal='9' />
                <column datatype='string' name='RatingValue' ordinal='10' />
                <column datatype='string' name='RatingKey' ordinal='11' />
                <column datatype='string' name='RatingDate' ordinal='12' />
                <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
                <column datatype='string' name='LocalAuthorityName' ordinal='14' />
                <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
                <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
                <column datatype='string' name='SchemeType' ordinal='18' />
                <column datatype='string' name='NewRatingPending' ordinal='19' />
                <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
              </columns>
            </relation>
            <relation name='Geocode' table='[Geocode$]' type='table'>
              <columns gridOrigin='A1:C1374:no:A1:C1374:1' header='yes' lost='0' outcome='1' processed='4041'>
                <column datatype='real' name='Longitude' ordinal='0' />
                <column datatype='real' name='Latitude' ordinal='1' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation name='Scores' table='[Scores$]' type='table'>
            <columns gridOrigin='A1:D1374:no:A1:D1374:1' header='yes' lost='0' outcome='1' processed='5297'>
              <column datatype='integer' name='Hygiene' ordinal='0' />
              <column datatype='integer' name='Structural' ordinal='1' />
              <column datatype='integer' name='ConfidenceInManagement' ordinal='2' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[ConfidenceInManagement]' value='[Scores].[ConfidenceInManagement]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (Geocode)]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id (Scores)]' value='[Scores].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Hygiene]' value='[Scores].[Hygiene]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
          <map key='[Structural]' value='[Scores].[Structural]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8177</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Geocode)]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4041</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hygiene</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hygiene]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Hygiene</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Structural</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Structural]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Structural</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfidenceInManagement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfidenceInManagement]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>ConfidenceInManagement</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Scores)]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Scores]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1374:no:A1:D1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5297</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
      <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
      </column>
      <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
      </column>
      <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
      </column>
      <column caption='Confidence In Management' datatype='integer' name='[ConfidenceInManagement]' role='dimension' type='ordinal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Geocode)' datatype='integer' name='[EstablishmentDetail_Id (Geocode)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Scores)' datatype='integer' name='[EstablishmentDetail_Id (Scores)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='integer' name='[FHRSID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code numeric' datatype='string' name='[Post Code (copy)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='tableau' formula='[PostCode]' />
      </column>
      <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating (string)' datatype='string' name='[Rating (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([RatingValue])' />
        <aliases>
          <alias key='%null%' value='Exempt' />
        </aliases>
      </column>
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
        </aliases>
      </column>
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
      <group caption='Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)' hidden='true' name='[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[AddressLine1]' />
          <groupfilter function='level-members' level='[AddressLine2]' />
          <groupfilter function='level-members' level='[BusinessName]' />
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Name,Business Type,Latitude,Longitude,Post Code,Rating)' hidden='true' name='[Action (Business Name,Business Type,Latitude,Longitude,Post Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessName]' />
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Name,Latitude,Longitude)' hidden='true' name='[Action (Business Name,Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessName]' />
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Name,Latitude,Longitude,Post Code)' hidden='true' name='[Action (Business Name,Latitude,Longitude,Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessName]' />
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type)' hidden='true' name='[Action (Business Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type,Rating Value)' hidden='true' name='[Action (Business Type,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type,Rating)' hidden='true' name='[Action (Business Type,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating Value)' hidden='true' name='[Action (Latitude,Longitude,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating)' hidden='true' name='[Action (Latitude,Longitude,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating Value)' hidden='true' name='[Action (Post Code,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating)' hidden='true' name='[Action (Post Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.724818' measure-ordering='alphabetic' measure-percentage='0.228467' parameter-percentage='0.0467153' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BusinessType:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Takeaway/sandwich shop&quot;</bucket>
            </map>
            <map to='#2a2a2a'>
              <bucket>&quot;School/college/university&quot;</bucket>
            </map>
            <map to='#373737'>
              <bucket>&quot;Retailers - supermarkets/hypermarkets&quot;</bucket>
            </map>
            <map to='#464646'>
              <bucket>&quot;Retailers - other&quot;</bucket>
            </map>
            <map to='#555555'>
              <bucket>&quot;Restaurant/Cafe/Canteen&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;Pub/bar/nightclub&quot;</bucket>
            </map>
            <map to='#777777'>
              <bucket>&quot;Other catering premises&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;Mobile caterer&quot;</bucket>
            </map>
            <map to='#9b9b9b'>
              <bucket>&quot;Manufacturers/packers&quot;</bucket>
            </map>
            <map to='#aeaeae'>
              <bucket>&quot;Hotel/bed &amp; breakfast/guest house&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;Hospitals/Childcare/Caring Premises&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:RatingValue:nk]' type='palette'>
            <map to='#4575b4'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#4e4e5f'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#908f8e'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#91bfdb'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#d73027'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#e0f3f8'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fc8d59'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#fee090'>
              <bucket>&quot;2&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Geocode (VisCWdata)' inline='true' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\DV-TableauCW\FinalWorkbook.twb Files\Users\nicolavitale\Desktop\DataVisualization-COMP6234\DV-CW2\GIT\DataVisualisation\TableuxCoursework\DV-TableauCW\FinalWorkbook.twb Files\C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\VisCWdata.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Geocode].[EstablishmentDetail_Id]' />
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation name='Geocode' table='[Geocode$]' type='table'>
            <columns gridOrigin='A1:C1374:no:A1:C1374:0' header='yes' outcome='2'>
              <column datatype='real' name='Longitude' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
            </columns>
          </relation>
          <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
            <columns gridOrigin='A1:U1374:no:A1:U1374:0' header='yes' outcome='2'>
              <column datatype='string' name='FHRSID' ordinal='3' />
              <column datatype='string' name='LocalAuthorityBusinessID' ordinal='4' />
              <column datatype='string' name='BusinessName' ordinal='5' />
              <column datatype='string' name='BusinessType' ordinal='6' />
              <column datatype='integer' name='BusinessTypeID' ordinal='7' />
              <column datatype='string' name='AddressLine1' ordinal='8' />
              <column datatype='string' name='AddressLine2' ordinal='9' />
              <column datatype='string' name='AddressLine3' ordinal='10' />
              <column datatype='string' name='AddressLine4' ordinal='11' />
              <column datatype='string' name='PostCode' ordinal='12' />
              <column datatype='integer' name='RatingValue' ordinal='13' />
              <column datatype='string' name='RatingKey' ordinal='14' />
              <column datatype='string' name='RatingDate' ordinal='15' />
              <column datatype='integer' name='LocalAuthorityCode' ordinal='16' />
              <column datatype='string' name='LocalAuthorityName' ordinal='17' />
              <column datatype='string' name='LocalAuthorityWebSite' ordinal='18' />
              <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='19' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='20' />
              <column datatype='string' name='SchemeType' ordinal='21' />
              <column datatype='string' name='NewRatingPending' ordinal='22' />
              <column datatype='integer' name='EstablishmentCollection_Id' ordinal='23' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (EstablishmentDetail)]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (EstablishmentDetail)]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (EstablishmentDetail)' datatype='integer' name='[EstablishmentDetail_Id (EstablishmentDetail)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='string' name='[FHRSID]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
          <groupfilter function='level-members' level='[none:Latitude:qk]' />
          <groupfilter function='level-members' level='[none:Longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.735693' measure-ordering='alphabetic' measure-percentage='0.13253' parameter-percentage='0.131777' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:RatingValue:ok]' type='palette'>
            <map to='#c7c7c7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>1</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>2</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>3</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>4</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>5</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Geocode (VisCWdata) (2)' inline='true' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\DV-TableauCW\FinalWorkbook.twb Files\Users\nicolavitale\Desktop\DataVisualization-COMP6234\DV-CW2\GIT\DataVisualisation\TableuxCoursework\DV-TableauCW\FinalWorkbook.twb Files\C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\VisCWdata.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Geocode].[EstablishmentDetail_Id]' />
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation name='Geocode' table='[Geocode$]' type='table'>
            <columns gridOrigin='A1:C1374:no:A1:C1374:0' header='yes' outcome='2'>
              <column datatype='real' name='Longitude' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
            </columns>
          </relation>
          <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
            <columns gridOrigin='A1:U1374:no:A1:U1374:0' header='yes' outcome='2'>
              <column datatype='string' name='FHRSID' ordinal='3' />
              <column datatype='string' name='LocalAuthorityBusinessID' ordinal='4' />
              <column datatype='string' name='BusinessName' ordinal='5' />
              <column datatype='string' name='BusinessType' ordinal='6' />
              <column datatype='integer' name='BusinessTypeID' ordinal='7' />
              <column datatype='string' name='AddressLine1' ordinal='8' />
              <column datatype='string' name='AddressLine2' ordinal='9' />
              <column datatype='string' name='AddressLine3' ordinal='10' />
              <column datatype='string' name='AddressLine4' ordinal='11' />
              <column datatype='string' name='PostCode' ordinal='12' />
              <column datatype='string' name='RatingValue' ordinal='13' />
              <column datatype='string' name='RatingKey' ordinal='14' />
              <column datatype='string' name='RatingDate' ordinal='15' />
              <column datatype='integer' name='LocalAuthorityCode' ordinal='16' />
              <column datatype='string' name='LocalAuthorityName' ordinal='17' />
              <column datatype='string' name='LocalAuthorityWebSite' ordinal='18' />
              <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='19' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='20' />
              <column datatype='string' name='SchemeType' ordinal='21' />
              <column datatype='string' name='NewRatingPending' ordinal='22' />
              <column datatype='integer' name='EstablishmentCollection_Id' ordinal='23' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (EstablishmentDetail)]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (EstablishmentDetail)]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (EstablishmentDetail)' datatype='integer' name='[EstablishmentDetail_Id (EstablishmentDetail)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='string' name='[FHRSID]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating Value' datatype='string' name='[RatingValue]' role='dimension' type='nominal' />
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
      <group caption='Action (Business Type)' hidden='true' name='[Action (Business Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
          <groupfilter function='level-members' level='[none:Latitude:qk]' />
          <groupfilter function='level-members' level='[none:Longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.797642' measure-ordering='alphabetic' measure-percentage='0.131631' parameter-percentage='0.0707269' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:RatingValue:nk]' type='palette'>
            <map to='#616161'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#a50f15'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>&quot;5&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='GGLmaps' name='[Action10]'>
      <activation type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Map Best' />
      <link caption='' expression='https://www.google.co.uk/maps/place/&lt;[BusinessName]&gt;/@&lt;[Longitude]&gt;,&lt;[Latitude]&gt;.' />
    </action>
    <action caption='Highlight3' name='[Action11]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Google Maps' name='[Action12]'>
      <activation type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Tableau Map' />
      <link caption='' expression='https://www.google.co.uk/maps/place/&lt;[BusinessName]&gt;/@&lt;[Longitude]&gt;,&lt;[Latitude]&gt;.' />
    </action>
    <action caption='Highlight 1 (generated)' name='[Action13]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Rating' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action14]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q2Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action15]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action16]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Tableau Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter Business 1' name='[Action17]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q3' />
      <link caption='Filter Business 1' delimiter=',' escape='\' expression='tsl:Dashboard%20Final?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action18]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q2Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action19]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Map Best' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='FilterSum' name='[Action1]'>
      <source type='sheet' worksheet='Q2' />
      <link caption='FilterSum' delimiter=',' escape='\' expression='tsl:Q2?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter Quality' name='[Action3]'>
      <source datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' type='datasource'>
        <exclude-sheet name='Q2' />
      </source>
      <link caption='Filter Quality' delimiter=',' escape='\' expression='tsl:Q3?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BRatingValue%5D~s0=&lt;[RatingValue]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter Business' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q3' />
      <link caption='Filter Business' delimiter=',' escape='\' expression='tsl:Dashboard%20Pie?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q3' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='FilterSum 1' name='[Action7]'>
      <source type='sheet' worksheet='Q2Bar' />
      <link caption='FilterSum 1' delimiter=',' escape='\' expression='tsl:Q2Bar?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2Bar' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q2Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <datasources>
      <datasource caption='Geocode (VisCWdata) (2)' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)' />
      <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
    </datasources>
    <datasource-dependencies datasource='excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)'>
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
        </aliases>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Map Best'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessName]' derivation='None' name='[none:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <groupfilter function='level-members' level='[none:RatingValue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]' field-type='quantitative' max='-146006.87399746379' min='-165899.6106086809' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]' field-type='quantitative' max='6617219.9699237552' min='6599008.8479348123' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='true' />
            <format attr='enabled' id='tab_arealabels' value='true' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <lod column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]' />
              <lod column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' />
              <lod column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.263370156288147' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#898989' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map Final'>
      <table>
        <view>
          <datasources>
            <datasource caption='Geocode (VisCWdata)' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0axvv590qlybpc1amcgp80da5hh6'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
            <column-instance column='[AddressLine1]' derivation='None' name='[none:AddressLine1:nk]' pivot='key' type='nominal' />
            <column-instance column='[AddressLine2]' derivation='None' name='[none:AddressLine2:nk]' pivot='key' type='nominal' />
            <column-instance column='[BusinessName]' derivation='None' name='[none:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Action (Post Code)]'>
            <groupfilter function='level-members' level='[PostCode]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
                <groupfilter function='level-members' level='[none:Latitude:qk]' />
                <groupfilter function='level-members' level='[none:Longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='701' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='51.000307999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.388382' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='741' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='50.962072999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.303348' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='1227' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='50.923679999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.305723' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]'>
            <groupfilter function='level-members' level='[none:RatingValue:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Action (Post Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]' field-type='quantitative' max='-145176.11276076105' min='-166177.59623931316' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]' field-type='quantitative' max='6614227.4102882687' min='6600172.5517123323' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Business Name:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;AddressLine1:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;AddressLine2:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Post Code:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Rating Value:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.263370156288147' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#820000' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#686868' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]</rows>
        <cols>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='84' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AddressLine1]' />
              <groupfilter function='level-members' level='[AddressLine2]' />
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Business Type,Latitude,Longitude,Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' included-values='in-range'>
            <min>3</min>
            <max>45</max>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude,Post Code)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Business Type,Latitude,Longitude,Post Code,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='112' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='108' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='10692' />
                <format attr='maxwidth' value='10692' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AddressLine1]' />
              <groupfilter function='level-members' level='[AddressLine2]' />
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Business Type,Latitude,Longitude,Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' direction='ASC' />
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <groupfilter function='level-members' level='[none:RatingValue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Latitude,Longitude,Post Code)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Name,Business Type,Latitude,Longitude,Post Code,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='104' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' field-type='quantitative' major-origin='0.0' major-spacing='0.10000000000000001' max='1.0' min='0.0' minor-show='false' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' value='344' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='68' />
            <format attr='width-header' value='28' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='-90' />
            <format attr='text-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='right' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='10' />
            <format attr='wrap' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='on' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <text column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk] / [excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk])</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
    </worksheet>
    <worksheet name='Tableau Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Geocode (VisCWdata) (2)' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating Value' datatype='string' name='[RatingValue]' role='dimension' type='nominal' />
            <column-instance column='[BusinessName]' derivation='None' name='[none:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[Action (Post Code)]'>
            <groupfilter function='level-members' level='[PostCode]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]'>
            <groupfilter function='level-members' level='[none:RatingValue:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[Action (Post Code)]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[Action (Business Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]' field-type='quantitative' max='-149767.25710982253' min='-161825.19832180906' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Latitude:qk]' field-type='quantitative' max='6612317.9708199231' min='6601186.8285758952' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]' value='false' />
            <format attr='break-on-special' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]' value='false' />
            <format attr='show-null-value-warning' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:BusinessName:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:PostCode:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Business Name:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:BusinessName:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Rating Value:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3073480129241943' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#820000' />
                <format attr='has-halo' value='true' />
                <format attr='halo-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Latitude:qk]</rows>
        <cols>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Temporary Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessName]' derivation='Attribute' name='[attr:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='Attribute' name='[attr:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]' field-type='quantitative' max='-136763.57030345857' min='-174514.59487166218' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]' field-type='quantitative' max='6618955.028307993' min='6594166.0211952571' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:BusinessName:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:PostCode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='74984' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='74984' id='3' type='layout-basic' w='69182' x='0' y='0'>
              <zone h='74984' id='1' name='Tableau Map' w='50216' x='18966' y='0' />
              <zone forceUpdate='' h='74984' id='8' param='https://www.google.co.uk/maps/place/Jungle Jeans/@-1.410838,50.901471.' type='web' w='18966' x='0' y='0' />
            </zone>
            <zone fixed-size='780' h='74984' id='4' is-fixed='true' param='vert' type='layout-flow' w='30818' x='69182' y='0'>
              <zone h='74971' id='9' name='Q3' w='30818' x='69182' y='0'>
                <layout-cache cell-count-h='57' has-max-size-w='true' maxwidth='565' minwidth='565' non-cell-size-h='93' type-h='cell' type-w='scalable' />
              </zone>
            </zone>
          </zone>
          <zone h='25016' id='12' name='Q2Bar' w='93678' x='0' y='74984' />
          <zone h='20242' id='11' name='Q3' pane-specification-id='3' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='6322' x='93678' y='74984' />
          <zone h='4774' id='13' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='6322' x='93678' y='95226' />
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Final'>
      <style />
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                  <zone h='72884' id='1' name='Q3' w='33347' x='66653' y='0' />
                  <zone h='27116' id='9' name='Q2Bar' w='87818' x='0' y='72884' />
                  <zone h='9548' id='13' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='12182' x='87818' y='72884' />
                  <zone h='17568' id='6' name='Q3' pane-specification-id='3' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='12182' x='87818' y='82432' />
                  <zone h='72884' id='17' name='Map Best' w='49229' x='17424' y='0' />
                  <zone forceUpdate='' h='72884' id='18' param='https://www.google.co.uk/maps/place/Pizza Chicken Hot 4 You/@-1.399412,50.90974.' type='web' w='17424' x='0' y='0' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Pie'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='83705' id='1' name='Q3' w='34466' x='65534' y='0' />
              <zone h='16295' id='7' name='Q2' show-title='true' w='100000' x='0' y='83705' />
              <zone h='83705' id='8' name='Temporary Map' w='65534' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='16550' id='6' name='Q3' pane-specification-id='3' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='8627' x='1089' y='64799' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='68'>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
                  <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;3&quot;</bucket>
                  <bucket>&quot;Restaurant/Cafe/Canteen&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Rating (copy):nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='86'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temporary Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map Final'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine3:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine4:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessType:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:EstablishmentDetail_Id:ok]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Tableau Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:AddressLine1:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:AddressLine2:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:AddressLine3:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:AddressLine4:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:BusinessName:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:BusinessType:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:EstablishmentDetail_Id:ok]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Latitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:Longitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:PostCode:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6 (copy)].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Q2Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Tableau Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard Final'>
      <viewpoints>
        <viewpoint name='Map Best'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <color-one-way>
              <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' name='Dashboard Pie'>
      <viewpoints>
        <viewpoint name='Q2'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='worksheet' name='Map Best'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q3' width='192'>
      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
      Bf+aIvpVHlz0AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2Bar' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABnWAAAZ1gEY0crt
      AAAgAElEQVR4nO2dd5hV1fWw33Pb3Hun98b0CsMMMzBD7yBgBRUL2I2axJjEEhOjSczPLzEx
      xsQSTaKxgwpKE6UjvddhYBiGGZjK9H57Oef7AzTAPYegMoPCeZ/H55F995yzTllnr7XX2msL
      kiRJqKhcpmgutgAqKhcTXW8eXJIk1AFG5btMrypAV1cXWq22N0+hovKt6FUFEASBwMDA3jyF
      isq3QvUBVC5rVAVQuaxRFUDlskZVAJXLGlUBVC5rVAVQuaxRFUDlsqZX4wCIXrzvP+HTLORO
      QpN/Ra+eWkXlfOhdBZAkaKnxbbd19uppVVTOF9UEUrms6d0RQBAgO863PSKoV0+ronK+9LIC
      gCYnwbc9WFUAle8GqgmkclnTu+sBEOgwD/NpN+njMfXmiVVUzpPeNYHQ0GMq8G3VaVUFUPlO
      oJpAKpc1qgKoXNaoCqByWaMqgMplzbdSALejh8aWk2kN1q5WSg8fwer0XBDBVFT6gm+uAKKX
      tYvf4/MthxBdXcyfvwRLVzMfLVyGqJZCUfme8I0VoPrQDizmaMxAZ2055qRBDB02EmN3I91e
      8QKKqKLSe3yjOIDb0syW0lauGJ3Nml1duFxOjMZQEDSYBAmrx4vWbsPhdNBg8R0NNIF+hPj1
      cghCReU8+EZvYWdrC4JoZ+XqjVTUuxjWfwKdrc1IYgbdgp5QnQ4/vRaX283Ow60+fz80KZSE
      YDUUpnLx+UYKEJmcw6zkHLqby1i7p5vUzAEcOfAh7743h6jswZi0AoKgQRDUSSaV7zZCb1aH
      bu/oZE6x/AgwPCW8t06ronLeqJ9olcsaVQFULmtUBVC5rFEVQOWyRlUAlcsaVQFULmtUBVC5
      rFEVQOWyRlUAlcsaRQUQRVFNa1a55FFUgKeefY01G3b0pSwqKn3OOU2ghqYWPv50TV/JoqLS
      55wzG7S5tYOy8r1ER4aRlpJAfExkX8mlotInKCrAwOxUAvzNmE1GKo7XEhkeqiqAyiWHogLc
      NvOqvpRDReWicE4fQBRFRK8bi9WOOh+kcimiOAJ4LA0sXHWQGGMLe8rbmHrTXQyIV8uaq1xa
      KI4AzZUHicnKouy4lbtmjufIUZmtjlRUvucoKkBk8gAOrvmYiOwCykrKyMpM7Eu5VFT6BBkT
      SMJmseAmgNl3/QBBEPB6UzEHmPteOhWVXkZGAUTKindR23CCnSU1FA3OobZsP/2n3sPkfHUU
      ULm0kFEALYNHTSSu5AvM6eO5Ir8fXblxfFFn6XvpVFR6GcVZoIiUHI69+zFzDoXQ3W1jxqy7
      +lIuFZU+QVEB2uuPMeTK2fSPMmA0+6PVCH0pl4pKn6CoADqthkXv/ov9CVGAQMGYaQzJiv/a
      J2hrs/m02aICvvZxVFR6A0UFCEocxM9+GE9njxWTfxAREadXchNZ/+l8arpcBMZkMmNyIV98
      +gl1HQ5iswq5YngOgiAgShLbdtT6HDs1wA8GxPTG9aiofC0U4wAar5WlixezY+dOli5eTJvj
      tGQIrw1NaDq3zb6Z5vKDdDUdpdYTxR13zqb+4E4copo4ofL9QHEEaCzfR+qYmUzMjcFSs481
      xRUkjMs5+aM2gLFjclnzyXwshmBsHW2ERkSj0egJFt10iRImbV9dgorKN0dxBAhPSKNsywq2
      bd/OZ2t3kppymv3vcdLW6WTcdTeTbmigukvA6XKAJOJAQOf10tXVhd1u74trUFH5xigqgCEk
      gYLsBATRBcGJZMcH//dHycH89+dyuKyMEz0a0rL701W5l717dmL1jyTMT09wcDAmk7oHgMp3
      G0UFaK/YQa03gqJhI8iNdLNhf/V/f9QHc+edM5FEuOmOe4kKCWPWLdeh1Qdw68xr0AjqlKnK
      9wNFH0CrN+C0dNLZ1YPLLSJoz9QV/+BIBuX/d4VYQGg0g0Kje09SFZVeQHEECEkeTG6UyKaN
      G2nRxjI2N6Ev5VJR6RMUFUBCg+R10dJmwaj14lY3flS5BFFUgK7jOymzRJAWaSbc38OGPZV9
      KZeKSp9wjhEAPC47drsDS48NvUHfh2KpqPQNsgogSRJBSQWk+3fRYndxwqKnKEtNXVC59JBV
      gPI9X/Daa/+mTRvHtVPG0Hx0H8UVDX0tm4pKryOjAB72lZ7g3gd+iOv4et5esI4rbrqHsXlJ
      fS+dikovI7sk0hAQjL+fgYDQWGZfP4O4EGPfS6ai0gfIBsKsrXWsWrWK8qpa7FvWY9JrScsZ
      TFq8urm1yqWFjALomDR1Gt12F4mJXy6CFwj2V0cBlUsPGQXQEJeUSlzfy6Ki0ufIOMESx49X
      4XU7cXvVhS0qlzYyI4CXneuWsdntwBaQSkKoARBIzy0iMyGizwVUUelNZH2AGbPuoGzPZrrM
      qSSG+QEQHOLfx6KpqPQ+soEwP1MgAwsK8fa00NTURH1tFTZ3X4umotL7KOYCNVUUQ3gGw4YN
      Iz85hJ0lx/pSLhWVPkFxQUxkcjaL3l+Mtymd2oojDL/2jr6US0WlT1BUAH1wP+66YyYnGlvJ
      LSgiKiywL+VSUekTFBVAkiT8g8LIDFajvyqXLoo+QFvFLvbXdPelLCoqfY7iCCAIEp/OfZPS
      pGhAIHf4BPLSYvtQNBWV3ke5Nmh8DvfeHoPD6UZv0BMWEdqXcqmo9AnnqA4tsWXdGupbLKSm
      xlEw7hqC1FiYyiWGchzgyC7CB01jSFYChfkZ7D90/IzfHZZOjpaX0959svy5rbudo0crsbm8
      vSuxisoFRLkuUGwih7euoPx4LRu37CMh4bQ1waKND977gNb2dubPmUOnrZv58xfR3FjNvEUr
      ECU1iU7l+4GiAhgj0rh+Uj4ao5nEgaMYnBz23x8lLVfeeCvDhw0l2uigqqIcU0Ieo0aPQ995
      gm6vWkRI5fuBogI4WitZuHY/mdlZVO1eS0ltx39/1PoRGxXCwa0rsITnEa13YDSZQdDgL4hY
      vV4sFgsup7MvrkFF5RujqADW9mb6D5vEmDFjuGrCYOob2k77VWLX2iUc6Qnm1mvGEhgcQld7
      K5LooUvQEaLVYjQa0enUWkIq321kZoE8fDb3LUprW2jttFG6KZLO1mbG3vjAVz3cHVXMW76F
      1IwM3nm7jOtuvZMwx1zefbeS8Ix8zFoNgiCg0Srql4rKdwJBkpQ91vbmejotJ82YkIgYwoK+
      3m7xre0dzP7zVp/22yalc9fUrK8pqorKhUcxDtB5bCdz1lbQPyUKAUjxC/7aCqCi8l1HORDm
      ZyIlYwCFg5IRBPAzqVEwlUsPRQVA0HJwxyraqiMQEBg0cjL5GWqtCJVLC0UFcDssFEyYwdSi
      NNQdj1QuVRQVQETPzuVzKV5vREBg5LSbGJ2X3Ieiqaj0PooKEJIwgJ8/nPrVv1UfQOVSRFEB
      rO0NbNpZgih6OHbkCKNvvJfCtKi+lE1FpddRXg8Qncw11yYD0HV8Nxvq20FVAJVLDEUFaDte
      zNyl65EkCVHQM/3Wuy7YSd1eCavL49NuEDzoNDLp1Bo/BEF5wkpF5ZsiWxrx0O4dNHbZyckZ
      +N9mj+uCnXRfXSe2rVU+7ePDS8gNqvH9g8hrwJx2wc6vovIlMsk6AiHhUcTGxhIbE0V3QwWr
      N+zEo6b4q1yCyJZHj09JI7Srlc8WLcAbms6Tv76HIJOh76VTUellZBRAomz3ehat3s2ka2+g
      f3I0gteFy63BoO9dO7zbNIjGoIIz2jQeJxGL3wDNmRt0CIERaK5+qFflUbn0kfUBmpvaiImJ
      4NCujRzaBSCQP+oKCjLje1UYjyYYlz7gjDZBskOjr18ghfb0qiwqlwey5dHHXj2TsX0vi4pK
      n3NR5harazpparL4tEdO1JESdeYIgE6DMGmgT1/81JKNKt+ei6IALpcXl0z5FJdbrqSKgCC3
      OYfOdOEFU7nsUNcsqlzWfOfDq5Kgpcs0xKfdJRqoqmr3aQ806ugfE9QXoqlcAnznFQBBS5e5
      yKe5x+5me1WjT3t8iElVAJXzRjWBVC5rVAVQuaxRFUDlskZVAJXLmm/lBDus3Xh1Zvz9dNh7
      Omho6SS2XyImg/YbHa++3UZxdccZbVqNwMCEkG8jpoqKIt94BGiuKeOVv/+NIye6kNw9zJ+3
      kLraSuYtXvmNy6O39jioarGc8V91i2/EWEXlQvGNFeDEiRYy0pIA6Kw9gjEhl7FjJ6DrqKdH
      LY+u8j3hG5tA+cPH4OpqAsDpdGA0hX5VHt3i9aJzOnA5L9wqsrPxiiKtrVaf9gC1iJHK1+CC
      BMICgkLoOnJmeXSDRkCn+2a+wPngsHvYvrPOp92WGgbj1OWTKufHt1IArVaLViMQEJtJiG0O
      775bSWj6oFPl0bVotL2nACoqF4JvpQBDJl//1f9fN/veby2Mikpfo8YBVC5rVAVQuaxRFUDl
      suY7nw7tESU+3V3r026xKkyx1h3G+/dXfZpt6cNon/CAzB/Ic6iuk8om34X3U7KjyYoOPO/j
      qHy3+c4rAIBcXPkcW5uBJBOIE79ecE6STv6ncmnzvVCAr41GJhgm1waIkiT7op9Lwc7+TQI8
      Hl8FEwQBnVbmvJIEosz6Z0EDmq9nlQpq4O9bcekpQEQgmuuH+jQLBvng2LGmHg7VdZ3XoQXA
      6G+g5izzq73Lwa9e2uzTPzkuiKfu85XFWLWXiFWv+LRb+o+nc8z5FyEO89MRqFdjLd8G1QlW
      uaxRFUDlsuZ7YQIdrWijo8N+RptHIeO0zR3Ep42+JRy9GjNuXYtPu9Xpu08BQE1tJ42NZ6Zi
      azQC1xUmnK/YWBweth/1PWe4JpLcaQ/7tJ/w+lMu01+JUZmR2M/yPTxekd3H2nz6mgw6BiWF
      +rTXNPaweF2FT3tEuD+pKb79vw6iJLF7T71Pu5+fjkG5MT7tFouL0rJmn/YBMQ5mFXb4tGNK
      QQjM+1Yyfi8UoLPLQXOLb+anHA6vnmq70k42jvM+p8Xi8jmngh+tiMcr0tTle04hxIgjcZBP
      e1ezhaYamQetgMsr4T1rxsvl8VLVbvPpG2jUkdkv2Ke9pcfBzjJfpYuPd6IJ9jtvWeTwekXZ
      Y5tMeoLjfSt3tHfYZfvrXRbI8a0Ags73er4uqgmkclnzvRgBvq/0WFxs3e5b2Tom0h+3zI4j
      DtnSkMpsLW9G4MxhyeX2yp5TpxHYI2OOWO3yJmBLi1X2OPFxQSQl9u0SVac+lqYg39k0U80R
      AtY849NeGl5Iedj5mUaqAvQiXq9Ie7vdp12v09JmcX7r47dbfKPhLpdX9pwAza2+ppESSscJ
      Den7mqyiYMKpj/Np19lLoa7Mp71bjKdem3lex1ZNIJXLmu/UCFBR2U5trW9Qympzf+tjN7dY
      OXJEztkLIjUl7Fsf/+vQ1m5j0+Yqn/bYmEDS033LvlfXdFJT03lex75Y6RuVx9o5caL7TFku
      0LFbehysL/V1ghP8+5N9/dM+7dZOAc4vtvndUgCHw4PDIW+TflvcLi9d3b5mR3h475zvXHg8
      oqwswSFGmd4n74tc/+8SvSmj2yPSJfMRDAsIwB3pO1XrdXZC1/ntIKSaQCqXNd+pEeBi0NHp
      4GiFb+Cos9N3/l4Cyhu6fdp7ZJzRb0J3l1NWlvYOeaf2+4rH7ZW9Trv965m6nVaX7PM4WtPJ
      URmTMT0tzCd5UFWADrtPlPlcHK73NS6/7oNTorPLQadM4OxSw+0ROVLe+q2P02F10SGzLqTs
      eDsVlb57R6Sn+fp6F8wEsna1Unr4iGJqgYrKd5ELMgKIri7mz19CTm4mHy08wj23XovmIuWp
      22xuymRme3p6eq9Il0rv0mNxyT5TJdra5OMdZUdaOfu1vCAK0FlbjjlpEEOHFXC0+E26vSIh
      vVgU61zYHR7Z4U/l+4vV6rogz7TymO8xLogJ5HI5MRpNIGgwCRIOdSmhyveECzICBIaE0nm4
      GUnMoFvQE3wqbVKQQHD4ZjdKOuPX2uZUcFlAPNPR1GgE/P195829ogar1+DTrhe8mHS+zqrL
      q8Uh6s9LDklC1kl1fZ/9Hq8bwS1TgVtrQNL7bk/rdHpk74Hze3oPLogC+MdkEuXdw7vvzSEq
      ezDGr/KGRYzVa3z6u8P744mQ2fxaAX1LMVrLiTPazGY/hg/L9unb5jSxvc03Zz/SaKUg1Dea
      eMwSyuHuyPOWZfOW6vPu+31A42jHr26jT7snKAl3rG8CWl19N3X1vlOP31cuzDSooOfKm+68
      IIdSUelLeiUO4PV6cTqduFxuUlJ8v8be4HA8wfJhfzn02mg09jOdaqNRT2iobxhc6zaSpvc9
      doRBJDTQt3+cMRCX+fxludTQOILQ632fkegfiTv80r8vgnTOAjvfDFEU8Xq9uFwuDAZfe/z0
      dqvVir+/v0/7l0iShMfjQa/X4/F48Hg8GI1GvF4vkiSh052pwx6PB41Gg0ajwW634+fnh0aj
      weVyodfrfSKBX1cWt9uNwWBAFEWcTicmkwlRFBFFUVYWQRDQarU4HA50Oh06nQ63241Op/tW
      spzeLkkSNpsNf3//r+69Xn+mX+P1nlxroNVqcTqdaDSar+7pl/frQshyev/Tn93pnH6/XK6T
      09MGg+GM+3WhZVHq3ysKoKLyfeGipEJ0tjXh1fkTHhwAQFtDDVbBn8QY31RgJAmvKPp8FRQR
      vXR195y1T5lAQGAQet2FCXxbOlo4XluPoDeTnp6OUa98XNHrweZwYdJDefkxwvslExUSINvX
      6/XgPWuxv0ajVdxoRBLdVB87htcQTGpiDF839ChJIl6vpHh8t9PKscpj2N2QmJpOaKBJ8Rzt
      LQ0IxmBCA83/+8Sil8bGBgLDY/D3O79X0OO0cfzYMawukX7J6YQHm8//eiUJt8xIBBdJAb5Y
      +BatEaOg/DMSJv0Y6fAiyoQcHr19qm9n0c3br71IStGVjCnMwfC/XmJbKy//7UU6ui20dtmI
      CA1B0Ju4/+e/IjvOt6bnF4ve4UC9k7SMTAZkphEVHU2gWWkxuETlnrW8+PZiwiKjEJ0W7NoI
      Hn/850QHyfyN6OKDfzzH9qMthIcHY7M7sTi1/P7ZPxDt7/vS7Vz9MYu+2AeAx2Wno8tC9pgZ
      /Ore6bLSbF7yLnNXH0AjOrjuB79kWlH6ue8NgCTR0drA/l3b+WLDZq594LcMTfP1jeztNfzh
      j8/jNYZg0gu0tFu466HHKcqMlT3s53P/gTbrGtr3f8rgGx5lZNY5ZtbcVl5/6U9MvvmHLFm0
      iIceeZyEcGXFcXTW89yfnsemCcDfqKW5tZtZP3qUUTnyFTpWLZpLUPowigam4XX0sG7ZIhp0
      Kdw9faxP34uiAOKpL53bZsXlFtFLEpLS8gmNnmnTpvLRvPls3RzL5DFF6LUC8SnZxIbLfEn9
      I3nsid/gPHGQH/5lAU/85jf4++kwmuTjDkPGTiPoyBHKjpTz5uoldDolhk+9mTuvGeXbWZL4
      YtVyCqbczj3XDgfRxd9++3O2H6pm+giZJXj2DvZWNjL7lht48e2lvPTsL3npz7+nurGbaJmX
      rnDiDeSOvprqsn18NG8hwTlDmTltjOJ9LCsrZcyMewhvXs/+ksPnVgDRS3nJbtZ8sZ6Kqhoa
      263c9sCj5CXKV1Yo2b4OV3gu/+9X9+GnEVg77x8sX7uFosyZsv29Hg+IIl0dbTjc/6sOq4TH
      40b0emhrb8fjPbcVXrZnE52mNP74m59g0gpsWvQ6y1ZvZFTObbL901IT+fdbL7E1I4+e2sMQ
      lsFdd/lW4YCLmA3aXFuBp9sJ5QfQNrSBbymfkwgC8anZjCjMY87CtWwSHOg1AqMC4uQVQNBg
      NvujNfmBRovZbMbfqHyZDmsPzc1NnGhowOYWSEhKJqVftGJ/u8NBUmTEyZwSrYHgIDM2m0IG
      pyQhAoEBAaDVYdBq0Qgaxbqjju4WFsybS3G1letv/RGjB/c/ZykWURRprDmKtauTdvtxtm7d
      SmxKNimxMivcHJ28+Z9/I4Zl88Mf/5jXXvsXScnJiuab3eEgMCwCo/bk78EhIdhOnDtrdsea
      JdjbLXR88C92BBrIHz+dK0cMkO8sSXy68GNs3e28/c+/YzJomXbLAxSk+prBDocDU2g45lOj
      f0hICLYjygte+qXlkJ8ex6o9O0HSMPPKESREyiv6RVGApMw8mg7XQXoBWE5AYDw5qQoaILp5
      56U/UuON5rGn/0hanG9O9xlYGnjqmefo6HEQ5BV5/NGfIehNPPT40wzo51uLZu+Gpbzz+W5G
      T72eB2ePICUhDr1W2cwy+Qey7N0XWPn+SRm8HjfTRincRkFDoJ+GV//9NkF4+c3vfo9X0ige
      f++mFWzedxSNVsdHb77CR29C+vCrePTOa2T7Z+YWUVrbgtsYRZIR9u3bh+gfK68ApjB+8aun
      2LRpI2+/8QZNrZ3s3L6VhPBJBJt9bWODn4m6fat48MG1AIiil375kxXvy9Sb7mdI95kKEhbj
      u5AdAL0/d//4Uaxnrf6Lj5T3jfQGI62H1vHgg5u/kiVygK858yWfffQmLX4p/O2lR7HUHeT9
      99+npdvOPdeM8Ol7UWaBJEmkubaSnXtLEHX+DBrUn4qKaiaMG4327E+e6KXy2HESklNP2f8S
      1u5OPBoTwQEy89Sil+6eHlweL1pBorOzG3NgCGFhIbIvnt3SRfXxo+zfX8zefQdwYGDyjNu5
      bqzMkClJ2KwW3Gc5qn4mf4wGGSUQPTQ2NaM3mtGddl1m/0BZh9xpt2JznJm1qjMYCfSXN98k
      0UNNRRkHDh8FfQD5hUX0iwzxyXg8G5fDSk3lEbZs3kzO5DsolDHHXA479tO2uXU77fQ4JVIS
      5H2A/dvWUlH/37SXsNgURg0rwE/OZ/M4WL3ic5rPSqkYOvFaMmJ9P1Jupx2L1UZ3VxceEQJD
      gnFY7cT1iz/jvn5Jd1cn/oHBX71LLns3J9rsJMuM7BdlBGg6uovfP/82RWPH4W49zML5cxg8
      5TYmyj04jZa09DQkUaSu4iDr129g++5irrn/10wbkuLbX5DY+OkHbD7cSEp8CLv2HiQybTBP
      /uInyBVSbm2o5mDJISqO1eBwufELCkEjKH0TJJZ//CYl1V+uNhKISs7h9lunIxsysrfz2quv
      MOu2O1i8ehsP3X8ngSblvKPizctYuvHAyTNJEpIkkTx4IvffOEm2f8nGJbw6fxNDhxci2Kp5
      9vMVPPzU78iKkxvuJRoqD7G9pIqstFiWL1tFVNYwClLla/wYjCb0fkYsHU1s3bSBjZu2YcoY
      w29+eKNsf41G89VMneR1s3L+G/TwMNNH+aarIGiIjI7FEODC1t3C8s8+x6aPoGC8/Ein04os
      nfsGWw5WgeghLC4BSTLyxJOPE2L0fWl2fbGITcVfpqwIBEclcdvtt8ofW7a1l9m9dSNpo67j
      B3dcxe6VH7H3YAU6Pz/5NQSSl53rP2fp8nW4dAG0Nxxn5s/+zJSCfvIHtzazctshpl83hdfn
      reflZ5/muWf/xPGmHvISfL8ujXXVuLQmMgYMYmp6JllZGQQpzgIJjJw8ndxTK8Akr4t5b77M
      ur2DmD4yQ0Z2ke7ubjyOHvaVHMb1P5y93JFTSckfT1dzDYvmz6PGbiIvW3nP413btzH6uju5
      Y9rgk6d77hfsPniMrLgC385uC2+//i8MUcl8vGARM2+5kfVL3mbA4GEMSfRNems8VsKH8xZw
      rNmCSbIR1H8yTz5wve9xT5E3bAJflqKytDdwdN9mui0K5Sy1BnIH5bNt3QpWrdlIwRW3cNN1
      Uwjwk5+Ordyznm3VHv7091fw6yrnoUefIW38LYQY5U3JQSMmk5Bz0hyTRC8rP36TT9ft5b7p
      I336XhQF0Gl1OK12JAkGjr6KYSUH8OgURBG97Nu5hS4CuXrSRDZ8+j5Go1F5DlgU8Wi0REeG
      g5+RAD8DGo0GUZR/+TIyM1iw9FUEcwiH9u/iPZvET37xBNnxMl9GQSA2IYUvjYCawzto7fES
      JGeKfYnXxZp1G8HRyaKPP8Lop2fs1Okkykz7aZAo3rKS5Rv3Uzjhah6cMhqzn/KI4fF6kGzd
      1Nae3ELK6QGtV6G6nNtFl8vLzHHjKC6vZ3hRESXrF2O12QFfBaitKOHg8WbGXnEVmuZiGpQ+
      UKeQJBFLTzcavYmOhipC0ocxbrBCcSq3jX+/8Awbi2vIGTIcnbONxR9/yLCJ15ER5/uR6uxo
      Jzi6H8EmPe2tOiaNH0Zxl3Ldk4iYBCJO1d5tqymlvtVCYZC8f6H9/e9//3vFI/USoSEBrFw8
      nwNHq9i3fT0ltU5mz76Z8ACZL69GQ+7g4aTEBHNwz3bKqxtobm4jPjWDiCAZ29jZzcpVqykp
      rcDa1UZJSQlNnTZGjptCjEzZkc3LPqROl8n/PfEzJk6cgL1mN3sbJIbnKn95Ra8Hl9uNtauT
      1MHjGJaT4uu7AAgCZv8ggkMjKMgdQFCAP2azmX6JKQTIzExt/fx93pi/CvRGrO0n2LxxA8c7
      JAYPSJWVo6biECUHDrBr1y527dpFl0tDdl4hmYkyc/BuO2vWrMbhETheVY3RoKW87DADRkwl
      KcJXGeOSsynIzaS1uoyd+0ppbmrCEBJDWoL8DNmRHSt54eXX+WLDVmIGjmF0spY1h9rJz5Ab
      qUW8gp6sAQOJiwrHbDZjNpuJTUgm2N83tcGocbN06XL0QREYBDdbNnxB5tDJCsc++7IthCbn
      MX5oruxuPRctFcLa0cTBI8eQNHrSswYQEXweEUTAae1g766dGOMHUZDhW2Ibr4vaunpamxtp
      77bhZwokNjaa2Ph+mA2+Q+zSd/5CpaGAh2dfAcDaef9gR08CT94nF3ySqCvbzXsfLaa+uQO0
      etJyCrn7jlsIk3lwuO0cqKgjNyOeFUsWU9nYw5AxkxiRJz9f393eTFvXmWaDMSCEWJnaN2dI
      JYk01ddgCIoiLEjhPrqtLFu2jPae02v3CIycMoPUKN8R4HREr4uKQweo7PBy5awr1PwAABvT
      SURBVLhhsn3ee/V5imbch19rCX/75wcUDR2EIzSPH14vE08B2uqOsmr9dmLS8xhVlMeJsl24
      QrPIVPBfjuzdxIr1O7C7JdJyh3PtlNEYFYKi+zavoOTYmWXWU3JHMKbA10y9KCaQpbsDqwuS
      U05+2byOHjo1ECIbRpdorDzAqm1lZCaHs3z5GiLTi7h7RIT8wQXYvnIhe6raT876SF50QQk8
      8vMfynY3+JkpXb+An2xZfFIWj5vsMQpff0nis89WcNUdD5EVFwKSxJbP3mX9vmPcMFrG2XN2
      sXjlBrx1/pQ0eSnqn8b6Be8SEfcbMiJ8R7uO5noOVZxZwDa8X6aiAuxft4A3F24kPSWBE22d
      iG6Ju376GAMTZKZB9f5cNf0m+euSwdFZz2uvvk6X5M9VM25iaHIM6w+XKPbPTovjkyUr+e2D
      t/D4Qzpeeu0tsq5QKFDrsTPn3bkkDhrC5sXvsK90DAVhHXhS+skqgMflIi6jgHszCpAsTaw9
      2IzX7QKdvOnpp5XYunUn4yZPxt9wUkn8TTIfKC6SAmxb/iEfrtpLYGDAV7b8oAk3cs90main
      6GHhgiVEpWayaOUu7nvgIUrWzGNr6QmmFCT69re3cbBZ4NFf/Zpgox7R4+SD/7xCTauNgfG+
      duDIK2cx+ArQnTZFqvdTWq0mkJEcw6IP3iU2KhS8bqprT3DrUIWwvyDgbDrKik6BxFG3MqIw
      nn1b1+F0ydvpbls7SxYtZtDQEV85hNoQpQgh7Cku45a77+XIgRL+7+ePcGjtRxSXVcsrgLOH
      d95+k8az6h1dc9uDDJSZHCjevJrowVcxPqCdd//1Apbrr6OhRXnvgsLJN5HSZQUEkgaO4Jk/
      ZtDjUfJfRDxoScspYsqoIfzrxb/x4bZObnroStneZTtW8Orc5Zj8A9HjorHTwbG6Zh67Z4Zs
      //7DruD6ugb80vIYXyBvPn7JRVGA8dfOYn9pNaNu+RlFGSc3sxCUdkcUNISYdVgMsfzy4amE
      +Ut8XNnIhLEKjqc5kpEZgfzht0+h1+vwuF3EZg0jLVp+mN++cj7bauHuO28jMcr3RThTFoGJ
      N9xD2rEK2rosIGi5ZmYy8VEKJoopggd/eD/V1dW4/Q04rR0k508lO1beTEkrmMDNU47SGVHA
      TZMGn1sWYPjQApbvK+cX990OjhY+/aKUW356lXxnvZH0+FD21TYye8YkvjSHYxXKMYaGhlC2
      4zDXP3QHDwf785cX3yB44BRFWTQ6A5HhX35lBQJCI5F3OwGdmZkzruDwiWbyUvL4yS+eYOnC
      TwiVMyM5+ULf3GlnZ3kb10/K46NtTfz8jmsVZRE0OqbedK/i72f0vTg+gERnayNW0Y/4qP9V
      mFbC67JR32ohMS4aPBb2l54gNzcDrcKshCRJSKKI2+NBo9Wh02oUo8dL57xMlz6Ogzs3ExSX
      St7AgWT1H0BGoox/8S358lafK5J9Pn1k+0oSoiQhCILi34oeB0s/ns/gK28mQeHF/++xPRws
      KSVzwEAMWoHOpmpK66yMKsxR+gO8ogSii6amVgJCIwnyP8cOM9LJ7K8vZf1f1y1JEl1NVXw0
      dy72qME8coeCon9NLvv1AEvn/IN+o29nQLSOyrKDHDx8lIDEXK4ane/bWZJwuZwnHzRQd2Qf
      jqA0shMj0MulFEsSXklCq9Fgs3RhsbkJCQvFcJFKxvQmu1bNo0GXwNFNn9Fs9YLWj9k//BmD
      kmV8NUmkx2LFHBCI3DbK50L0uHF6JUx+8qMFgNvl/GoPufa6cmqdgQzOSsSg9zV4LlIqxKlT
      SiIutwetTofuHPn+Xo8Tj6TDZWmjqqaB6KR0IoPN8l+LU+sHvqT0wF4SMvMINhtk+7c21uEX
      HEOg6TysQUlk7mt/ZGd5G3q9HntPO159IDPu/AnThsoEwmxtvL5oIzeNzeDPL/ybbpdIfMYQ
      HvnpPfjrfGWRJJHujjbwC0RwdFLXZiczPVk23A8nc2K+vJUtNUfoMcSQFhuKRq7/aV9cr8eN
      xyui1xvk+3L6ZuASbpcb4X+MpHP/+VeSBw1mw55GHn3gRg5vXEixO427r/JdWI+zh+eefYbg
      jNHcPH0KoQHGC7rh9/IP/sHy7UcxGAy47N3YvHomzriD2dN8Z7Auig+wZc1SEvLHsn3B66zZ
      VU5IbCo/+ulDpEXL2OCSl4X/eRFz5jA2fv4ZYVFRtLd9xF0PP8EAuSkzWwsvvPganadqRrY2
      NxIUlcgDP/0FmbG+VmlEzP+eS/4KQeDqmXdg/XA+xn65xAr1uJMmM1nOGQcQ3dTX17FnRwtj
      Zj/C1UVJfPz685TVdTMk2Vf2qv3rePHdzzGb/EDQ4IeTjPGzuW2KvD+w5L2X2VV+smKarasN
      lzaAq2+9j6tH9vft7Orhw2WbmT5mAH//2yscb+4ha8h4fvbAbIwy356DW5dDwnAatn3CwjU7
      8QuO4e4f/5SCNPk4wJixI3ntzY+oa2zhR3tXExiRyM8fu1r+viDiMEWSb+riD7/9Nf3Ss8nJ
      zmbQkGHEhMpMQIhu9u/chsMvkghdN3uONDBu8lRiFHarGXfVTNp65tFjjGdIP4EyVyI3T5a/
      hxdFARrrjuEXEsGh7jD+9vLLNJZ8wfINu3no5om+nSWRJovEAHcrcTmjuHFKETtWzKOmoVNe
      AczhXDlxJAtXbGPUtBkc3bmcMdfeRUrk/44zuGxdtNkgNkJp90GBkOhk7vvpwxzYvo5PFh1k
      UubVZ8wgnYHeRILJwaptlSR5U+iI7mZnpZ3xUfLuYVVlBaOumUV4534OuRK5Od+ft7ZUA/IP
      b9SEqRw/8TERWcOIE+ppCx7ChMEKU7heN0ePVlBsaCVt/G08OiqTz957mf3VXQxP9b3e9qZa
      7FIE2yvtPPu3l3DVH+CtNRspSJOfSk0cMIJnni3AZncgCRrMZjMGg3IUW9CamHLDHYydOp3S
      kv1UVtfRZXPJKkD5zpUsWldBtKGH4z1GhmeE8N4nK/jlffKpGeaQGG67/yEqSrYzb/5isq7I
      VFz1dlEUICIkiPnzF2DTRqDBy4Yte+g3VH6hBRod1109kbffn099Sxdlu9eQlDOMHw9QmB4U
      tOSOuILU/oP4bOECSmu7uSY4RHE5ZMm21ew4dDJxyt5xgmMdAlOvns60UcqbrGm0BvJHTiEr
      fySC/hyK5RfMfQ/9AqfDhsMDZgP8+te/INws/zAKRozj76+8gTEmnWDvXp7b1cqN9z2iePio
      pAH87LFfsG39CpatKmb0rRMxGxVsY62ecKmNj1eVk1QUhWgNZPfRDobOkpc/NCKapYvnYXXr
      cXi17Niyheho+SAYQPXRQzR2nBnEi0pIIyVOxgfQB/CD229GEARMAcEMGTGOIb6Zyl/hdNgJ
      CIkgwiBQ7zWRnBDHkVKZYl6nIWi0ZAwaxeOZ+XiFcyjixXKCvW4nDc2txMZEUV1VR2JKCuda
      7fhlhQFB0KDVac9vPagk0tLcQnB4pOJSytqyXfzjtbeJGzSW7BA7O+sFbr5uKlnJMmm/ksT6
      ZfOpPGsD7UGjp1GYJaOQXhdV1TW4vWeuT45NSJZNhTjzVCfX657XtUoSPZ1tSH5BBJmVnUMk
      CZuliy6HSESAlrpWBykKqQ1w0uFsbGokPDqepprjRCWmKEZf18x/jTkrSxiQnfrf2M7Ya5gy
      TMYcEz3U1tbgOCseEhWXJJsK4XV0s3TRQpzmWOJNDnYcqmbaDbPJSZIPhu7e8BnFFU1ntKXl
      j2b8kCyfvhdlBCjbu4XD1WeGqlvsEsMGygQtRC/bN66m4awa/gMKx5KVILOI3tnNijXrsZ9+
      czV6Ro6fTLRMLaKErEL++Hw2n338IXsO1hCZq/Dyn8JfL7HnwBGmTB6P3ylHVjF71G3lwzdf
      4ViHRHTYKf9Go2PWA4+SI7M45/ihXewvrzujLSIxmzFDZF4i4OPX/8yWs/bOGnfDfVw/Vqbq
      nuilpaX5K2Vs6QA/LdicHswyC9NrjuxjT2nVqX/tBiCk1caEobmysky8/m6O175A/2mzGKU0
      On+J18XSuf9md7WFuNOi3Nfd9TBDM3xfapdHYui4/8YgUnKK0J/jAxJgMrBn934mTJtGwKlI
      sNJi/YuiAG5bO8uWrWT46NEYT71ELpdybcnuxmOs3FrFiKK8r2ZEzl6U8hWCQO3h3ZS2GyjM
      ObVeQGtAqTuCgM4vkOm33UfR8XJs+nPEJQSBwsk3UtvYRXJOIfmpSjvSn8IYyg9/dD9//fdi
      HnnyCUL8Tsp+dg2eL5HcVlZ8voyCEaMJPPWAHS7lzTfGTJzCropPuPnuHxBzalF+QIjMRwHA
      beGd1/5KeZOdwC8LgQkCs3/yGwpTfQN5gtfBys8/J3fYKEJOjSpGp7IsGr2Z2x54iNZOKy2t
      7YSGhSqvrNObuedHD9Lw1ze5/9EniD+1I73SfTm2fz0vvLmEwJCQr6ZNoweM4lf3ya9NyCqa
      xI31jeiS+jMu/9yR4IszDSp6+Gzuv9BnTmHasP+9n6vksfH6yy8x4sYHyEtSeMCnYWur4R9v
      zOPunz5KlEz1hdPZv2kZWw4cP6MtceAIrh0n73hKkkRHUy0HSo+iMQYzeMgg/P30imaKJIm0
      NTdiCAzDbNCjPcdUoiSJrFv4Nh2hg7lxokxOv+9fULJjI4bYAWTJZYCeRWtVMc//+1Mee/Jx
      Qk9N/Wi1OsWp0M1L36VWn80smenDs7G21fDaK69xrNkCXjcJA0fw0P23E6TwpZYkiY7WRrSm
      YMxGAzqtVvm+iG4+ePU5DAOuZsap0U3QaBSnziVJwtbZzJ7iQ4haE7n5+YQplHS5KOnQgqAh
      NbM/rq5mGlva8Q8Owe8cwSFBoyc7O4v2xjpaO6yEhocqRoHh1A3obmHdF19wuLKe6H6JBCok
      Q3nsHSxZupqcolEkxccQGRlJbFw/osPlsxKP71/H/3vhdbxaPbWHd/HJih0UDR+mWN+msbKY
      1159lQWLlrBs1TqkwBiyz2FiCZKHg3u2sWXHXmyYSYqLPMeL4aG+ppIN675g1/5S/IIjiQ4P
      UlRGU3AUOVlJmANCMPvp0Z7jpQOIT8nE4OmhrqEZv4BgTHLLPk+xev4bVOsy+dPTj3PVlDFs
      WfI+PYFp9FdQzM4TR3ntlVeYv3AJny9fg10fyoC0frLyCIKWjAG5hAT5ExYShFarVRwtAFqO
      7+N3z7yATdLSUlXKvEWrGDB4OGEy6fYXxQTqbjzKc8+/giYoCp3HSrvLj8d++UvZRSIgUXNw
      Cy/860PCY/vh6m5BCsviVz//gfzXRfIw7/W/c9QdxbQxw6go3sKfn3+VPz7zSwL1vjc3PquQ
      O2fW0xmQwAQ5h+2MY0usW7Wcodfcxd1XD0USnTz/65+z41At1w6XSXH22vjg7XdIHXMTv5pY
      QFPlHv788hvk579MUrCv7C0VO/jTS3O56obrCdU5+PTdF3HwBFcOlZ/a3PfFAt5adpAZ06fh
      7azhny88x0NPPcPABPncpJ7maj754D2O1rWiNwVz9U23MalI/prd1mb+8oc/060NIsggcqLN
      zo8f+zUDE+VNxPaOdvqljz5pohqDSYwLob1DoYq06OKT998iLHcaD187ip7Gcp75w8vkFeQz
      IFrmHRDd7N64iiVrtuJ0i6QOGslds26QfaEBtq9fTeKwa3jk7qsRJA9vv/A7Nuw8SNq1vlNN
      F2Wb1J3rVqBLGsHvf/cUv336aQaGOVi9Zb98Z9HLyqVLyJ96B7958gn+75nfI9RsY3dFs3x/
      Wwu7KtqYeetsRo4YwaxZs9D0HKe6SWF5HgLZ+cMQOqtYvmottc2d59zg2ev1otPpAQFB0KLX
      CWdEns/A0UN9j5u8nAGYzWaS0voTavbQ3CY/hXdo/z76FYzjuqkTGTf5Sq4ck8ee/QcUZdm/
      dw9Dp1zP5HGjmTr9VgYnGiguUyjfLrqY//breKMH8dRvfsM9N4zhw3++TG2PfGZq6bYvaDWm
      8PTTv+XJ3z7NFbkRfLZ6s6IsOQNz2bt+Odv2HGD7+s/ZcaSDgVkya7YB3A5OtHYyIDePAH8z
      MYlZ9IvQ0NAsrzAnDm9jzrLd3PajR3jqyV+ia9zNh8u2KMri9XjR6nQICCBo0Ok0is/ooowA
      VquV4LDMk2aMzo+wkABO2BVqzkgiFpudlLCwk0vy/AIIDtAp1+LRGwnQemlq7YDEUHo6WnF5
      NJgVpge76kv57f97mbT8IvylHhYvXMRPfv0MeUkyXzpBYOyEifz9vXdwtxzB1XaMcnsUt+Yo
      RIJNIWRG+bNm9Soirh7D8eINtLmCSJKpfAAQ4O9Px+FmXF4RP42XpuZWAiNk1hmc1r+2qQlR
      AsltoaXdSqxSaUKnhcqmTmbcOIaY6HCiQ0YQHzKfqhNdJGT5XqvVZsU/KBQ/nRZBkAgLC8FW
      L7/3FkDBhBu4XVjJ1nUrkbRGbrrvZxRlKEyxGsxkJMawcfVykoKuoPXYHo61G7hdLo0bqKs+
      TlhaHoOyktEAo4cPYc7eKkVZho2ZwMoX3+N1Tyt6RzPbj9p47Bb5/Sguig8QYBBZ8Mli7B6o
      OLCNVduOMP2mW4gLk0lZFjRoXR0s+HQVXklk36Zl7KmVmHXzNV/NlJyB1khUoMSct99h644d
      fL5qA0VTb2FCQZpsuZAty+bTFjKIx390G0OKhuI6cYDiRhieJ2d2CIT3y6AgOxG73YHGEMgN
      t8wiKTJIvhSJoKN/Tn8qirexdv0m6jq8zL73B6TFBMva6dFxcZRtW8G8xSvZuHYF1TZ/fnDX
      LIIVKknExkax7tOP+HztJlZ+thS/xEJuuXaC/Fy9VkPF3q3UdENqv0iqDu9i9ZYjXDfzBoL9
      fPuHBvqxZMEntPa4aDxeyqcrNzF5+q2kxcmbV/buVnbvP8yEaVdRvnMdBypO0D93EEFysgsa
      snIGUlu6k7XrNlJxopub7r6fgYnhsj6A5OhgxZqtJGdko/VYWLF0MSGphQyVmzYHAiL6MWJw
      NjarDUFnZMr0m8lJjpJ9RhetLlBNeTHb9pTi1RjIHTKC3PR+ivVsJK+bA7u3cPBoLU4PjJp0
      JZn9IpT7SyLdHe109VhweyGuXz9FB27tR6+wuS2K3z54MwIiC/79J+qDhvLz2XK57xI1pdt5
      fd4XzLx2PO+99wEOIZBHn3yK9GjfuqMAHY3HWbe3ijE5Ubwz5xOiBozmthmTkMmFA04WgW1u
      bcfpdGIMCicmPPicjqrD2k1reydOl4uwqHhCzlHAtrOhgv+8+S6NXQ7QGLhixiymjBio0F+i
      saqMzTv24/BAZl4RQ3LS5Nc+A8vefYEtjYFc0d/EziYjfie2EjHiDsU8Jmv7CVZvPciIQSl8
      NPcjjIkF3H3L1fjJpIdKopt1Sz9i2cb9gERUaj733nULEQo+QFvNIV79z4dMnXEjS+a8TYdT
      4AcPP0mhzIh0UUYASfRQV11F/8LRWOtKOVh5grTMLEyyZfokmqoOsmDVLiaMymfVZ4vZWVJF
      /tAiAmRnXiRKd6xhzqpi0gOtvPSP1yk+3snQoYPQyzy8sJAAPl/wEUeqGijZtYFNxfXMuuMO
      ouQ28JAkPn7rZYIGXIG3didRQ2/A1Lwda1AWA5JkZju8Vv75lz/RYUqgpXglhsR8dq9aSOqw
      K4gM8P0yui0tvPPG62jCk9i48G3mL1lFVHoB/SLklau97ghvvDufhKR43nn1ZVZt3k//gkLF
      hSUajYBoiuCmaybS3ngCTUAk/VPlPzySJNFQW0Vc/0JM9gZ2F5eTkJ6tWNdox/pl+KcNpadi
      OxmjZ+Cq3Ys3LIuCTJlkQ9HJe6/8heOuMBzHt2MPy6J8wwIi8yYSH+p73wVBQ1JGDhMmTWZk
      UT6RkTEkxEUqVqlY/clbtAfm0E+qwRpZSH//Fo7ZAikakOx7T2SP0MvsX/sxr7z3GRX7NrG2
      pIH2o1tZsm6PfGfRw+IP3yMocSClO9ZRdMOPiHYdYc/hE/L9nW28N2cRuYPyWLV8NbN/9FPa
      KrZxrFHefg3pl8Ofn/0/inIzyMwdzjPPPsvABPliUXAyWGPvbmRvaT3pCWG0dzlPZm/KymKl
      vtvF+OE57K/oYeLoIZj9wGaT37N4z7qllHWZCLQdoy1gIDeMSmHtpu2KsqxYMAcxNJW64k2k
      TZxNdlAn24sr5TuLTt59+S+s3V3O+k8/pEsTwJoPX6O0Wd6Xqi1ey5//MZeaimI+WrUPoauC
      uUu+UJRl5LhJHFg5h8O2GKIdB9lZp2F0ocKsmsfJiZYORowYTGllE2PHjCAkQIfF6pTtbm2p
      4qnHfsqSddv565+e4+1//oX3Pt+mKItGo8Ft72HHrhKys5JoaevGrFAc+aIoQHV1FQNHTsLa
      UE7eiMlkJ0fT0alc58Xj8WLWezhY0UJmYhQOl4ROrswbnKwLJAnoPe1UdvuTEHhy50itwsoL
      j9PCts2biUjKounILv752r+oalFItBIErr7pdpwnyskYOx1dUzEB2RMYnZsk398UyqjcFP7z
      9+eIyhvDwfVLcAdnkSmTBnHyOj34mcwcPlBMdk42Fqv91IyTwn3xejD5aThwqJL+GcnYnR7l
      ++Kycry5k2lTxnHwaAvTpk4mPEhLR5f8h6Gmqop+ucMJsNWTNGgUg/on09HZKdsXICV/PH95
      4e888+sHyc4fx1+efZr0GIUlpnp/RhTmM/+fzyPF5NFcvJImIZE8mcK4AEf2bcMTlU9BuA0x
      vpDbrh3LodIyRVnGXTWTYGc9gdkTSNE00OWfzpWj5atDXxQTCEcHSz/9nOMtTiYOS2fJ5xsY
      f9X1pMTIFaPSEB5sZvnST0kccgWh1lLKbdHcdPU4+crGehOBQg+fLlvHxOtnU7VzGYbkkUwd
      OVB29dG+tfP5cP1RMiMFNpf3kOzXSmm7XsHBEggIjWbU2HHkZSUTlZDJyMI8jEovnaAlM28I
      Q4YUMWF0IeFR8UyaNEHRqQ2PimD/hhW0aGK5akgs81YXc/vts4kMkl++GB4axLrlnxGQNpIs
      czM7agVuvX6qvGmo1dFSWcLylWvQxQwgSqxj+1ErN8+8Bn+Z+Iif4OKzRUsorW5lyoShLFq4
      lMIJ15KTIj+zIwgCeoMBnVaDTm/Az6BTTuITNKT2H0RhYSETx40kLDyaCZMnEx7gJ/s33U3H
      2bSrjLbGGtIGDaP+0A7E0DTGDJafIfMLCGX4qLEMyc0kNCqRMSOLFJMPL5oTXF9diTYwmiDB
      yvE2NzkZieeV4en1eNGcI51Atv85MiqXv/83SjyZDNSU0R47kZATayllAL+8W2kxR98giV5E
      NIpO59l4vV40mnPfF6/bTkVFNf1S02mvO4o2OJ64COVCAM11x3Fog4gLEiipaievv7IT3JtI
      XjurPl1MO6FcMyqLNxes5+ZbbyEu9PxqSZ2Ly35NcMORHfzpxbfQBMVzz80T+ecbH3D3I79j
      eNaFXxSv8u35OkUDzofLXgEkScLS1QF6M0aNm1aLh5jI0K+935bK95PLXgFULm/+P1bE61xw
      xL3ZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Temporary Map' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map Final' width='192'>
      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
      AEAZX0n4sI5xAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Tableau Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABnWAAAZ1gEY0crt
      AAACT0lEQVR4nO3WsW1CQRRFwf0IvhsAZPdfGQFGwkWsIzpAWltnJnrhTY70tjnnHBB1WD0A
      VjqOMcacczzut3Ha99V7eJNtO4zz5XP1jD/v+DpO+8e4XL9WbuGNfp7fqyf8C14g0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      vxVPDpEmBEm8AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard Final' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard Pie' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map Best' width='192'>
      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
      OvwDAvk/0+09rDMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
