<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0330.1916                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='45' min='1' />
      </column>
      <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
        <calculation class='tableau' formula='100' />
      </column>
    </datasource>
    <datasource caption='EstablishmentDetail+ (dat)' inline='true' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' version='9.2'>
      <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\dat.xlsx' interpretationMode='1' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
              <expression op='[Scores].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
                <expression op='[Geocode].[EstablishmentDetail_Id]' />
              </expression>
            </clause>
            <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
              <columns gridOrigin='A1:U1374:no:A1:U1374:1' header='yes' lost='0' outcome='1' processed='8177'>
                <column datatype='integer' name='FHRSID' ordinal='0' />
                <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
                <column datatype='string' name='BusinessName' ordinal='2' />
                <column datatype='string' name='BusinessType' ordinal='3' />
                <column datatype='integer' name='BusinessTypeID' ordinal='4' />
                <column datatype='string' name='AddressLine1' ordinal='5' />
                <column datatype='string' name='AddressLine2' ordinal='6' />
                <column datatype='string' name='AddressLine3' ordinal='7' />
                <column datatype='string' name='AddressLine4' ordinal='8' />
                <column datatype='string' name='PostCode' ordinal='9' />
                <column datatype='string' name='RatingValue' ordinal='10' />
                <column datatype='string' name='RatingKey' ordinal='11' />
                <column datatype='string' name='RatingDate' ordinal='12' />
                <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
                <column datatype='string' name='LocalAuthorityName' ordinal='14' />
                <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
                <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
                <column datatype='string' name='SchemeType' ordinal='18' />
                <column datatype='string' name='NewRatingPending' ordinal='19' />
                <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
              </columns>
            </relation>
            <relation name='Geocode' table='[Geocode$]' type='table'>
              <columns gridOrigin='A1:C1374:no:A1:C1374:1' header='yes' lost='0' outcome='1' processed='4041'>
                <column datatype='real' name='Longitude' ordinal='0' />
                <column datatype='real' name='Latitude' ordinal='1' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation name='Scores' table='[Scores$]' type='table'>
            <columns gridOrigin='A1:D1374:no:A1:D1374:1' header='yes' lost='0' outcome='1' processed='5297'>
              <column datatype='integer' name='Hygiene' ordinal='0' />
              <column datatype='integer' name='Structural' ordinal='1' />
              <column datatype='integer' name='ConfidenceInManagement' ordinal='2' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[ConfidenceInManagement]' value='[Scores].[ConfidenceInManagement]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (Geocode)]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id (Scores)]' value='[Scores].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Hygiene]' value='[Scores].[Hygiene]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
          <map key='[Structural]' value='[Scores].[Structural]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8177</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Geocode)]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4041</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hygiene</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hygiene]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Hygiene</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Structural</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Structural]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Structural</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfidenceInManagement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfidenceInManagement]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>ConfidenceInManagement</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Scores)]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Scores]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1374:no:A1:D1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5297</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
      <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
      </column>
      <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
      </column>
      <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
      </column>
      <column caption='Confidence In Management' datatype='integer' name='[ConfidenceInManagement]' role='dimension' type='ordinal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Geocode)' datatype='integer' name='[EstablishmentDetail_Id (Geocode)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Scores)' datatype='integer' name='[EstablishmentDetail_Id (Scores)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='integer' name='[FHRSID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code numeric' datatype='string' name='[Post Code (copy)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='tableau' formula='[PostCode]' />
      </column>
      <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating (string)' datatype='string' name='[Rating (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([RatingValue])' />
        <aliases>
          <alias key='%null%' value='Exempt' />
        </aliases>
      </column>
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
        </aliases>
      </column>
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
      <group caption='Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)' hidden='true' name='[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[AddressLine1]' />
          <groupfilter function='level-members' level='[AddressLine2]' />
          <groupfilter function='level-members' level='[BusinessName]' />
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type)' hidden='true' name='[Action (Business Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type,Rating Value)' hidden='true' name='[Action (Business Type,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating Value)' hidden='true' name='[Action (Latitude,Longitude,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating)' hidden='true' name='[Action (Latitude,Longitude,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating Value)' hidden='true' name='[Action (Post Code,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating)' hidden='true' name='[Action (Post Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.67828' measure-ordering='alphabetic' measure-percentage='0.274277' parameter-percentage='0.0474426' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BusinessType:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Takeaway/sandwich shop&quot;</bucket>
            </map>
            <map to='#2a2a2a'>
              <bucket>&quot;School/college/university&quot;</bucket>
            </map>
            <map to='#373737'>
              <bucket>&quot;Retailers - supermarkets/hypermarkets&quot;</bucket>
            </map>
            <map to='#464646'>
              <bucket>&quot;Retailers - other&quot;</bucket>
            </map>
            <map to='#555555'>
              <bucket>&quot;Restaurant/Cafe/Canteen&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;Pub/bar/nightclub&quot;</bucket>
            </map>
            <map to='#777777'>
              <bucket>&quot;Other catering premises&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;Mobile caterer&quot;</bucket>
            </map>
            <map to='#9b9b9b'>
              <bucket>&quot;Manufacturers/packers&quot;</bucket>
            </map>
            <map to='#aeaeae'>
              <bucket>&quot;Hotel/bed &amp; breakfast/guest house&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;Hospitals/Childcare/Caring Premises&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:RatingValue:nk]' type='palette'>
            <map to='#666666'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#a50f15'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>&quot;5&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Geocode (VisCWdata)' inline='true' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\VisCWdata.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Geocode].[EstablishmentDetail_Id]' />
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation name='Geocode' table='[Geocode$]' type='table'>
            <columns gridOrigin='A1:C1374:no:A1:C1374:0' header='yes' outcome='2'>
              <column datatype='real' name='Longitude' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
            </columns>
          </relation>
          <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
            <columns gridOrigin='A1:U1374:no:A1:U1374:0' header='yes' outcome='2'>
              <column datatype='string' name='FHRSID' ordinal='0' />
              <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
              <column datatype='string' name='BusinessName' ordinal='2' />
              <column datatype='string' name='BusinessType' ordinal='3' />
              <column datatype='integer' name='BusinessTypeID' ordinal='4' />
              <column datatype='string' name='AddressLine1' ordinal='5' />
              <column datatype='string' name='AddressLine2' ordinal='6' />
              <column datatype='string' name='AddressLine3' ordinal='7' />
              <column datatype='string' name='AddressLine4' ordinal='8' />
              <column datatype='string' name='PostCode' ordinal='9' />
              <column datatype='integer' name='RatingValue' ordinal='10' />
              <column datatype='string' name='RatingKey' ordinal='11' />
              <column datatype='string' name='RatingDate' ordinal='12' />
              <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
              <column datatype='string' name='LocalAuthorityName' ordinal='14' />
              <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
              <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
              <column datatype='string' name='SchemeType' ordinal='18' />
              <column datatype='string' name='NewRatingPending' ordinal='19' />
              <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (EstablishmentDetail)]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (EstablishmentDetail)]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (EstablishmentDetail)' datatype='integer' name='[EstablishmentDetail_Id (EstablishmentDetail)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='string' name='[FHRSID]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
          <groupfilter function='level-members' level='[none:Latitude:qk]' />
          <groupfilter function='level-members' level='[none:Longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.860236' measure-ordering='alphabetic' measure-percentage='0.0698819' parameter-percentage='0.0698819' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:RatingValue:ok]' type='palette'>
            <map to='#c7c7c7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>1</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>2</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>3</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>4</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>5</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' included-values='in-range'>
        <min>3</min>
        <max>45</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 4 (generated)' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Map Final' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action11]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Filter Business 1' name='[Action17]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q3' />
      <link caption='Filter Business 1' delimiter=',' escape='\' expression='tsl:Dashboard%20Final?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='FilterSum' name='[Action1]'>
      <source type='sheet' worksheet='Q2' />
      <link caption='FilterSum' delimiter=',' escape='\' expression='tsl:Q2?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter Quality' name='[Action3]'>
      <source datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' type='datasource'>
        <exclude-sheet name='Q2' />
      </source>
      <link caption='Filter Quality' delimiter=',' escape='\' expression='tsl:Q3?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BRatingValue%5D~s0=&lt;[RatingValue]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter Business' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q3' />
      <link caption='Filter Business' delimiter=',' escape='\' expression='tsl:Dashboard%20Pie?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q3' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='FilterSum 1' name='[Action7]'>
      <source type='sheet' worksheet='Q2Bar' />
      <link caption='FilterSum 1' delimiter=',' escape='\' expression='tsl:Q2Bar?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2Bar' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q2Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <datasources>
      <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
    </datasources>
    <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
        </aliases>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Map Final'>
      <table>
        <view>
          <datasources>
            <datasource caption='Geocode (VisCWdata)' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0axvv590qlybpc1amcgp80da5hh6'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
            <column-instance column='[AddressLine1]' derivation='None' name='[none:AddressLine1:nk]' pivot='key' type='nominal' />
            <column-instance column='[AddressLine2]' derivation='None' name='[none:AddressLine2:nk]' pivot='key' type='nominal' />
            <column-instance column='[BusinessName]' derivation='None' name='[none:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
                <groupfilter function='level-members' level='[none:Latitude:qk]' />
                <groupfilter function='level-members' level='[none:Longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='701' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='51.000307999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.388382' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='741' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='50.962072999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.303348' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='1227' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='50.923679999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.305723' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]'>
            <groupfilter function='level-members' level='[none:RatingValue:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]' field-type='quantitative' max='-145519.9296799188' min='-166521.41315847091' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]' field-type='quantitative' max='6613913.9250568906' min='6599874.5407174304' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Business Name:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;AddressLine1:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;AddressLine2:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Post Code:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Rating Value:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#820000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]</rows>
        <cols>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='84' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:13]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AddressLine1]' />
              <groupfilter function='level-members' level='[AddressLine2]' />
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='153' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='108' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='10692' />
                <format attr='maxwidth' value='10692' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AddressLine1]' />
              <groupfilter function='level-members' level='[AddressLine2]' />
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' direction='ASC' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='104' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' value='348' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='68' />
            <format attr='width-header' value='28' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='-90' />
            <format attr='text-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='right' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='10' />
            <format attr='wrap' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='on' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <text column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk] / [excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk])</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
    </worksheet>
    <worksheet name='Temporary Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessName]' derivation='Attribute' name='[attr:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='Attribute' name='[attr:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]' field-type='quantitative' max='-139885.93866856361' min='-171664.63317812566' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]' field-type='quantitative' max='6618372.6836745748' min='6596110.3991865171' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:BusinessName:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:PostCode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard Final'>
      <style />
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                  <zone h='74984' id='1' name='Q3' w='33794' x='66206' y='0' />
                  <zone h='25016' id='9' name='Q2Bar' w='87818' x='0' y='74984' />
                  <zone h='7448' id='13' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='12182' x='87818' y='74984' />
                  <zone h='17568' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='12182' x='87818' y='82432' />
                  <zone h='74984' id='14' name='Map Final' w='66206' x='0' y='0' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Pie'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='83705' id='1' name='Q3' w='34466' x='65534' y='0' />
              <zone h='16295' id='7' name='Q2' show-title='true' w='100000' x='0' y='83705' />
              <zone h='83705' id='8' name='Temporary Map' w='65534' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='16550' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='8627' x='1089' y='64799' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='76'>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='86'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temporary Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map Final'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine3:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine4:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessType:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:EstablishmentDetail_Id:ok]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard Final'>
      <viewpoints>
        <viewpoint name='Map Final'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2Bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard Pie'>
      <viewpoints>
        <viewpoint name='Q2'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q3' width='192'>
      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
      /wNLI079dTQc8AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2Bar' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Temporary Map' width='192'>
      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
      FI//Hw7nitHRtCnbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Pie' width='192'>
      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
      Dzo9YjlsLwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
