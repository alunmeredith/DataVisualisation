<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0330.1916                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='Min number of entries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='45' min='1' />
      </column>
      <column caption='Max % 5*' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='100'>
        <calculation class='tableau' formula='100' />
      </column>
    </datasource>
    <datasource caption='EstablishmentDetail+ (dat)' inline='true' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' version='9.2'>
      <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\dat.xlsx' interpretationMode='1' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
              <expression op='[Scores].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
                <expression op='[Geocode].[EstablishmentDetail_Id]' />
              </expression>
            </clause>
            <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
              <columns gridOrigin='A1:U1374:no:A1:U1374:1' header='yes' lost='0' outcome='1' processed='8177'>
                <column datatype='integer' name='FHRSID' ordinal='0' />
                <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
                <column datatype='string' name='BusinessName' ordinal='2' />
                <column datatype='string' name='BusinessType' ordinal='3' />
                <column datatype='integer' name='BusinessTypeID' ordinal='4' />
                <column datatype='string' name='AddressLine1' ordinal='5' />
                <column datatype='string' name='AddressLine2' ordinal='6' />
                <column datatype='string' name='AddressLine3' ordinal='7' />
                <column datatype='string' name='AddressLine4' ordinal='8' />
                <column datatype='string' name='PostCode' ordinal='9' />
                <column datatype='string' name='RatingValue' ordinal='10' />
                <column datatype='string' name='RatingKey' ordinal='11' />
                <column datatype='string' name='RatingDate' ordinal='12' />
                <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
                <column datatype='string' name='LocalAuthorityName' ordinal='14' />
                <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
                <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
                <column datatype='string' name='SchemeType' ordinal='18' />
                <column datatype='string' name='NewRatingPending' ordinal='19' />
                <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
              </columns>
            </relation>
            <relation name='Geocode' table='[Geocode$]' type='table'>
              <columns gridOrigin='A1:C1374:no:A1:C1374:1' header='yes' lost='0' outcome='1' processed='4041'>
                <column datatype='real' name='Longitude' ordinal='0' />
                <column datatype='real' name='Latitude' ordinal='1' />
                <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
              </columns>
            </relation>
          </relation>
          <relation name='Scores' table='[Scores$]' type='table'>
            <columns gridOrigin='A1:D1374:no:A1:D1374:1' header='yes' lost='0' outcome='1' processed='5297'>
              <column datatype='integer' name='Hygiene' ordinal='0' />
              <column datatype='integer' name='Structural' ordinal='1' />
              <column datatype='integer' name='ConfidenceInManagement' ordinal='2' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[ConfidenceInManagement]' value='[Scores].[ConfidenceInManagement]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (Geocode)]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id (Scores)]' value='[Scores].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Hygiene]' value='[Scores].[Hygiene]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
          <map key='[Structural]' value='[Scores].[Structural]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8177</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Geocode)]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>4041</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hygiene</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hygiene]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Hygiene</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Structural</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Structural]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>Structural</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfidenceInManagement</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfidenceInManagement]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>ConfidenceInManagement</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (Scores)]</local-name>
            <parent-name>[Scores]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Scores]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D1374:no:A1:D1374:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>5297</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
      <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Number of Records]) / TOTAL(SUM([Number of Records]))'>
          <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
      </column>
      <column caption='Percentage of postcode' datatype='real' name='[Calculation_181551367969415169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 * { FIXED [PostCode], [RatingValue] : SUM([Number of Records]) } &#13;&#10;/ [Calculation_181551367968612352]' />
      </column>
      <column caption='PoP R5' datatype='real' name='[Calculation_181551367974154243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [RatingValue] == 5&#13;&#10;THEN [Calculation_181551367969415169]&#13;&#10;ELSE 100&#13;&#10;END' />
      </column>
      <column caption='Confidence In Management' datatype='integer' name='[ConfidenceInManagement]' role='dimension' type='ordinal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Geocode)' datatype='integer' name='[EstablishmentDetail_Id (Geocode)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (Scores)' datatype='integer' name='[EstablishmentDetail_Id (Scores)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='integer' name='[FHRSID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code numeric' datatype='string' name='[Post Code (copy)]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
        <calculation class='tableau' formula='[PostCode]' />
      </column>
      <column caption='Post Code Area' datatype='string' name='[PostCode - Split 1]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[PostCode]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [PostCode], &quot; &quot;, 1 ) )' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating (string)' datatype='string' name='[Rating (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([RatingValue])' />
        <aliases>
          <alias key='%null%' value='Exempt' />
        </aliases>
      </column>
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
        </aliases>
      </column>
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
      <group caption='Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)' hidden='true' name='[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[AddressLine1]' />
          <groupfilter function='level-members' level='[AddressLine2]' />
          <groupfilter function='level-members' level='[BusinessName]' />
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type)' hidden='true' name='[Action (Business Type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Type,Rating Value)' hidden='true' name='[Action (Business Type,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BusinessType]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating Value)' hidden='true' name='[Action (Latitude,Longitude,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,Rating)' hidden='true' name='[Action (Latitude,Longitude,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating Value)' hidden='true' name='[Action (Post Code,Rating Value)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <group caption='Action (Post Code,Rating)' hidden='true' name='[Action (Post Code,Rating)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
          <groupfilter function='level-members' level='[RatingValue]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.647577' measure-ordering='alphabetic' measure-percentage='0.305433' parameter-percentage='0.0469897' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:BusinessType:nk]' type='palette'>
            <map to='#1e1e1e'>
              <bucket>&quot;Takeaway/sandwich shop&quot;</bucket>
            </map>
            <map to='#2a2a2a'>
              <bucket>&quot;School/college/university&quot;</bucket>
            </map>
            <map to='#373737'>
              <bucket>&quot;Retailers - supermarkets/hypermarkets&quot;</bucket>
            </map>
            <map to='#464646'>
              <bucket>&quot;Retailers - other&quot;</bucket>
            </map>
            <map to='#555555'>
              <bucket>&quot;Restaurant/Cafe/Canteen&quot;</bucket>
            </map>
            <map to='#666666'>
              <bucket>&quot;Pub/bar/nightclub&quot;</bucket>
            </map>
            <map to='#777777'>
              <bucket>&quot;Other catering premises&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;Mobile caterer&quot;</bucket>
            </map>
            <map to='#9b9b9b'>
              <bucket>&quot;Manufacturers/packers&quot;</bucket>
            </map>
            <map to='#aeaeae'>
              <bucket>&quot;Hotel/bed &amp; breakfast/guest house&quot;</bucket>
            </map>
            <map to='#c3c3c3'>
              <bucket>&quot;Hospitals/Childcare/Caring Premises&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:RatingValue:nk]' type='palette'>
            <map to='#666666'>
              <bucket>&quot;AwaitingInspection&quot;</bucket>
            </map>
            <map to='#a50f15'>
              <bucket>&quot;0&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Exempt&quot;</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>&quot;5&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Geocode (VisCWdata)' inline='true' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' version='9.2'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\inbre\Documents\Southampton\Term2\DataVisualisation\TableuxCoursework\VisCWdata.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Geocode].[EstablishmentDetail_Id]' />
              <expression op='[EstablishmentDetail].[EstablishmentDetail_Id]' />
            </expression>
          </clause>
          <relation name='Geocode' table='[Geocode$]' type='table'>
            <columns gridOrigin='A1:C1374:no:A1:C1374:0' header='yes' outcome='2'>
              <column datatype='real' name='Longitude' ordinal='0' />
              <column datatype='real' name='Latitude' ordinal='1' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='2' />
            </columns>
          </relation>
          <relation name='EstablishmentDetail' table='[EstablishmentDetail$]' type='table'>
            <columns gridOrigin='A1:U1374:no:A1:U1374:0' header='yes' outcome='2'>
              <column datatype='string' name='FHRSID' ordinal='0' />
              <column datatype='string' name='LocalAuthorityBusinessID' ordinal='1' />
              <column datatype='string' name='BusinessName' ordinal='2' />
              <column datatype='string' name='BusinessType' ordinal='3' />
              <column datatype='integer' name='BusinessTypeID' ordinal='4' />
              <column datatype='string' name='AddressLine1' ordinal='5' />
              <column datatype='string' name='AddressLine2' ordinal='6' />
              <column datatype='string' name='AddressLine3' ordinal='7' />
              <column datatype='string' name='AddressLine4' ordinal='8' />
              <column datatype='string' name='PostCode' ordinal='9' />
              <column datatype='integer' name='RatingValue' ordinal='10' />
              <column datatype='string' name='RatingKey' ordinal='11' />
              <column datatype='string' name='RatingDate' ordinal='12' />
              <column datatype='integer' name='LocalAuthorityCode' ordinal='13' />
              <column datatype='string' name='LocalAuthorityName' ordinal='14' />
              <column datatype='string' name='LocalAuthorityWebSite' ordinal='15' />
              <column datatype='string' name='LocalAuthorityEmailAddress' ordinal='16' />
              <column datatype='integer' name='EstablishmentDetail_Id' ordinal='17' />
              <column datatype='string' name='SchemeType' ordinal='18' />
              <column datatype='string' name='NewRatingPending' ordinal='19' />
              <column datatype='integer' name='EstablishmentCollection_Id' ordinal='20' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AddressLine1]' value='[EstablishmentDetail].[AddressLine1]' />
          <map key='[AddressLine2]' value='[EstablishmentDetail].[AddressLine2]' />
          <map key='[AddressLine3]' value='[EstablishmentDetail].[AddressLine3]' />
          <map key='[AddressLine4]' value='[EstablishmentDetail].[AddressLine4]' />
          <map key='[BusinessName]' value='[EstablishmentDetail].[BusinessName]' />
          <map key='[BusinessTypeID]' value='[EstablishmentDetail].[BusinessTypeID]' />
          <map key='[BusinessType]' value='[EstablishmentDetail].[BusinessType]' />
          <map key='[EstablishmentCollection_Id]' value='[EstablishmentDetail].[EstablishmentCollection_Id]' />
          <map key='[EstablishmentDetail_Id (EstablishmentDetail)]' value='[EstablishmentDetail].[EstablishmentDetail_Id]' />
          <map key='[EstablishmentDetail_Id]' value='[Geocode].[EstablishmentDetail_Id]' />
          <map key='[FHRSID]' value='[EstablishmentDetail].[FHRSID]' />
          <map key='[Latitude]' value='[Geocode].[Latitude]' />
          <map key='[LocalAuthorityBusinessID]' value='[EstablishmentDetail].[LocalAuthorityBusinessID]' />
          <map key='[LocalAuthorityCode]' value='[EstablishmentDetail].[LocalAuthorityCode]' />
          <map key='[LocalAuthorityEmailAddress]' value='[EstablishmentDetail].[LocalAuthorityEmailAddress]' />
          <map key='[LocalAuthorityName]' value='[EstablishmentDetail].[LocalAuthorityName]' />
          <map key='[LocalAuthorityWebSite]' value='[EstablishmentDetail].[LocalAuthorityWebSite]' />
          <map key='[Longitude]' value='[Geocode].[Longitude]' />
          <map key='[NewRatingPending]' value='[EstablishmentDetail].[NewRatingPending]' />
          <map key='[PostCode]' value='[EstablishmentDetail].[PostCode]' />
          <map key='[RatingDate]' value='[EstablishmentDetail].[RatingDate]' />
          <map key='[RatingKey]' value='[EstablishmentDetail].[RatingKey]' />
          <map key='[RatingValue]' value='[EstablishmentDetail].[RatingValue]' />
          <map key='[SchemeType]' value='[EstablishmentDetail].[SchemeType]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id]</local-name>
            <parent-name>[Geocode]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Geocode]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1374:no:A1:C1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FHRSID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FHRSID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>FHRSID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityBusinessID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityBusinessID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityBusinessID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessName</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[BusinessType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessType</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BusinessTypeID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BusinessTypeID]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>BusinessTypeID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine1]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine1</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine2]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine3]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AddressLine4</remote-name>
            <remote-type>130</remote-type>
            <local-name>[AddressLine4]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>AddressLine4</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PostCode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PostCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>PostCode</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingValue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RatingValue]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingValue</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingKey</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingKey]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingKey</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RatingDate</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RatingDate]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>RatingDate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[LocalAuthorityCode]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityCode</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityName]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityName</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityWebSite</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityWebSite]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityWebSite</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalAuthorityEmailAddress</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalAuthorityEmailAddress]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>LocalAuthorityEmailAddress</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentDetail_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentDetail_Id (EstablishmentDetail)]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentDetail_Id</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SchemeType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[SchemeType]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>SchemeType</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NewRatingPending</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NewRatingPending]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>NewRatingPending</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EstablishmentCollection_Id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EstablishmentCollection_Id]</local-name>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias>EstablishmentCollection_Id</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EstablishmentDetail]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U1374:no:A1:U1374:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
      <column caption='Business Type ID' datatype='integer' name='[BusinessTypeID]' role='dimension' type='ordinal' />
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='EstablishmentCollection Id' datatype='integer' name='[EstablishmentCollection_Id]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id (EstablishmentDetail)' datatype='integer' name='[EstablishmentDetail_Id (EstablishmentDetail)]' role='dimension' type='ordinal' />
      <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
      <column caption='Fhrsid' datatype='string' name='[FHRSID]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Authority Business ID' datatype='string' name='[LocalAuthorityBusinessID]' role='dimension' type='nominal' />
      <column caption='Local Authority Code' datatype='integer' name='[LocalAuthorityCode]' role='dimension' type='ordinal' />
      <column caption='Local Authority Email Address' datatype='string' name='[LocalAuthorityEmailAddress]' role='dimension' type='nominal' />
      <column caption='Local Authority Name' datatype='string' name='[LocalAuthorityName]' role='dimension' type='nominal' />
      <column caption='Local Authority Web Site' datatype='string' name='[LocalAuthorityWebSite]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='New Rating Pending' datatype='string' name='[NewRatingPending]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating Date' datatype='string' name='[RatingDate]' role='dimension' type='nominal' />
      <column caption='Rating Key' datatype='string' name='[RatingKey]' role='dimension' type='nominal' />
      <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
      <column caption='Scheme Type' datatype='string' name='[SchemeType]' role='dimension' type='nominal' />
      <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Post Code)' hidden='true' name='[Action (Post Code)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[PostCode]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
          <groupfilter function='level-members' level='[none:Latitude:qk]' />
          <groupfilter function='level-members' level='[none:Longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.725404' measure-ordering='alphabetic' measure-percentage='0.137298' parameter-percentage='0.137298' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:RatingValue:ok]' type='palette'>
            <map to='#c7c7c7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#de2d26'>
              <bucket>1</bucket>
            </map>
            <map to='#fb6a4a'>
              <bucket>2</bucket>
            </map>
            <map to='#fc9272'>
              <bucket>3</bucket>
            </map>
            <map to='#fcbba1'>
              <bucket>4</bucket>
            </map>
            <map to='#fee5d9'>
              <bucket>5</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 4 (generated)' name='[Action10]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Map Final' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Highlight3' name='[Action11]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Filter Business 1' name='[Action17]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q3' />
      <link caption='Filter Business 1' delimiter=',' escape='\' expression='tsl:Dashboard%20Final?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='FilterSum' name='[Action1]'>
      <source type='sheet' worksheet='Q2' />
      <link caption='FilterSum' delimiter=',' escape='\' expression='tsl:Q2?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q3' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter Quality' name='[Action3]'>
      <source datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' type='datasource'>
        <exclude-sheet name='Q2' />
      </source>
      <link caption='Filter Quality' delimiter=',' escape='\' expression='tsl:Q3?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BRatingValue%5D~s0=&lt;[RatingValue]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='target' value='Q3' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' />
      <command command='tsc:brush'>
        <param name='exclude' value='Q2Bar' />
        <param name='field-captions' value='Business Type' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <action caption='Filter Business' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q3' />
      <link caption='Filter Business' delimiter=',' escape='\' expression='tsl:Dashboard%20Pie?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BBusinessType%5D~s0=&lt;[BusinessType]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Q3' />
        <param name='single-select' value='' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Q2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='FilterSum 1' name='[Action7]'>
      <source type='sheet' worksheet='Q2Bar' />
      <link caption='FilterSum 1' delimiter=',' escape='\' expression='tsl:Q2Bar?%5Bexcel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t%5D.%5BPostCode%5D~s0=&lt;[PostCode]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Q2Bar' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Pie' type='sheet' worksheet='Temporary Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Pie' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Final' type='sheet' worksheet='Q2Bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Final' />
      </command>
    </action>
    <datasources>
      <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
    </datasources>
    <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
      <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
      <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
        <aliases>
          <alias key='%null%' value='Exempt' />
          <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
        </aliases>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Map Final'>
      <table>
        <view>
          <datasources>
            <datasource caption='Geocode (VisCWdata)' name='excel-direct.0axvv590qlybpc1amcgp80da5hh6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.0axvv590qlybpc1amcgp80da5hh6'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='EstablishmentDetail Id' datatype='integer' name='[EstablishmentDetail_Id]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating Value' datatype='integer' name='[RatingValue]' role='dimension' type='ordinal' />
            <column-instance column='[AddressLine1]' derivation='None' name='[none:AddressLine1:nk]' pivot='key' type='nominal' />
            <column-instance column='[AddressLine2]' derivation='None' name='[none:AddressLine2:nk]' pivot='key' type='nominal' />
            <column-instance column='[BusinessName]' derivation='None' name='[none:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[EstablishmentDetail_Id]' derivation='None' name='[none:EstablishmentDetail_Id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Action (Post Code)]'>
            <groupfilter function='level-members' level='[PostCode]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:EstablishmentDetail_Id:ok]' />
                <groupfilter function='level-members' level='[none:Latitude:qk]' />
                <groupfilter function='level-members' level='[none:Longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='701' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='51.000307999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.388382' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='741' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='50.962072999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.303348' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:EstablishmentDetail_Id:ok]' member='1227' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Latitude:qk]' member='50.923679999999997' />
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-1.305723' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]'>
            <groupfilter function='level-members' level='[none:RatingValue:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Exclusions (EstablishmentDetail Id,Latitude,Longitude)]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</column>
            <column>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[Action (Post Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]' field-type='quantitative' max='-145519.9296799188' min='-166521.41315847091' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]' field-type='quantitative' max='6613913.9250568906' min='6599874.5407174304' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='true' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='true' />
            <format attr='enabled' id='light_pp2_statelabels' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='true' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]' />
              <lod column='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Business Name:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;AddressLine1:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;AddressLine2:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Post Code:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Rating Value:&#9;</run>
                <run bold='true'>&lt;[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#820000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]</rows>
        <cols>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Quality Distribution by Post Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='98' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='84' />
            <format attr='height-header' value='36' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='7' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <size column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q2Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
            </column>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PostCode]' derivation='None' name='[none:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:13]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AddressLine1]' />
              <groupfilter function='level-members' level='[AddressLine2]' />
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[BusinessType]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' direction='DESC' using='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' included-values='in-range'>
            <min>7</min>
            <max>45</max>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='153' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' field-type='quantitative' major-origin='0.0' major-spacing='0.20000000000000001' max='1.0' min='0.0' minor-show='false' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' scope='rows' value='true' />
            <format attr='title' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' scope='rows' value='% Rating' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='108' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='71' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' value='7' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]' value='-90' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]' value='12' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='10692' />
                <format attr='maxwidth' value='10692' />
                <format attr='minheight' value='404' />
                <format attr='maxheight' value='404' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Q3'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column datatype='string' name='[AddressLine1]' role='dimension' type='nominal' />
            <column datatype='string' name='[AddressLine2]' role='dimension' type='nominal' />
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessType]' derivation='None' name='[none:BusinessType:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:10]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[BusinessType]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[AddressLine1]' />
              <groupfilter function='level-members' level='[AddressLine2]' />
              <groupfilter function='level-members' level='[BusinessName]' />
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[PostCode]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <sort class='alphabetic' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' direction='ASC' />
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[:Measure Names]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Latitude,Longitude,Rating)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (AddressLine1,AddressLine2,Business Name,Latitude,Longitude,Post Code)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='104' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' field-type='quantitative' major-origin='0.0' major-spacing='0.10000000000000001' max='1.0' min='0.0' minor-show='false' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk]' value='348' />
            <format attr='height-header' value='36' />
            <format attr='width' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='68' />
            <format attr='width-header' value='28' />
            <format attr='vertical-align' data-class='subtotal' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='center' />
            <format attr='text-orientation' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='-90' />
            <format attr='text-align' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='right' />
            <format attr='font-size' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='10' />
            <format attr='wrap' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' value='on' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <text column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='120' />
                <format attr='maxwidth' value='120' />
                <format attr='minheight' value='1250' />
                <format attr='maxheight' value='1250' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk] / [excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessType:nk])</rows>
        <cols include-empty='true'>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
    </worksheet>
    <worksheet name='Temporary Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
            <column caption='Business Name' datatype='string' name='[BusinessName]' role='dimension' type='nominal' />
            <column caption='Business Type' datatype='string' name='[BusinessType]' role='dimension' type='nominal' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Post Code' datatype='string' name='[PostCode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column caption='Rating' datatype='string' name='[RatingValue]' role='dimension' type='nominal'>
              <aliases>
                <alias key='%null%' value='Exempt' />
                <alias key='&quot;AwaitingInspection&quot;' value='Awaiting Inspection' />
              </aliases>
            </column>
            <column-instance column='[BusinessName]' derivation='Attribute' name='[attr:BusinessName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PostCode]' derivation='Attribute' name='[attr:PostCode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RatingValue]' derivation='None' name='[none:RatingValue:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]'>
            <groupfilter function='level-members' level='[BusinessType]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[PostCode]' />
              <groupfilter function='level-members' level='[RatingValue]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating Value)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Business Type)]</column>
            <column>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[Action (Post Code,Rating)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]' field-type='quantitative' max='-139885.93866856361' min='-171664.63317812566' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]' field-type='quantitative' max='6618372.6836745748' min='6596110.3991865171' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:BusinessName:nk]' />
              <tooltip column='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[attr:PostCode:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Latitude:qk]</rows>
        <cols>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Longitude:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard Final'>
      <style />
      <datasources>
        <datasource caption='EstablishmentDetail+ (dat)' name='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t' />
      </datasources>
      <datasource-dependencies datasource='excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t'>
        <column caption='Entries Per Postcode' datatype='integer' name='[Calculation_181551367968612352]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='{ FIXED [PostCode] : SUM([Number of Records]) }' />
        </column>
        <column-instance column='[Calculation_181551367968612352]' derivation='Sum' name='[sum:Calculation_181551367968612352:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='16' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='11' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
                <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
                  <zone h='72884' id='1' name='Q3' w='33794' x='66206' y='0' />
                  <zone h='27116' id='9' name='Q2Bar' w='87818' x='0' y='72884' />
                  <zone h='9548' id='13' name='Q2Bar' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='12182' x='87818' y='72884' />
                  <zone h='17568' id='6' name='Q3' pane-specification-id='3' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='12182' x='87818' y='82432' />
                  <zone h='72884' id='14' name='Map Final' w='66206' x='0' y='0' />
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard Pie'>
      <style />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone fixed-size='2343' h='100000' id='3' is-fixed='true' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='83705' id='1' name='Q3' w='34466' x='65534' y='0' />
              <zone h='16295' id='7' name='Q2' show-title='true' w='100000' x='0' y='83705' />
              <zone h='83705' id='8' name='Temporary Map' w='65534' x='0' y='0' />
            </zone>
          </zone>
        </zone>
        <zone h='16550' id='6' name='Q3' pane-specification-id='1' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' w='8627' x='1089' y='64799' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='76'>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:10]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:Rating (copy):nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Q2Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='86'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[sum:Calculation_181551367968612352:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Temporary Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:BusinessName:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:PostCode:nk]</field>
            <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map Final'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine1:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine2:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine3:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:AddressLine4:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessName:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:BusinessType:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:EstablishmentDetail_Id:ok]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Latitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:Longitude:qk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:PostCode:nk]</field>
            <field>[excel-direct.0axvv590qlybpc1amcgp80da5hh6].[none:RatingValue:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard Final'>
      <viewpoints>
        <viewpoint name='Map Final'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q2Bar'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[pcto:sum:Number of Records:qk:13]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='9' />
    </window>
    <window class='dashboard' name='Dashboard Pie'>
      <viewpoints>
        <viewpoint name='Q2'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
          <highlight field='[excel-direct.1t1zc4a0d8ush918ye3pq0wa5v2t].[none:RatingValue:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Temporary Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Q3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
      xtdoAWh8zf8HDY4fnHC1Qi0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q2Bar' width='192'>
      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
      7gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Temporary Map' width='192'>
      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
      SiGe5oX7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Pie' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
